{"version":3,"sources":["xlsform-simple-schema/types/AppearanceAttributeFlags.ts","xlsform-simple-schema/functions/odk-formulas/evaluation/XPath.ts","xlsform-simple-schema/types/Errors.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/types.ts","xlsform-simple-schema/functions/odk-formulas/odk-formula-parser/ODKFormulaLexer.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/InfixParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/PrefixParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/Parser.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/NameExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/OperatorExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/BinaryOperatorParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/CallExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/CallParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/ConditionalExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/ConditionalParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/GroupExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/GroupParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/NameParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/PostfixExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/PostfixOperatorParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/PrefixExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/PrefixOperatorParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/index.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/LiteralExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/LiteralParselet.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/SelectorExpression.ts","xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/parselets/SelectorParselet.ts","xlsform-simple-schema/functions/odk-formulas/odk-formula-parser/ODKFormulaPrecedence.ts","xlsform-simple-schema/functions/odk-formulas/odk-formula-parser/ODKFormulaParser.ts","xlsform-simple-schema/types/RowSchemas.ts","xlsform-simple-schema/types/RowTypes.ts","xlsform-simple-schema/functions/loadSurveyFromXLSX.ts","xlsform-simple-schema/functions/nestSurvey.ts","xlsform-simple-schema/types/XLSForm.ts","xlsform-simple-schema/functions/loadFormFromExcelWorkbook.ts","xlsform-simple-schema/functions/editing/loadEmptyXLSFormWorkbook.tsx","xlsform-simple-schema/functions/editing/createEmptyXLSForm.tsx","components/ExcelFileInput.tsx","components/AppEmptyState.tsx","lib/undo/UndoContext.ts","lib/undo/createUndoHistoryContext.ts","components/core/Markdown.tsx","components/core/unindent.ts","components/EditMenuButton.tsx","xlsform-simple-schema/functions/editing/saveXLSForm.tsx","components/FileMenuButton.tsx","components/hooks/useSettingsDialog.tsx","components/LanguageSelector.tsx","xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationContext.ts","lib/ODKSurveyContext.ts","components/survey/fields/EditableSurveyTitle.tsx","components/AppNavBar.tsx","components/core/BlueprintDarkModeContainer.tsx","components/core/composeContexts.tsx","toaster.ts","lib/undo/mergeCommands.tsx","xlsform-simple-schema/types/ODKNode.ts","xlsform-simple-schema/functions/getLastRowIndexOfNode.ts","xlsform-simple-schema/functions/editing/createLocalizedString.tsx","xlsform-simple-schema/functions/editing/spliceRowsInWorksheet.ts","xlsform-simple-schema/functions/editing/addExampleChoices.tsx","xlsform-simple-schema/functions/editing/createUntitledFieldRow.tsx","xlsform-simple-schema/functions/editing/createUntitledGroupRows.tsx","xlsform-simple-schema/functions/editing/addNodeToXLSForm.tsx","xlsform-simple-schema/functions/editing/findOrReplaceFieldReferences.ts","xlsform-simple-schema/functions/odk-formulas/evaluation/createLiteralExpressionFromValue.ts","lib/addIndefiniteArticle.ts","xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaFunctions.ts","xlsform-simple-schema/functions/odk-formulas/evaluation/evaluateExpression.ts","xlsform-simple-schema/functions/odk-formulas/evaluation/evaluateODKFormula.ts","xlsform-simple-schema/functions/odk-formulas/evaluation/evaluateNodeColumn.ts","xlsform-simple-schema/functions/odk-formulas/evaluation/evaluateNodeAndChildren.ts","xlsform-simple-schema/types/describeNode.tsx","components/odk/HighlightedExpression/StyledCode.tsx","lib/colors.ts","xlsform-simple-schema/types/getEmptyNode.ts","lib/ODKNodeContext.ts","xlsform-simple-schema/field-types/fieldTypesToIcons.tsx","xlsform-simple-schema/field-types/internalFieldTypes.ts","xlsform-simple-schema/functions/getFirstColumnNameWithError.tsx","xlsform-simple-schema/types/assertIsODKNode.tsx","components/survey/useNodeDragAndDrop.tsx","components/core/StyledMarkdown.tsx","components/survey/FieldPopoverButton/DefaultValueExplanation.tsx","components/survey/FieldPopoverButton/FormulaResultMeaning.tsx","components/survey/FieldPopoverButton/ExpressionPanel.tsx","components/survey/FieldPopoverButton/FieldPathBreadcrumbs.tsx","xlsform-simple-schema/field-types/fieldTypeNames.tsx","components/survey/FieldPopoverButton/ChoiceListMenu.tsx","xlsform-simple-schema/field-types/fieldCategoriesToIcons.tsx","xlsform-simple-schema/field-types/fieldCategoryNames.tsx","xlsform-simple-schema/field-types/fieldTypesToCategories.tsx","components/survey/FieldPopoverButton/FieldTypeMenu.tsx","components/survey/FieldPopoverButton/SetFieldTypeMenu.tsx","components/survey/FieldPopoverButton/FieldTypeButtonGroup.tsx","components/survey/FieldPopoverButton/NoChoicesState.tsx","components/survey/FieldPopoverButton/NodeReferencesMenu.tsx","components/survey/AddFieldMenuItem.tsx","components/survey/FieldPopoverButton/NodeActionMenuItems.tsx","components/hooks/useNodeDeletionDialog.tsx","components/hooks/useRenameNodeDialog.tsx","components/survey/FieldPopoverButton/FieldPopoverButton.tsx","lib/rdf/namespaces.ts","lib/rdf/getClassMetadata.ts","lib/rdf/getPropertyMetadata.ts","components/rdf/RDFGraphContext.tsx","components/rdf/RDFPrefixedNodeName.tsx","components/rdf/RDFClassMetadata.tsx","lib/rdf/getFirstClassOrPropertyNodeWithName.ts","components/odk/HighlightedExpression/ObjectLiteral.tsx","components/odk/HighlightedExpression/TokenElement.tsx","components/odk/HighlightedExpression/InvalidExpression.tsx","components/odk/HighlightedExpression/HighlightedODKExpression.tsx","components/hooks/useChangeHooks.tsx","xlsform-simple-schema/functions/editing/patchXLSFormCell.ts","xlsform-simple-schema/functions/editing/removeNodeAndChildren.tsx","xlsform-simple-schema/functions/editing/renameNode.tsx","xlsform-simple-schema/functions/editing/nestNode.tsx","xlsform-simple-schema/functions/editing/ungroupNode.tsx","xlsform-simple-schema/functions/editing/moveNode.tsx","components/OverflowScrollContainer.tsx","lib/rdf/getClassAncestors.ts","lib/rdf/getClassProperties.ts","lib/getHumanEnumeration.tsx","lib/rdf/guessQuestionWording.tsx","lib/rdf/isClassNode.ts","components/core/ErrorBoundary.tsx","components/rdf/RDFClassNodeButtonWithPopover.tsx","components/rdf/RDFModelTree.tsx","components/result-code/ResultCodeTree.tsx","components/survey/NoSurveyFieldsState.tsx","components/survey/fields/BooleanField.tsx","components/survey/fields/CalculateField.tsx","xlsform-simple-schema/functions/schema-creation/getAllowedChoiceValues.ts","xlsform-simple-schema/functions/schema-creation/evaluateDynamicChoiceListName.ts","xlsform-simple-schema/functions/schema-creation/evaluateFilteredChoiceNames.ts","components/survey/fields/CheckboxGroupField.tsx","components/survey/fields/DateField.tsx","components/survey/fields/EditableFieldHint.tsx","components/survey/fields/EditableFieldLabel.tsx","lib/images/ImageResizer.ts","lib/images/uploadPhoto.ts","components/survey/fields/FileUploadField.tsx","xlsform-simple-schema/functions/schema-creation/geometry/SchemaOrgGeometry.ts","components/survey/fields/GeoPointField.tsx","components/survey/fields/NumberField.tsx","components/survey/fields/RadioGroupField.tsx","components/survey/fields/TextField.tsx","components/survey/fields/AnyValueField.tsx","components/survey/fields/FieldGroup.tsx","components/survey/fields/RepeatField.tsx","components/survey/SurveyField.tsx","components/survey/XLSFormSurvey.tsx","components/table/XLSFormWorksheet.tsx","components/table/XLSFormWorkbook.tsx","components/useViewOptionsButton.tsx","xlsform-simple-schema/functions/schema-creation/getNodeOptionalFunction.ts","xlsform-simple-schema/functions/schema-creation/getStringInterpolationFunctionOrString.ts","xlsform-simple-schema/functions/schema-creation/getQuantitativeValueSchema.ts","xlsform-simple-schema/functions/schema-creation/MediaSchemas.ts","xlsform-simple-schema/functions/schema-creation/questionTypesToSchemaGenerators.ts","xlsform-simple-schema/functions/schema-creation/createRecursiveNodeSchemaDefinition.ts","xlsform-simple-schema/functions/schema-creation/createLeafNodeSchemaDefinition.ts","App.tsx","lib/undo/useUndoHistory.ts","components/hooks/useGlobalHotkeys.tsx","lib/rdf/loadSchemaOrgGraph.ts","lib/rdf/schemaOrgTurtleFileString.ts","xlsform-simple-schema/functions/schema-creation/createSurveySchemaFromXLSForm.ts","reportWebVitals.ts","index.tsx"],"names":["appearanceAttributeFlags","multiline","minimal","quick","year","horizontal","likert","compact","quickcompact","label","signature","draw","parseAttributeFlags","attributeListString","attributeStrings","split","result","forEach","s","findNodeByNameInsideScope","name","rootNode","scope","row","children","length","i","childScope","foundChild","findNodeByNameInCurrentAndAncestorScopes","child","stack","getAncestors","parentScope","findNodeByPathRelativeToScope","pathComponents","pathComponent","SemanticError","slice","getReverseNodeAbsolutePath","node","rowIndex","getNodeAbsolutePath","reverse","getNodeAbsolutePathString","delimiter","join","getScopedNodeIndexPath","isEqual","push","childNode","foundStack","undefined","pop","getNodeIndexPath","context","survey","getScopedAncestors","TokenType","ODKFormulaError","isODKFormulaError","token","this","message","Error","EvaluationError","type","expression","underlyingEvaluationError","nodeStack","ancestors","ParseError","tokens","LexerError","SyntaxError","FunctionNotImplementedError","functionName","LEFT_PAREN","RIGHT_PAREN","COMMA","ASSIGN","PLUS","MINUS","ASTERISK","GREATER_THAN","LESS_THAN","BOOLEAN_AND","BOOLEAN_OR","SLASH","CARET","TILDE","BANG","MODULO","COMPARISON","BACKSLASH","QUESTION","COLON","SINGLE_QUOTE","DOUBLE_QUOTE","NAME","LITERAL","NUMBER_LITERAL","INT_LITERAL","FLOAT_LITERAL","STRING_LITERAL","BOOLEAN_LITERAL","WHITESPACE","UNKNOWN","EOF","INVALID","punctuator","tokenType","Expression","kind","WHITESPACES","tokenPatterns","SELECTOR","ODKFormulaLexer","text","index","value","includes","tokenPattern","regex","match","substr","errorToken","INTERNAL_LEXER_ERROR","InfixParselet","PrefixParselet","Parser","options","readTokens","prefixParselets","Map","infixParselets","parselet","set","precedence","consumeAnything","prefix","get","left","parse","getPrecedence","infix","onExpression","expected","lookAhead","shift","distance","nextToken","next","onToken","parser","NameExpression","builder","OperatorExpression","operatorToken","right","print","BinaryOperatorParselet","isRight","parseExpression","CallExpression","fn","leftParenToken","argsAndDelimiters","rightParenToken","args","filter","e","CallParselet","rightParenTokenType","argumentDelimiterTokenType","delimiterToken","arg","consume","ConditionalExpression","condition","questionMarkToken","thenArm","colonToken","elseArm","ConditionalParselet","GroupExpression","GroupParselet","NameParselet","getName","t","_parser","PostfixExpression","PostfixOperatorParselet","PrefixExpression","PrefixOperatorParselet","PrattParser","LiteralExpression","String","LiteralParselet","getValue","getType","SelectorExpression","selectorToken","selector","SelectorParselet","getSelector","ODKFormulaPrecedence","BOOLEAN_OP","CONDITIONAL","ASSIGNMENT","SUM","PRODUCT","EXPONENT","PREFIX","POSTFIX","CALL","ODKFormulaParser","expressions","register","startsWith","parseFloat","parseInt","Precedence","infixRight","infixLeft","getStringMapSchemaDefinition","schemaDefinition","Object","blackbox","custom","keys","getLocalizedStringSchemaDefinition","optionalLocalizedString","optional","optionalStringMap","formulaValidationFunction","lexer","addValidationErrors","key","questionRowSchema","SimpleSchema","field","error","ErrorTypes","REQUIRED","operator","isSet","constraint","constraint_message","image","video","hint","guidance_hint","required_message","relevant","choice_filter","calculation","trigger","readonly","required","parameters","repeat_count","appearance","default","instance","bind","body","choiceRowSchema","settingsRowSchema","form_title","form_id","public_key","submission_url","default_language","version","assertValidQuestionRow","validate","localizableColumnNames","nestDoubleColonFields","namespacePrefixes","defaultSuffix","foundSuffixes","Set","k","add","namespacePrefix","suffix","objectToExtend","normalizeColumnNames","headerRow","columnName","toString","replace","freeze","normalizeType","autoCleanOptions","getAutoValues","trimStrings","mutate","loadQuestionRow","cleanRow","clean","loadChoicesRow","assertValidChoiceRow","loadSettingsRow","assertValidSettingsRow","loadWorksheet","workbook","sheetName","loadRowFn","defaultLanguage","excelWorksheet","getWorksheet","rows","firstRow","getRows","values","Array","columnNames","map","cellValue","columnNamesNormalized","languages","columnNamesToTrues","findLanguagesInColumnNames","eachRow","rowRawData","columnIndex","rowDataWithNamespacedFields","JSON","stringify","details","loadExcelRow","assertNoEndMarker","loadChoices","worksheet","listName","list","loadXLSFormFromRows","settings","choices","flatNodes","worksheets","rootSurveyGroup","formRootNameFromSettings","titleFromSettings","onRow","root","typeParameters","indentationLevel","trim","lastOpenedGroup","newGroupNode","newChildNode","nestSurvey","choicesByName","loadFormFromExcelWorkbook","a","xlsForm","loadEmptyXLSFormWorkbook","emptyWorkbook","ExcelJS","Workbook","addWorksheet","settingsWorksheet","addRow","createEmptyXLSForm","ExcelFileInput","props","onFileChange","useWorkbookFromFile","onInputChange","large","setXLSFormWithPatches","setLanguage","onLoadWorkbook","React","file","target","files","wb","reader","FileReader","readAsArrayBuffer","onload","buffer","ArrayBuffer","xlsx","load","then","AppEmptyState","fileInput","loadEmptyXLSForm","useCallback","nonIdealStateActions","vertical","onClick","icon","title","action","UndoContext","undoHistory","commands","setDocumentWithPatches","undo","redo","gotoIndex","document","Markdown","markedFn","markdown","marked","markedOptions","MarkdownDivOrSpan","omit","intent","html","input","firstLineWithContent","find","line","matchedIndentation","matchedIndentationString","indentationRegExp","RegExp","unindent","inline","replaceAll","DivOrSpan","dangerouslySetInnerHTML","__html","EditMenuButton","undoContext","useContext","nextCommand","menu","labelElement","combo","disabled","command","active","description","button","className","rightIcon","content","lazy","placement","generateExcelWorkbook","modified","created","Date","creator","worksheetName","internalWorksheet","flatMap","cn","l","columns","header","width","addRows","model","saveXLSForm","writeBuffer","blob","Blob","createElement","appendChild","url","window","URL","createObjectURL","href","download","click","setTimeout","revokeObjectURL","removeChild","FileMenuButton","inputFieldRef","createRef","useState","isDialogOpen","setDialogOpen","closeDialog","showSettingsDialog","settingsDialog","isOpen","canOutsideClickClose","canEscapeKeyClose","isCloseButtonShown","onClose","Classes","DIALOG_BODY","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","useSettingsDialog","closeFile","saveFileAs","htmlFor","id","onChange","ref","style","display","LanguageSelect","Select","ofType","renderItem","language","code","handleClick","shouldDismissPopover","LanguageSelector","onItemSelect","items","itemRenderer","activeItem","noResults","filterable","knownLiteralsWithoutDollarSign","yes","no","TRUE","FALSE","true","false","getEmptyEvaluationContext","nodesToAnswers","evaluationResults","stackDepth","ODKSurveyContext","schema","debug","evaluationContext","languageCode","languageName","setEvaluationContext","onChangeAnswer","onChangeCell","onMoveNode","onSpliceRows","onRemoveRowAndChildren","onRenameNode","onNestNode","onUngroupNode","onAddNode","EditableSurveyTitle","surveyName","editedSurveyName","setEditedSurveyName","onChangeSurveyName","surveyTitleString","hasTitle","onConfirm","confirmOnEnterKey","TEXT_MUTED","TEXT_LARGE","Boolean","placeholder","minWidth","AppNavBar","viewMenuButton","Group","Divider","align","Alignment","RIGHT","from","getDarkModeSetting","matchMedia","matches","useDarkMode","isDarkMode","setIsDarkMode","handleChange","addEventListener","BlueprintDarkModeContainer","composeContexts","contextAndValuePairs","reduce","acc","Context","Provider","AppToaster","Toaster","create","position","Position","BOTTOM_RIGHT","mergeCommands","ops","prev","current","concat","evaluatableColumnNames","isNodeRelevant","isRelevantEvaluationResult","isGroupNode","getLastRowIndexOfNode","findIndex","n","createLocalizedString","lang","spliceRowsInWorksheet","operations","surveyWorksheet","newRows","numberOfRowsToRemove","rowsToAdd","splice","uniq","newWorksheet","produceWithPatches","draft","addExampleChoices","enablePatches","untitledFieldIndex","untitledGroupIndex","createEmptyGroupRows","beginMarkerRow","endMarkerRow","addNodeToXLSForm","group","relativeToNode","fieldType","groupName","createEmptyFieldRow","rowsToInsert","currentNodeIsGroup","after","before","inside","findOrReplaceFieldReferences","replaceName","oldName","nodeDependenciesWithDuplicates","variableRegexp","localizableKeys","lcn","regExp","newCellValue","cloneDeep","uniqBy","d","createLiteralExpressionFromValue","addIndefiniteArticle","noun","article","assertString","argNo","number","ordinalize","assertNumber","assertBoolean","functions","if","elseExpression","not","coalesce","arg2","boolean","_xpath","once","_expression","selected","space_delimited_array","string","_space_delimited_array","_n","_multi_select_question","_choice_name","_select_question","_name","_group","_i","_sub_grp","_sub_i","_sub_sub_grp","_sub_sub_i","count","_nodeset","sum","max","min","contains","substring","endsWith","start","end","_string","_target","translate","_fromchars","_tochars","_separator","round","places","Math","int","floor","Number","NaN","digest","_data","_algorithm","_encodingMethod","pow","exponent","log","log10","abs","sin","cos","tan","asin","acos","atan","atan2","y","x","sqrt","exp","exp10","pi","PI","today","now","setHours","toISOString","_dateTime","date","_days","_time","_date","_format","area","_nodesetOrGeoshape","_nodesetOrGeoshapeOrGeotrace","random","randomize","_seed","uuid","_length","checklist","_min","_max","_response","evaluateExpression","deeperContext","evaluateLiteralExpression","evaluateNameExpression","evalCalculation","state","evaluateNodeColumn","evaluateSelectorExpression","leftBeforeCasting","rightBeforeCasting","evaluateOperatorExpression","nameExpressionOrString","stringFromStringOrExpression","evaluatedArgs","apply","evaluateCallExpression","str","valueBeforeCasting","allowUndefinedNames","literalBag","nodeOrNodes","evaluationResult","evaluateNonDollarNameFn","tip","assertExpressionAfterEvaluation","evaluateODKFormula","formula","console","fallback","overrideFormula","originalFormula","fallbackValue","getJSONResult","fromPairs","isEmpty","evaluateNodeAndChildren","onEval","fallbacks","getEvaluatedXLSFormResult","columnNamesToResults","describeNode","StyledCode","styled","Colors","RED2","VIOLET5","BLUE3","ORANGE3","ORANGE4","GRAY1","BLUE2","RED5","VERMILION3","VERMILION2","alpha","color","alphaColor","rgb","opacity","ODKNodeContext","fieldTypesToIcons","integer","decimal","range","select_one","select_one_from_file","select_multiple","select_multiple_from_file","rank","note","geopoint","geotrace","geoshape","time","datetime","audio","barcode","calculate","acknowledge","hidden","deviceid","simserial","subscriberid","phonenumber","username","email","audit","begin_group","begin_repeat","internalFieldTypes","getFirstColumnNameWithError","nodeEvaluationResults","assertIsODKNode","every","p","resultIsInvalid","ODKNodeDragAndDropContext","onDropNode","StyledMarkdown","DefaultValueExplanation","answer","nodeName","FormulaResultMeaning","results","formulaIsTrivial","ExpressionPanel","nodeEvaluationResult","cellIsEmpty","isLiteral","isName","StyledPanel","backgroundColor","LIGHT_GRAY5","marginTop","padding","background","borderTop","DARK_GRAY2","LIGHT_GRAY3","StyledCodeBlock","fontSize","lineHeight","HighlightedExpression","StyledCalloutWithCode","toMarkdown","FieldPathBreadcrumbs","path","collapseFrom","overflowListProps","minVisibleItems","transition","fieldTypeNames","ChoiceListMenu","choiceListsByName","choiceListNames","event","checked","currentTarget","choiceListName","without","newTypeValue","newRow","margin","isSelected","nameElement","choiceNamesToRows","choiceNames","sortedChoiceRows","sortBy","r","toLowerCase","shownChoices","marginInline","restElement","UI_TEXT","marginLeft","paddingRight","aria-label","shownLabel","fill","LIST_UNSTYLED","justifyContent","fieldCategoriesToIcons","literal","choice","geo","media","stats","track","special","grouping","fieldCategoryNames","fieldTypesToCategories","FieldTypeMenu","onSelectType","dataset","c","category","data-type","SetFieldTypeMenu","FieldTypeButtonGroup","showType","isGroup","surveyHasChoiceLists","choiceListMenu","noChoicesAvailable","onAddExampleChoices","addExampleChoicesButton","NoChoicesState","typeName","hasItems","alignSelf","observeParents","Boundary","END","visibleItemRenderer","overflowRenderer","overflowItems","maxWidth","NodeReferencesMenu","references","reference","AddFieldOrGroupMenuItem","omitAction","caption","addFieldWithType","addGroupedTextField","NodeActionMenuItems","renameText","nodeHasHint","renameNode","addHintToNode","nestNode","ungroupNode","removeNode","useNodeActionMenuItems","isAlertOpen","setAlertOpen","closeAlert","show","showRemoveConfirmationDialog","alert","cancelButtonText","confirmButtonText","Intent","DANGER","onCancel","canOutsideClickCancel","canEscapeKeyCancel","useNodeDeletionDialog","nodeDeletionAlert","newName","setNewName","nodeDependencies","setNodeDependencies","useEffect","changeName","preventDefault","showRenameDialog","dependenciesInfo","dialog","onSubmit","labelFor","defaultValue","pattern","autoFocus","PRIMARY","useRenameNodeDialog","renameDialog","nodeActionDialogs","removeHintFromNode","nodeActionMenuItems","Code","div","Callout","DragStripe","RenderTarget","detailsButtonCaption","hasTypeIcon","isVisible","hasMissingParameters","hasError","isDraggedOver","setIsDraggedOver","dragProps","onDragStart","dataTransfer","setData","sourceNode","sourcePath","onDragOver","onDrop","data","getData","destinationNode","draggable","onDragLeave","useNodeDragAndDrop","violetColor","VIOLET3","flex","overflow","small","htmlTitle","FieldPopoverButton","editable","nameOfOnlyShownTab","firstColumnNameWithError","firstColumnNameWithContent","setWidth","handleResize","entries","newWidth","contentRect","tabId","setTabId","referencesButton","referencesButtonTitle","ReferencesButton","editHeader","marginBottom","borderBottom","gap","FLEX_EXPANDER","detailsContent","onResize","selectedTabId","renderActiveTabPanelOnly","panel","getTab","interactionKind","popoverClassName","PopoverClasses","POPOVER2_CONTENT_SIZING","rootBoundary","onOpening","modifiers","arrow","enabled","preventOverflow","targetTagName","buttonStyle","NamespacesByPrefix","rdf","rdfs","foaf","xsd","RDF","Namespace","RDFS","SCHEMA","replaceURIWithPrefix","uri","baseUri","namesToPredicateNodes","getClassMetadataCompact","classNode","graph","v","getClassMetadata","object","getPropertyMetadataCompact","getPropertyMetadata","RDFGraphContext","createContext","Store","RDFPrefixedNodeName","contextPrefix","fontWeight","getMarkedRendererWithExternalLinks","renderer","Renderer","link","arg0","arg1","iter","f","ExternalAnchor","rel","ControlGroupWithGapSections","ControlGroup","RDFClassMetadata","visibleSections","useMemo","anyStatementMatching","sym","subject","propertyNode","isNamedNode","getFirstClassOrPropertyNodeWithName","classMetadata","propertyMetadata","metadata","markedRenderer","labels","comments","sources","isPartOfs","domain","supersededBy","firstLabel","basePrefix","textOverflow","rangeIncludes","domainIncludes","comment","_","word","source","isPartOf","ObjectLiteralButtonWithPopover","isDate","linkedDataType","isEmptyObject","inspector","expandLevel","theme","chromeLight","TREENODE_FONT_FAMILY","TREENODE_FONT_SIZE","TREENODE_LINE_HEIGHT","BASE_FONT_SIZE","BASE_LINE_HEIGHT","OBJECT_NAME_COLOR","OBJECT_VALUE_NULL_COLOR","RED4","OBJECT_VALUE_UNDEFINED_COLOR","OBJECT_VALUE_REGEXP_COLOR","OBJECT_VALUE_STRING_COLOR","OBJECT_VALUE_SYMBOL_COLOR","OBJECT_VALUE_NUMBER_COLOR","OBJECT_VALUE_BOOLEAN_COLOR","OBJECT_VALUE_FUNCTION_PREFIX_COLOR","FunctionCallTokenElement","VariableReferenceTokenElement","referencedNode","data-referenced-node","TokenElement","parentExpression","isObject","InvalidExpression","lastToken","indexAfterLastToken","TEXT_DISABLED","isErroneousExpression","expressionOrToken","useChangeHooks","setContext","newContext","fieldProps","schemaKey","overrideLanguage","languageToUse","changeIsInSurveyWorksheet","valuePathInRow","indexPath","flat","has","normalizedColumnName","patchXLSFormCell","removeNodeAndChildren","previousState","finalNextState","finalPatches","finalInversePatches","nextState","patches","inversePatches","firstIndex","typeDescription","moveResult","ancestor","numberOfSourceNodeRows","rowsOfSourceNode","destinationIsBeforeSource","moveNode","OverflowScrollContainer","getClassAncestors","quad","q","getClassProperties","sortedUniqBy","statement","conjunctionMap","or","withSerialComma","withoutSerialComma","and","guessQuestionWording","isClass","propertyOrAncestorClassName","propertyTypes","humanClassName","humanize","underscore","humanPropertyOrAncestorClassName","m","toUpperCase","humanPropertyName","sort","isBoolean","propertyWords","firstPropertyWord","lastPropertyWord","simpleMappings","sameAs","mainEntityOfPage","simpleMapping","elements","conjunctionType","firstElement","secondElement","lastElement","commaJoinedElements","conjunction","getHumanEnumeration","capitalize","singularize","isClassNode","ErrorBoundary","info","RDFClassNodeButtonWithPopover","SecondaryLabel","types","getNodeTree","expandedNames","selectedNames","transform","isRoot","properties","childNodes","nodeData","RDFModelTree","setExpandedNames","setSelectedNames","store","handleCheckboxChange","checkbox","delete","hasSelectedDirectProperties","isPartiallySelected","propertyName","aria-checked","indeterminate","data-name","alignItems","isExpanded","secondaryLabel","onNodeExpand","onNodeCollapse","contents","keysWithErrors","calculationResults","jsonResult","ResultCodeTree","collapsedKeys","setCollapsedKeys","hasCaret","NoSurveyFieldsState","addNode","addGroup","actions","BooleanField","defaultChecked","CalculateField","surveyContext","editedFormula","setEditedFormula","shownValue","changeFormula","newFormula","fontFamily","WHITE","border","LIGHT_GRAY2","marginRight","getAllowedChoiceValues","choiceListStrings","availableListNames","choiceListString","evaluateDynamicChoiceListName","choiceObjects","o","choiceFilterString","choiceFilterFormula","choiceFilterExpression","choiceObject","choiceRow","evalResult","evaluateFilteredChoiceNames","CheckboxGroupField","valueIsInvalid","element","newChoices","choiceLists","allowedValues","allowedValuesSet","choiceList","definedLabel","jsDateFormatter","formatDate","toLocaleDateString","parseDate","DateField","selectedDate","isUserChange","EditableFieldHint","editedHintString","setEditedHintString","onChangeHint","hintString","EditableFieldLabel","isEditable","labelString","evaluatedLabel","editedLabelString","setEditedLabelString","onConfirmLabel","labelInput","DEFAULT_CONFIG","quality","maxHeight","autoRotate","mimeType","readAndCompressImage","userConfig","Promise","resolve","img","config","assign","src","fileReader","orientation","ExifReader","Orientation","err","scaleImage","canvas","height","exifApplied","findMaxWidth","getHalfScaleCanvas","scaleCanvasWithAlgorithm","reject","toBlob","ratio","mWidth","maxSize","scaleRatio","ctx","getContext","save","styleWidth","styleHeight","scale","rotate","drawImage","restore","outputWidth","scaledCanvas","srcImgData","getImageData","destImgData","createImageData","srcCanvasData","destCanvasData","inner","f00","f10","f01","f11","un_x","un_y","j","iyv","iy0","iy1","ixv","ix0","ix1","idxD","idxS00","idxS10","idxS01","idxS11","dx","dy","g","b","ceil","applyBilinearInterpolation","putImageData","halfCanvas","imageResizeConfig","uncachedBaseUrl","process","appToken","getImageSourceUrl","size","remotePath","surveyResultId","resizedImage","fetch","method","headers","Accept","response","json","ok","reason","success","ImageCard","contentUrl","onChangeCaption","onRemoveImage","interactive","elevation","Elevation","ONE","alt","boxShadow","outlined","FileUploadField","getUUID","Spinner","SIZE_SMALL","timeout","showUploadingState","contentSize","encodingFormat","createImageObjectFromFile","uploadPhoto","dimensions","thumbnail","createImageObjectFromRemoteImage","catch","showPersistentErrorToast","inputProps","multiple","accept","getSchemaOrgPointGeometrySchema","mapboxgl","workerClass","MapboxWorker","accessToken","FieldContainer","section","MapContainer","CenteredPoint","FOREST3","getPointForCoordinates","coordinates","longitude","toFixed","latitude","getLatitudeFromValue","getLongitudeFromValue","GeoPointField","point","zoom","viewport","setViewport","onChangeAnswerDebounced","throttle","setViewportCallback","viewState","interactionState","newPoint","changeLatitude","newLatitudeNumber","newLatitudeString","changeLongitude","newLongitudeNumber","newLongitudeString","mapboxApiAccessToken","onViewportChange","mapStyle","DARK_GRAY4","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","stepSize","minorStepSize","majorStepSize","asyncControl","onValueChange","NumberField","valueAsNumber","allowNumericCharactersOnly","RadioGroupField","selectedValue","choiceName","TextField","AutoField","FieldComponent","AnyValueField","valueAsDate","radio","isInternalField","detailsButton","autoFieldProps","FieldGroup","subKeys","objectKeys","onChangeLabel","HeadingClass","H1","H2","H3","H4","H5","subkey","SurveyField","RepeatField","Stripe","CornerButton","TopCornerButton","BottomCornerButton","Hoverable","schemaKeyPath","renderTarget","targetProps","hoverOpenDelay","hoverCloseDelay","PaddedContainer","FlexTable","Table","XLSFormWorksheet","numRows","onConfirmCellEdit","columnNameRenderer","columnHeaderCellRenderer","nameRenderer","cellRenderer","paddingLeft","enableRowResizing","Container","XLSFormWorkbook","setWorksheetName","handleTabChange","defaultViewOptions","table","getNodeOptionalFunction","getStringInterpolationFunctionOrString","inputString","offset","getQuantitativeValueSchema","rootDefinition","Text","oneOf","getMediaObjectSchema","regEx","RegEx","Url","getImageObjectSchema","withThumbnail","questionTypesToSchemaGenerators","Integer","getSchemaOrgLineStringGeometrySchema","getSchemaOrgPolygonGeometrySchema","getAudioObjectSchema","getVideoObjectSchema","EmailWithTLD","createRecursiveNodeSchemaDefinition","schemaDefinitions","definition","childrenSchemaDefinitions","defaults","schemaGeneratorFunction","firstField","createLeafNodeSchemaDefinition","FocusStyleManager","onlyShowFocusOnTabs","StyledXLSFormSurvey","isSurveyEmpty","noSurveyFieldsState","AppBody","App","setUndoHistory","newCommand","useUndoHistory","viewOptions","setViewOptions","toggleDebug","toggleTable","toggleTree","toggleGraph","useViewOptionsButton","hotkeys","global","onKeyDown","allowInInput","useGlobalHotkeys","rdfStore","RDFLib","loadSchemaOrgGraph","changeHooks","surveySimpleSchema","mergedSchema","createSurveySchemaFromXLSForm","navbar","appEmptyState","excelPanel","surveyPanel","DARK_GRAY5","DARK_GRAY1","zIndex","treePanel","whiteSpace","modelPanel","contexts","navbarAndBody","handleKeyDown","handleKeyUp","flexDirection","onKeyUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","enableAllPlugins","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d56fe597.chunk.js","sourcesContent":["/*\n * A map of string flags that can appear in the `appearance` column of a row in the `survey`\n * worksheet, each with a boolean value indicating if it is set.\n */\ntype AppearanceAttributeFlags = Record<string, boolean> & {\n  /** Best if used with web clients, makes the text box multiple lines long. */\n  multiline?: boolean;\n  /** Answer choices appear in a pull-down menu. */\n  minimal?: boolean;\n  /** Relevant for mobile clients only, this attribute auto-advances the form to the next question after an answer is selected.', */\n  quick?: boolean;\n  /** For mobile devices only, used to suppress the calendar. */\n  \"no-calendar\"?: boolean;\n  /** Select a month and year only for the date. */\n  \"month-year\"?: boolean;\n  /** Select only a year for the date. */\n  year?: boolean;\n  /** For web clients only, this displays the answer choices horizontally. */\n  \"horizontal-compact\"?: boolean;\n  /** For web clients only, this displays the answer choices horizontally, but in columns. */\n  horizontal?: boolean;\n  /** Best if used with web clients, makes the answer choices appear as a Likert scale. */\n  likert?: boolean;\n  /** Displays answer choices side by side with minimal padding and without radio buttons or checkboxes. Particularly useful with image choices.' */\n  compact?: boolean;\n  /** Same as 'compact', but auto-advances to the next question (in mobile clients only). */\n  quickcompact?: boolean;\n  /** Entire group of questions appear on one screen (for mobile clients only). */\n  \"field-list\"?: boolean;\n  /** Displays answer choice labels (and not inputs). */\n  label?: boolean;\n  /** 'Used in conjunction with label attribute above, displays the answer inputs without the labels (make sure to put label and list-nolabel fields inside a group with field-list attribute if using mobile client).' */\n  \"list-nolabel\"?: boolean;\n  /** An easier way to achieve the same appearance as with 'label', apply this attribute to the entire group of questions (might slow down the form a bit). */\n  \"table-list\"?: boolean;\n  /** Allows you to trace your signature into your form (mobile clients only). */\n  signature?: boolean;\n  /** Allows you to sketch a drawing with your finger on the mobile device screen. */\n  draw?: boolean;\n};\n\n/** A set of flags that can appear in the `appearance` column of a row in the `survey` worksheet */\nconst appearanceAttributeFlags: Record<keyof AppearanceAttributeFlags, true> = {\n  multiline: true,\n  minimal: true,\n  quick: true,\n  \"no-calendar\": true,\n  \"month-year\": true,\n  year: true,\n  \"horizontal-compact\": true,\n  horizontal: true,\n  likert: true,\n  compact: true,\n  quickcompact: true,\n  \"field-list\": true,\n  label: true,\n  \"list-nolabel\": true,\n  \"table-list\": true,\n  signature: true,\n  draw: true,\n};\n\n/**\n * Parses a set of flags that can appear in the `appearance` column of a row in the `survey`\n * worksheet, returning a map of flags with their state - `true` if a flag is set and `false` if it\n * is not set.\n */\nexport function parseAttributeFlags(\n  attributeListString: string\n): AppearanceAttributeFlags {\n  const attributeStrings = attributeListString.split(\" \");\n  const result: AppearanceAttributeFlags = {};\n  attributeStrings.forEach((s) => {\n    if (appearanceAttributeFlags[s]) {\n      result[s] = true;\n    }\n  });\n  return result;\n}\n\nexport default AppearanceAttributeFlags;\n","import { isEqual } from \"lodash\";\nimport { SemanticError } from \"../../../types/Errors\";\nimport { ODKNode } from \"../../../types/ODKNode\";\nimport ODKFormulaEvaluationContext from \"./ODKFormulaEvaluationContext\";\n\n/**\n * Recursively searches for a node by its name, starting from the given scope. Includes children of\n * the current scope in search.\n *\n * @param name the name of the node to select\n * @param rootNode root node of the survey to search in\n * @param scope current scope to limit the search. Skip this argument to search in the survey's root\n *   node.\n */\nexport function findNodeByNameInsideScope(\n  name: string,\n  rootNode: ODKNode,\n  scope: ODKNode = rootNode\n): ODKNode | ODKNode[] | undefined {\n  if (scope.row?.name === name) {\n    return scope;\n  } else if (scope.children?.length) {\n    for (let i = 0; i < scope.children.length; i += 1) {\n      const childScope = scope.children[i];\n      if (childScope.row?.name === name) {\n        return childScope;\n      }\n      const foundChild = findNodeByNameInsideScope(name, rootNode, childScope);\n      if (foundChild) {\n        return foundChild;\n      }\n    }\n  }\n  return undefined;\n}\n\n/**\n * Recursively searches for a node by its name, starting from the given scope and moving upwards in\n * the hierarchy. Includes ancestors of the current scope in search, until it reaches the root\n * scope.\n *\n * @param name the name of the node to select\n * @param rootNode root node of the survey to search in\n * @param scope current scope to limit the search. Skip this argument to search in the survey's root\n *   node.\n */\nexport function findNodeByNameInCurrentAndAncestorScopes(\n  name: string,\n  rootNode: ODKNode,\n  scope: ODKNode\n): ODKNode | ODKNode[] | undefined {\n  if (scope.row?.name === name) {\n    return scope;\n  } else if (scope.children) {\n    for (let i = 0; i < scope.children.length; i += 1) {\n      const child = scope.children[i];\n      if (child.row?.name === name) {\n        return child;\n      }\n    }\n  }\n  const stack = getAncestors(scope, rootNode);\n  const parentScope = stack?.[stack.length - 1];\n  if (!parentScope) {\n    return undefined;\n  }\n  return (\n    findNodeByNameInCurrentAndAncestorScopes(name, rootNode, parentScope) ||\n    undefined\n  );\n}\n\n/**\n * Returns a node that matches the given absolute path, or its relative path as seen from the given\n * scope. Works a bit like a file structure.\n *\n * @param pathComponents Path of the node to select. Array of strings, e.g. `['..', '..', 'name']`.\n * @param rootNode root node of the survey to search in\n * @param scope current scope to limit the search. Skip this argument to search in the survey's root\n *   node.\n */\nexport function findNodeByPathRelativeToScope(\n  pathComponents: string[],\n  rootNode: ODKNode,\n  scope: ODKNode = rootNode\n): ODKNode | ODKNode[] | undefined {\n  const pathComponent = pathComponents[0];\n  // console.log('Searching', pathComponent, 'in scope', scope.row?.name, 'stack', scope.stack);\n  let result: ODKNode | undefined;\n\n  if (pathComponent === \".\") {\n    result = scope;\n  } else if (pathComponent === \"/\") {\n    result = rootNode;\n  } else if (pathComponent === \"..\") {\n    if (scope === rootNode) {\n      throw new SemanticError(\n        \"Reached root - Can’t traverse further up the hierarchy.\"\n      );\n    }\n    const stack = getAncestors(scope, rootNode);\n    result = stack?.[stack.length - 1];\n  } else if (pathComponent === scope.row.name) {\n    result = scope;\n  } else if (scope.children?.length) {\n    for (let i = 0; i < scope.children.length; i += 1) {\n      const childScope = scope.children[i];\n      if (childScope.row.name === pathComponent) {\n        result = childScope;\n        break;\n      }\n    }\n  }\n\n  if (pathComponents.length === 1) {\n    return result;\n  }\n\n  return findNodeByPathRelativeToScope(\n    pathComponents.slice(1),\n    rootNode,\n    result\n  );\n}\n\nfunction getReverseNodeAbsolutePath(\n  node: ODKNode | undefined,\n  rootNode: ODKNode\n): string[] {\n  if (!node) {\n    return [\"/\"];\n  }\n\n  if (!node?.row?.name) {\n    throw new SemanticError(\n      `Encountered a row without a name (row #${node.rowIndex}). This should not happen. Please ensure the survey data is valid.`\n    );\n  }\n\n  const stack = getAncestors(node, rootNode);\n  return [\n    node.row?.name,\n    ...getReverseNodeAbsolutePath(stack?.[stack.length - 1], rootNode),\n  ];\n}\n\n/** @returns the key path of a given node in the survey tree as an array of node names.*/\nexport function getNodeAbsolutePath(\n  node: ODKNode,\n  rootNode: ODKNode\n): string[] {\n  return getReverseNodeAbsolutePath(node, rootNode)?.reverse();\n}\n\n/**\n * @returns the key path of a given node in the survey tree as a string of node names joined by a\n * given delimiter (usually '.' or '/').\n */\nexport function getNodeAbsolutePathString(\n  node: ODKNode,\n  rootNode: ODKNode,\n  delimiter: string = \".\"\n): string {\n  return getNodeAbsolutePath(node, rootNode).slice(1).join(delimiter);\n}\n\n/**\n * @returns `true` if a string is a valid XPath, `false` otherwise.\n */\nexport function isXPath(string: string): boolean {\n  return !!string.match(/^\\/(\\/?[\\w*]+(?:\\[[^]+?])?)$/);\n}\n\n/**\n * @returns a list of array indexes that allow finding a given node inside the scope by looking it\n * up using each ancestor's `children` array.\n */\nexport function getScopedNodeIndexPath(\n  node: ODKNode,\n  scope: ODKNode,\n  stack: number[] = []\n): number[] | undefined {\n  if (isEqual(node, scope)) {\n    return stack;\n  }\n  if (scope.children?.length) {\n    for (let i = 0; i < scope.children.length; i += 1) {\n      stack.push(i);\n      const childNode = scope.children[i];\n      const foundStack = getScopedNodeIndexPath(node, childNode, stack);\n      if (foundStack !== undefined) {\n        return foundStack;\n      }\n      stack.pop();\n    }\n  }\n  return undefined;\n}\n\n/**\n * @returns a list of array indexes that allow finding a given node from the root by looking it\n * up using each ancestor's `children` array.\n */\n\nexport function getNodeIndexPath(\n  node: ODKNode,\n  context: ODKFormulaEvaluationContext\n): number[] | undefined {\n  return getScopedNodeIndexPath(node, context.survey);\n}\n\n/**\n * @returns the list of ancestors of a node (as node references), using the given scope as root.\n */\nexport function getScopedAncestors(\n  node: ODKNode,\n  scope: ODKNode,\n  stack: ODKNode[] = []\n): ODKNode[] | undefined {\n  if (isEqual(node, scope)) {\n    return stack;\n  }\n  if (scope.children?.length) {\n    stack.push(scope);\n    for (let i = 0; i < scope.children.length; i += 1) {\n      const childNode = scope.children[i];\n      const foundStack = getScopedAncestors(node, childNode, stack);\n      if (foundStack) {\n        return foundStack;\n      }\n    }\n    stack.pop();\n  }\n}\n\n/**\n * @returns the list of ancestors of a node (as node references) up to (and including) the survey\n * root node.\n */\n\nexport function getAncestors(node: ODKNode, rootNode: ODKNode) {\n  return getScopedAncestors(node, rootNode);\n}\n","import ODKFormulaEvaluationContext from \"../functions/odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport { getScopedAncestors } from \"../functions/odk-formulas/evaluation/XPath\";\nimport { Expression, Token } from \"../functions/odk-formulas/pratt-parser-base\";\nimport { ODKNode } from \"./ODKNode\";\n\n/**\n * Abstract base class for any errors in ODK formulas.\n */\nexport abstract class ODKFormulaError extends Error {\n  isODKFormulaError: true = true;\n  token?: Token;\n  toMarkdown(): string {\n    return this.message;\n  }\n}\n\n/**\n * An error that happened while evaluating an ODK formula AST. Can wrap an underlying `Error`\n * that caused the evaluation to fail.\n */\n\nexport class EvaluationError extends ODKFormulaError {\n  nodeStack: readonly Readonly<ODKNode>[];\n\n  constructor(\n    message: string,\n    readonly type: string,\n    readonly expression: Expression | undefined,\n    readonly context: ODKFormulaEvaluationContext,\n    readonly scope: ODKNode,\n    readonly underlyingEvaluationError: EvaluationError | undefined = undefined\n  ) {\n    super(message);\n\n    const ancestors = getScopedAncestors(scope, context.survey);\n\n    this.nodeStack = [...(ancestors || []), scope];\n  }\n\n  toMarkdown(): string {\n    return this.message;\n  }\n}\n\n/**\n * An error that happened while trying to parse an ODK formula string to turn it into an AST.\n */\n\nexport class ParseError extends ODKFormulaError {\n  constructor(\n    readonly type: string,\n    message: string,\n    readonly tokens?: Token[]\n  ) {\n    super(message);\n  }\n\n  toMarkdown(): string {\n    return this.message;\n  }\n}\n\n/**\n * An error that happened while trying to tokenize an ODK formula string to turn it into a token\n * list.\n */\n\nexport class LexerError extends ODKFormulaError {\n  constructor(readonly token: Token, readonly message: string) {\n    super(message);\n  }\n}\n\n/**\n * Describes a syntax error in a XLSForm workbook.\n */\nexport class SyntaxError extends ODKFormulaError {}\n\n/** Describes an error with the semantics of a XLSForm workbook or a formula. */\nexport class SemanticError extends ODKFormulaError {}\n\n/** Thrown if an ODK formula function is not implemented yet. */\nexport class FunctionNotImplementedError extends ODKFormulaError {\n  constructor(functionName: string) {\n    super(\n      `The \\`${functionName}\\` function is not supported yet. If you need it, please contact the developers.`\n    );\n  }\n}\n\n/** Thrown if a feature is not implemented yet. */\nexport class UnsupportedFeatureError extends ODKFormulaError {\n  constructor(feature: string) {\n    super(`${feature} is not supported.`);\n  }\n}\n","export enum TokenType {\n  LEFT_PAREN,\n  RIGHT_PAREN,\n  COMMA,\n  ASSIGN,\n  PLUS,\n  MINUS,\n  ASTERISK,\n  DOLLAR,\n  LEFT_BRACE,\n  RIGHT_BRACE,\n  GREATER_THAN,\n  LESS_THAN,\n  SLASH,\n  POINT,\n  CARET,\n  TILDE,\n  BANG,\n  BACKSLASH,\n  QUESTION,\n  COLON,\n  SINGLE_QUOTE,\n  DOUBLE_QUOTE,\n  MODULO,\n  BOOLEAN_AND,\n  BOOLEAN_OR,\n  COMPARISON,\n  NAME,\n  LITERAL,\n  NUMBER_LITERAL,\n  FLOAT_LITERAL,\n  INT_LITERAL,\n  STRING_LITERAL,\n  BOOLEAN_LITERAL,\n  SELECTOR,\n  WHITESPACE,\n  UNKNOWN,\n  EOF,\n  INVALID,\n  INTERNAL_LEXER_ERROR,\n}\n\nexport const tokenTypes = [\n  TokenType.LEFT_PAREN,\n  TokenType.RIGHT_PAREN,\n  TokenType.COMMA,\n  TokenType.ASSIGN,\n  TokenType.PLUS,\n  TokenType.MINUS,\n  TokenType.ASTERISK,\n  TokenType.GREATER_THAN,\n  TokenType.LESS_THAN,\n  TokenType.BOOLEAN_AND,\n  TokenType.BOOLEAN_OR,\n  TokenType.SLASH,\n  TokenType.CARET,\n  TokenType.TILDE,\n  TokenType.BANG,\n  TokenType.MODULO,\n  TokenType.COMPARISON,\n  TokenType.BACKSLASH,\n  TokenType.QUESTION,\n  TokenType.COLON,\n  TokenType.SINGLE_QUOTE,\n  TokenType.DOUBLE_QUOTE,\n  TokenType.NAME,\n  TokenType.LITERAL,\n  TokenType.NUMBER_LITERAL,\n  TokenType.INT_LITERAL,\n  TokenType.FLOAT_LITERAL,\n  TokenType.STRING_LITERAL,\n  TokenType.BOOLEAN_LITERAL,\n  TokenType.WHITESPACE,\n  TokenType.UNKNOWN,\n  TokenType.EOF,\n  TokenType.INVALID,\n];\n\n/**\n * If the TokenType represents a punctuator (i.e. a token that can split an\n * identifier like '+', this will get its text.\n */\nexport function punctuator(tokenType: TokenType): string {\n  switch (tokenType) {\n    case TokenType.LEFT_PAREN:\n      return \"(\";\n    case TokenType.RIGHT_PAREN:\n      return \")\";\n    case TokenType.COMMA:\n      return \",\";\n    case TokenType.ASSIGN:\n      return \"=\";\n    case TokenType.PLUS:\n      return \"+\";\n    case TokenType.MINUS:\n      return \"-\";\n    case TokenType.ASTERISK:\n      return \"*\";\n    case TokenType.SLASH:\n      return \"/\";\n    case TokenType.CARET:\n      return \"^\";\n    case TokenType.TILDE:\n      return \"~\";\n    case TokenType.BANG:\n      return \"!\";\n    case TokenType.BACKSLASH:\n      return \"\\\\\";\n    case TokenType.QUESTION:\n      return \"?\";\n    case TokenType.COLON:\n      return \":\";\n    default:\n      return \"[undefined punctuator]\";\n  }\n}\n\n/**\n * A simple token class. These are generated by Lexer and consumed by Parser.\n */\nexport type Token = {\n  type: TokenType;\n  text: string;\n  index: number;\n};\n\n/**\n * Interface for all expression AST node classes.\n */\nexport abstract class Expression {\n  abstract readonly kind: string;\n  abstract tokens: Token[];\n  abstract children: (Token | Expression)[];\n  /**\n   * Pretty-print the expression to a string.\n   */\n  abstract print(builder: StringBuilder): void;\n}\n\nexport type StringBuilder = (result: string) => void;\n","import { LexerError } from \"../../../types/Errors\";\nimport { Token, TokenType } from \"../pratt-parser-base/types\";\n\nexport const xPathPrefixRegExp = /^\\/(\\/?[\\w*]+(?:\\[[^]+?]\\B)?)/;\n\nconst WHITESPACES = [\" \", \"\\t\", \"\\n\"];\nconst tokenPatterns: [TokenType, RegExp][] = [\n  [TokenType.STRING_LITERAL, /^'(\\\\\\\\|\\\\'|[^'])*'/],\n  [TokenType.STRING_LITERAL, /^\"(\\\\\\\\|\\\\\"|[^\"])*\"/],\n  [TokenType.SLASH, /^div/],\n  [TokenType.MODULO, /^mod/],\n  [TokenType.BOOLEAN_AND, /^and/],\n  [TokenType.BOOLEAN_OR, /^or/],\n  [TokenType.FLOAT_LITERAL, /^-?\\d+\\.\\d+/],\n  [TokenType.INT_LITERAL, /^-?\\d+/],\n  [TokenType.NAME, /^\\$?{[^}]+}/],\n  [TokenType.NAME, /^[a-zA-Z_\\w_][a-zA-Z_\\w_-]*/],\n  [TokenType.SELECTOR, xPathPrefixRegExp], // Match XPaths\n  [TokenType.SELECTOR, /^\\./], // Match simple '.' selector\n  [TokenType.LEFT_PAREN, /^\\(/],\n  [TokenType.RIGHT_PAREN, /^\\)/],\n  [TokenType.COMMA, /^,/],\n  [TokenType.PLUS, /^\\+/],\n  [TokenType.MINUS, /^-/],\n  [TokenType.ASTERISK, /^\\*/],\n  [TokenType.COMPARISON, /^(>=|>|<=|<|=|!=)/],\n  [TokenType.INVALID, /^([\\w\\s]+|[^\\s\\S]|.+)/], // must be last\n];\n\n/** Divides a strings into tokens defined by ODK formula token patterns. */\nexport default class ODKFormulaLexer implements Iterator<Token> {\n  index = 0;\n  constructor(readonly text: string) {}\n  next(): { value: Token } {\n    if (this.index >= this.text.length) {\n      // Once we've reached the end of the string, just return EOF tokens. We'll\n      // just keeping returning them as many times as we're asked so that the\n      // parser's lookahead doesn't have to worry about running out of tokens.\n      return { value: { type: TokenType.EOF, text: \"\", index: this.index } };\n    }\n\n    // Consume and ignore whitespace\n    while (WHITESPACES.includes(this.text[this.index])) {\n      this.index += 1;\n    }\n\n    for (let i = 0; i < tokenPatterns.length; i += 1) {\n      const tokenPattern = tokenPatterns[i];\n      const [type, regex] = tokenPattern;\n      const result = this.text.slice(this.index).match(regex);\n      if (result === null) {\n        continue;\n      }\n      const text = result[0];\n      const token: Token = {\n        type,\n        text: this.text.substr(this.index, text.length),\n        index: this.index,\n      };\n      if (token.type === TokenType.INVALID) {\n        throw new LexerError(\n          token,\n          `Invalid token starting at character ${this.index}`\n        );\n      }\n      this.index += text.length;\n      return { value: token };\n    }\n\n    const errorToken: Token = {\n      type: TokenType.INTERNAL_LEXER_ERROR,\n      text: this.text[this.index],\n      index: this.index,\n    };\n    throw new LexerError(\n      errorToken,\n      \"Lexer should never get here. If we get here, this means there is no invalid token defined at the end of the pattern list. This invalid token should match at least one character that is not recognized by all other patterns.\"\n    );\n  }\n}\n","import Parser from '../Parser';\nimport { Expression, Token } from '../types';\n\n/**\n * One of the two parselet interfaces used by the Pratt parser. An\n * InfixParselet is associated with a token that appears in the middle of the\n * expression it parses. Its parse() method will be called after the left-hand\n * side has been parsed, and it in turn is responsible for parsing everything\n * that comes after the token. This is also used for postfix expressions, in\n * which case it simply doesn't consume any more tokens in its parse() call.\n */\nexport default abstract class InfixParselet {\n  abstract parse(parser: Parser, left: Expression, token: Token): Expression;\n  abstract getPrecedence(): number;\n}\n","import Parser from '../Parser';\nimport { Expression, Token } from '../types';\n\n/**\n * One of the two interfaces used by the Pratt parser. A PrefixParselet is\n * associated with a token that appears at the beginning of an expression. Its\n * parse() method will be called with the consumed leading token, and the\n * parselet is responsible for parsing anything that comes after that token.\n * This interface is also used for single-token expressions like variables, in\n * which case parse() simply doesn't consume any more tokens.\n * @author rnystrom\n *\n */\nexport default abstract class PrefixParselet {\n  abstract parse(parser: Parser, token: Token): Expression;\n}\n","import { ParseError, SyntaxError } from \"../../../types/Errors\";\nimport InfixParselet from \"./parselets/InfixParselet\";\nimport PrefixParselet from \"./parselets/PrefixParselet\";\nimport { Expression, punctuator, Token, TokenType } from \"./types\";\n\nexport type TokenCallback = (expression: Token) => void;\nexport type ExpressionCallback = (expression: Expression) => void;\nexport interface ITokenizer {\n  next: () => { value: Token };\n}\nexport type ParserOptions = {\n  tokens: ITokenizer;\n  onToken?: TokenCallback;\n  onExpression?: ExpressionCallback;\n};\n\nexport default class Parser {\n  private readTokens: Token[] = [];\n  private prefixParselets: Map<TokenType, PrefixParselet> = new Map();\n  private infixParselets: Map<TokenType, InfixParselet> = new Map();\n\n  constructor(readonly options: ParserOptions) {}\n\n  public register(\n    token: TokenType,\n    parselet: PrefixParselet | InfixParselet\n  ): void {\n    if (parselet instanceof PrefixParselet) {\n      this.prefixParselets.set(token, parselet);\n    } else if (parselet instanceof InfixParselet) {\n      this.infixParselets.set(token, parselet);\n    } else {\n      throw new Error(\n        `Found a parselet that was neither an infix nor a prefix parselet: No idea what to do with it…`\n      );\n    }\n  }\n\n  public parseExpression(precedence = 0): Expression {\n    const token = this.consumeAnything();\n    if (!token) {\n      throw new ParseError(\n        \"prematureEOF\",\n        \"Parser encountered end of tokens. This should not happen.\"\n      );\n    }\n    const prefix = this.prefixParselets.get(token.type);\n    if (!prefix)\n      throw new ParseError(\n        \"undefinedPrefix\",\n        `Expected start of a new expression, but \\`${token.text}\\` (${token.type}) is not an allowed prefix.`,\n        [token]\n      );\n\n    let left: Expression = prefix.parse(this, token);\n\n    while (precedence < this.getPrecedence()) {\n      const token = this.consumeAnything();\n      if (!token) {\n        throw new ParseError(\n          \"prematureEndOfTokens\",\n          \"Parser encountered end of tokens. This should not happen.\"\n        );\n      }\n      const infix = this.infixParselets.get(token.type);\n      if (!infix)\n        throw new ParseError(\n          \"undefinedInfix\",\n          `\\`${token.text}\\` (${token.type}) is not an allowed infix.`,\n          [token]\n        );\n      left = infix.parse(this, left, token);\n    }\n\n    this.options.onExpression?.(left);\n    return left;\n  }\n\n  public match(expected: TokenType): Token | undefined {\n    const token = this.lookAhead(0);\n    if (token.type !== expected) {\n      return undefined;\n    }\n\n    return this.consumeAnything();\n  }\n\n  public consume(expected: TokenType): Token {\n    const token = this.lookAhead(0);\n    if (token.type !== expected) {\n      if (token.type === TokenType.EOF) {\n        throw new SyntaxError(\n          \"Missing `\" +\n            punctuator(expected) +\n            \"` before the end of the formula. Is the formula complete?\"\n        );\n      }\n\n      throw new SyntaxError(\n        \"Expected token `\" +\n          TokenType[expected] +\n          \"` but found `\" +\n          TokenType[token.type] +\n          \"`\"\n      );\n    }\n\n    const consumedToken = this.consumeAnything();\n    if (!consumedToken) {\n      throw new SyntaxError(\"Could not consume token \" + expected);\n    }\n    return token;\n  }\n\n  public consumeAnything(): Token | undefined {\n    // Make sure we've read the token.\n    this.lookAhead(0);\n\n    return this.readTokens.shift();\n  }\n\n  private lookAhead(distance: number): Token {\n    // Read in as many as needed.\n    while (distance >= this.readTokens.length) {\n      const nextToken = this.options.tokens.next();\n      if (nextToken.value) this.options.onToken?.(nextToken.value);\n      this.readTokens.push(nextToken.value);\n    }\n\n    // Get the queued token.\n    return this.readTokens[distance];\n  }\n\n  private getPrecedence(): number {\n    const parser = this.infixParselets.get(this.lookAhead(0).type);\n    if (parser) return parser.getPrecedence();\n    return 0;\n  }\n}\n","import { Expression, StringBuilder, Token } from \"../types\";\n\n/**\n * A simple variable name expression like \"abc\".\n */\nexport default class NameExpression extends Expression {\n  kind = \"name\";\n  children = this.tokens;\n\n  constructor(\n    readonly tokens: Token[],\n    readonly name: string,\n    readonly text: string\n  ) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    builder(this.name);\n  }\n}\n","import { Expression, StringBuilder, Token } from \"../types\";\n\n/**\n * A binary arithmetic expression like \"a + b\" or \"c ^ d\".\n */\nexport default class OperatorExpression extends Expression {\n  kind = \"operator\";\n  children = [this.left, this.operatorToken, this.right];\n\n  constructor(\n    readonly tokens: Token[],\n    readonly left: Expression,\n    readonly operatorToken: Token,\n    readonly right: Expression\n  ) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    builder(\"(\");\n    this.left.print(builder);\n    builder(\" \");\n    builder(this.operatorToken.text);\n    builder(\" \");\n    this.right.print(builder);\n    builder(\")\");\n  }\n}\n","import OperatorExpression from \"../expressions/OperatorExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token } from \"../types\";\nimport InfixParselet from \"./InfixParselet\";\n\n/**\n * Generic infix parselet for a binary arithmetic operator. The only\n * difference when parsing, \"+\", \"-\", \"*\", \"/\", and \"^\" is precedence and\n * associativity, so we can use a single parselet class for all of those.\n */\nexport default class BinaryOperatorParselet extends InfixParselet {\n  constructor(readonly precedence: number, readonly isRight: boolean) {\n    super();\n  }\n\n  public parse(\n    parser: Parser,\n    left: Expression,\n    operatorToken: Token\n  ): Expression {\n    // To handle right-associative operators like \"^\", we allow a slightly\n    // lower precedence when parsing the right-hand side. This will let a\n    // parselet with the same precedence appear on the right, which will then\n    // take *this* parselet's result as its left-hand argument.\n    const right = parser.parseExpression(\n      this.precedence - (this.isRight ? 1 : 0)\n    );\n\n    return new OperatorExpression(\n      [...left.tokens, operatorToken, ...right.tokens],\n      left,\n      operatorToken,\n      right\n    );\n  }\n\n  public getPrecedence(): number {\n    return this.precedence;\n  }\n}\n","import { Expression, StringBuilder, Token } from \"../types\";\n\n/**\n * A function call like \"a(b, c, d)\".\n */\nexport default class CallExpression extends Expression {\n  kind = \"call\";\n  readonly args: Expression[];\n  children = [\n    this.fn,\n    this.leftParenToken,\n    ...this.argsAndDelimiters,\n    this.rightParenToken,\n  ];\n\n  constructor(\n    readonly tokens: Token[],\n    readonly fn: Expression,\n    readonly leftParenToken: Token,\n    readonly argsAndDelimiters: (Expression | Token)[],\n    readonly rightParenToken: Token\n  ) {\n    super();\n    this.args = argsAndDelimiters.filter(\n      (e) => e instanceof Expression\n    ) as Expression[];\n  }\n\n  public print(builder: StringBuilder): void {\n    this.fn.print(builder);\n    builder(\"(\");\n    for (let i = 0; i < this.args.length; i++) {\n      this.args[i].print(builder);\n      if (i < this.args.length - 1) builder(\", \");\n    }\n    builder(\")\");\n  }\n}\n","import CallExpression from \"../expressions/CallExpression\";\nimport { Expression, Token, TokenType } from \"../types\";\nimport InfixParselet from \"./InfixParselet\";\nimport Parser from \"../Parser\";\n\n/**\n * Parselet to parse a function call like \"a(b, c, d)\".\n */\nexport default class CallParselet extends InfixParselet {\n  constructor(\n    readonly rightParenTokenType: TokenType,\n    readonly argumentDelimiterTokenType: TokenType,\n    readonly precedence: number\n  ) {\n    super();\n  }\n\n  public parse(\n    parser: Parser,\n    left: Expression,\n    leftParenToken: Token\n  ): Expression {\n    // Parse the token-separated arguments until we hit the token that marks the argument list end.\n    const args: Expression[] = [];\n    let rightParenToken: Token | undefined = parser.match(\n      this.rightParenTokenType\n    );\n    const tokens: Token[] = [...left.tokens, leftParenToken];\n    const argsAndDelimiters: (Expression | Token)[] = [];\n    if (rightParenToken) {\n      // There may be no arguments at all.\n      tokens.push(rightParenToken);\n    } else {\n      let delimiterToken;\n      do {\n        const arg = parser.parseExpression();\n        args.push(arg);\n        tokens.push(...arg.tokens);\n        argsAndDelimiters.push(arg);\n        delimiterToken = parser.match(this.argumentDelimiterTokenType);\n        if (delimiterToken) {\n          tokens.push(delimiterToken);\n          argsAndDelimiters.push(delimiterToken);\n        }\n      } while (delimiterToken);\n      rightParenToken = parser.consume(this.rightParenTokenType);\n      if (rightParenToken) {\n        tokens.push(rightParenToken);\n      }\n    }\n\n    return new CallExpression(\n      tokens,\n      left,\n      leftParenToken,\n      argsAndDelimiters,\n      rightParenToken\n    );\n  }\n\n  public getPrecedence(): number {\n    return this.precedence;\n  }\n}\n","import { Expression, StringBuilder, Token } from \"../types\";\n\n/**\n * A ternary conditional expression like \"a ? b : c\".\n */\nexport default class ConditionalExpression extends Expression {\n  kind = \"conditional\";\n  children = [\n    this.condition,\n    this.questionMarkToken,\n    this.thenArm,\n    this.colonToken,\n    this.elseArm,\n  ];\n\n  constructor(\n    readonly tokens: Token[],\n    readonly condition: Expression,\n    readonly questionMarkToken: Token,\n    readonly thenArm: Expression,\n    readonly colonToken: Token,\n    readonly elseArm: Expression\n  ) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    builder(\"(\");\n    this.condition.print(builder);\n    builder(\" ? \");\n    this.thenArm.print(builder);\n    builder(\" : \");\n    this.elseArm.print(builder);\n    builder(\")\");\n  }\n}\n","import ConditionalExpression from \"../expressions/ConditionalExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token, TokenType } from \"../types\";\nimport InfixParselet from \"./InfixParselet\";\n\n/**\n * Parselet for the condition or \"ternary\" operator, like \"a ? b : c\".\n */\nexport default class ConditionalParselet extends InfixParselet {\n  constructor(readonly precedence: number) {\n    super();\n  }\n\n  public parse(\n    parser: Parser,\n    left: Expression,\n    questionMarkToken: Token\n  ): Expression {\n    const thenArm = parser.parseExpression();\n    const colonToken = parser.consume(TokenType.COLON);\n    const elseArm = parser.parseExpression(this.precedence - 1);\n    return new ConditionalExpression(\n      [\n        ...left.tokens,\n        questionMarkToken,\n        ...thenArm.tokens,\n        colonToken,\n        ...elseArm.tokens,\n      ],\n      left,\n      questionMarkToken,\n      thenArm,\n      colonToken,\n      elseArm\n    );\n  }\n\n  public getPrecedence(): number {\n    return this.precedence;\n  }\n}\n","import { Expression, StringBuilder, Token } from \"../types\";\n\n/**\n * A group expression like \"( ... )\".\n */\nexport default class GroupExpression extends Expression {\n  kind = \"group\";\n  children = [\n    this.tokens[0],\n    this.expression,\n    this.tokens[this.tokens.length - 1],\n  ];\n\n  constructor(readonly tokens: Token[], readonly expression: Expression) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    builder(\"(\");\n    this.expression.print(builder);\n    builder(\")\");\n  }\n}\n","import GroupExpression from \"../expressions/GroupExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token, TokenType } from \"../types\";\nimport PrefixParselet from \"./PrefixParselet\";\n\n/**\n * Parses parentheses used to group an expression, like \"a * (b + c)\".\n */\nexport default class GroupParselet extends PrefixParselet {\n  constructor(readonly rightParenTokenType: TokenType) {\n    super();\n  }\n\n  public parse(parser: Parser, leftParenToken: Token): Expression {\n    const expression = parser.parseExpression();\n    const rightParenToken = parser.consume(this.rightParenTokenType);\n    return new GroupExpression(\n      [leftParenToken, ...expression.tokens, rightParenToken],\n      expression\n    );\n  }\n}\n","import NameExpression from \"../expressions/NameExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token } from \"../types\";\nimport PrefixParselet from \"./PrefixParselet\";\n\n/**\n * Simple parselet for a named variable like \"abc\".\n */\nexport default class NameParselet extends PrefixParselet {\n  constructor(readonly getName: (text: string) => string = (t) => t) {\n    super();\n  }\n  public parse(_parser: Parser, token: Token): Expression {\n    const name = this.getName(token.text);\n    return new NameExpression([token], name, token.text);\n  }\n}\n","import { Expression, punctuator, StringBuilder, Token } from \"../types\";\n\n/**\n * A postfix unary arithmetic expression like \"a!\".\n */\nexport default class PostfixExpression extends Expression {\n  kind = \"postfix\";\n  children = [this.left, this.operatorToken];\n\n  constructor(\n    readonly tokens: Token[],\n    readonly left: Expression,\n    readonly operatorToken: Token\n  ) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    builder(\"(\");\n    this.left.print(builder);\n    builder(punctuator(this.operatorToken.type));\n    builder(\")\");\n  }\n}\n","import PostfixExpression from \"../expressions/PostfixExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token } from \"../types\";\nimport InfixParselet from \"./InfixParselet\";\n\n/**\n * Generic infix parselet for an unary arithmetic operator. Parses postfix\n * unary \"?\" expressions.\n */\nexport default class PostfixOperatorParselet extends InfixParselet {\n  constructor(readonly precedence: number) {\n    super();\n  }\n\n  public parse(_parser: Parser, left: Expression, token: Token): Expression {\n    return new PostfixExpression([...left.tokens, token], left, token);\n  }\n\n  public getPrecedence(): number {\n    return this.precedence;\n  }\n}\n","import { Expression, punctuator, StringBuilder, Token } from \"../types\";\n\n/**\n * A prefix unary arithmetic expression like \"!a\" or \"-b\".\n */\nexport default class PrefixExpression extends Expression {\n  kind = \"prefix\";\n  children = [this.right];\n\n  constructor(\n    readonly tokens: Token[],\n    readonly operatorToken: Token,\n    readonly right: Expression\n  ) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    builder(\"(\");\n    builder(punctuator(this.operatorToken.type));\n    this.right.print(builder);\n    builder(\")\");\n  }\n}\n","import PrefixExpression from \"../expressions/PrefixExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token } from \"../types\";\nimport PrefixParselet from \"./PrefixParselet\";\n\n/**\n * Generic prefix parselet for an unary arithmetic operator. Parses prefixes, for example\n * unary \"-\", \"+\", \"~\", and \"!\" expressions.\n */\nexport default class PrefixOperatorParselet extends PrefixParselet {\n  constructor(readonly precedence: number) {\n    super();\n  }\n\n  public parse(parser: Parser, token: Token): Expression {\n    // To handle right-associative operators like \"^\", we allow a slightly\n    // lower precedence when parsing the right-hand side. This will let a\n    // parselet with the same precedence appear on the right, which will then\n    // take *this* parselet's result as its left-hand argument.\n    const right = parser.parseExpression(this.precedence);\n\n    return new PrefixExpression([token, ...right.tokens], token, right);\n  }\n\n  public getPrecedence(): number {\n    return this.precedence;\n  }\n}\n","import Parser from './Parser';\n\nexport const PrattParser = Parser;\n\nexport * from './parselets/index';\nexport * from './expressions/index';\nexport * from './types';\n\nexport default PrattParser;\n","import { Expression, StringBuilder, Token } from \"../types\";\n\n/**\n * A literal expression like `true`, `\"some string\"`, `1.2345`.\n */\nexport default class LiteralExpression<T> extends Expression {\n  kind = \"literal\";\n  children = this.tokens;\n\n  constructor(\n    readonly tokens: Token[],\n    readonly type: string,\n    readonly value: T\n  ) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    if (this.type === \"string\") {\n      builder(`'${this.value}'`);\n      return;\n    }\n    builder(\"[\");\n    builder(this.type);\n    builder(\" \");\n    builder(String(this.value));\n    builder(\"]\");\n  }\n}\n","import LiteralExpression from \"../expressions/LiteralExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token } from \"../types\";\nimport PrefixParselet from \"./PrefixParselet\";\n\n/**\n * Simple parselet for a literal value, like `-4` or `true`.\n */\nexport default class LiteralParselet<T> extends PrefixParselet {\n  constructor(\n    readonly getValue: (token: Token) => T,\n    readonly getType: (token: Token) => string\n  ) {\n    super();\n  }\n\n  public parse(_parser: Parser, token: Token): Expression {\n    const value = this.getValue(token);\n    const type = this.getType(token);\n    return new LiteralExpression<T>([token], type, value);\n  }\n}\n","import { Expression, StringBuilder, Token } from \"../types\";\n\n/**\n * A simple variable name expression like \"a > b > c\" or \"[foo=~bar]\".\n */\nexport default class SelectorExpression<T> extends Expression {\n  kind = \"selector\";\n  children = [this.selectorToken];\n  tokens = [this.selectorToken];\n\n  constructor(readonly selectorToken: Token, readonly selector: T) {\n    super();\n  }\n\n  public print(builder: StringBuilder): void {\n    builder(this.selectorToken.text);\n  }\n}\n","import SelectorExpression from \"../expressions/SelectorExpression\";\nimport Parser from \"../Parser\";\nimport { Expression, Token } from \"../types\";\nimport PrefixParselet from \"./PrefixParselet\";\n\n/**\n * Simple parselet for a selector variable like \"x > y > z\" or \"a/b/c[d='123']\".\n *\n * Expects that the lexer recognizes the whole selector already completely as one token.\n */\nexport default class SelectorParselet<T> extends PrefixParselet {\n  constructor(readonly getSelector: (text: string) => T) {\n    super();\n  }\n  public parse(_parser: Parser, token: Token): Expression {\n    const selector = this.getSelector(token.text);\n    return new SelectorExpression(token, selector);\n  }\n}\n","/**\n * Defines the different precedence levels used by the infix parsers. These\n * determine how a series of infix expressions will be grouped. For example,\n * \"a + b * c - d\" will be parsed as \"(a + (b * c)) - d\" because \"*\" has higher\n * precedence than \"+\" and \"-\". Here, bigger numbers mean higher precedence.\n */\nexport default class ODKFormulaPrecedence {\n  // Ordered in increasing precedence.\n  public static BOOLEAN_OP = 1;\n  public static CONDITIONAL = 2;\n  public static ASSIGNMENT = 3;\n  public static SUM = 4;\n  public static PRODUCT = 5;\n  public static EXPONENT = 6;\n  public static PREFIX = 7;\n  public static POSTFIX = 8;\n  public static CALL = 9;\n}\n","import {\n  BinaryOperatorParselet,\n  CallParselet,\n  ConditionalParselet,\n  default as PrattParser,\n  Expression,\n  GroupParselet,\n  NameParselet,\n  PostfixOperatorParselet,\n  PrefixOperatorParselet,\n  Token,\n  TokenType,\n} from \"../pratt-parser-base/index\";\nimport LiteralParselet from \"../pratt-parser-base/parselets/LiteralParselet\";\nimport SelectorParselet from \"../pratt-parser-base/parselets/SelectorParselet\";\nimport { ParserOptions } from \"../pratt-parser-base/Parser\";\nimport Precedence from \"./ODKFormulaPrecedence\";\n\n/**\n * Extends the generic PrattParser class with support for parsing ODK formula grammar.\n *\n * Based on a blog post by Bob Nystrom:\n *\n * http://journal.stuffwithstuff.com/2011/03/19/pratt-parsers-expression-parsing-made-easy/\n */\nexport default class ODKFormulaParser extends PrattParser {\n  expressions: Expression[] = [];\n  tokens: Token[] = [];\n\n  constructor(options: ParserOptions) {\n    super({\n      onExpression: (e) =>\n        options.onExpression?.(e) && this.expressions.push(e),\n      onToken: (t) => options.onToken?.(t) && this.tokens.push(t),\n      ...options,\n    });\n\n    // Register all of the parselets for the grammar.\n\n    // Register the ones that need special parselets.\n    this.register(\n      TokenType.NAME,\n      new NameParselet((name) =>\n        name.startsWith(\"$\") ? name.slice(2, name.length - 1) : name\n      )\n    );\n    this.register(\n      TokenType.SELECTOR,\n      new SelectorParselet((text) => text.split(\"/\"))\n    );\n    this.register(\n      TokenType.FLOAT_LITERAL,\n      new LiteralParselet(\n        (t) => parseFloat(t.text),\n        () => \"float\"\n      )\n    );\n    this.register(\n      TokenType.INT_LITERAL,\n      new LiteralParselet(\n        (t) => parseInt(t.text, 10),\n        () => \"int\"\n      )\n    );\n    this.register(\n      TokenType.STRING_LITERAL,\n      new LiteralParselet(\n        (t) => t.text.slice(1, t.text.length - 1),\n        () => \"string\"\n      )\n    );\n    this.register(\n      TokenType.QUESTION,\n      new ConditionalParselet(Precedence.CONDITIONAL)\n    );\n    this.register(\n      TokenType.LEFT_PAREN,\n      new GroupParselet(TokenType.RIGHT_PAREN)\n    );\n    this.register(\n      TokenType.LEFT_PAREN,\n      new CallParselet(TokenType.RIGHT_PAREN, TokenType.COMMA, Precedence.CALL)\n    );\n\n    this.infixRight(TokenType.COMPARISON, Precedence.CONDITIONAL);\n\n    this.infixLeft(TokenType.BOOLEAN_AND, Precedence.BOOLEAN_OP);\n    this.infixLeft(TokenType.BOOLEAN_OR, Precedence.BOOLEAN_OP);\n    this.infixLeft(TokenType.PLUS, Precedence.SUM);\n    this.infixLeft(TokenType.MINUS, Precedence.SUM);\n    this.infixLeft(TokenType.ASTERISK, Precedence.PRODUCT);\n    this.infixLeft(TokenType.SLASH, Precedence.PRODUCT);\n    this.infixLeft(TokenType.MODULO, Precedence.EXPONENT);\n  }\n\n  /**\n   * Registers a postfix unary operator parselet for the given token and\n   * precedence.\n   */\n  public postfix(token: TokenType, precedence: number): void {\n    this.register(token, new PostfixOperatorParselet(precedence));\n  }\n\n  /**\n   * Registers a prefix unary operator parselet for the given token and\n   * precedence.\n   */\n  public prefix(token: TokenType, precedence: number): void {\n    this.register(token, new PrefixOperatorParselet(precedence));\n  }\n\n  /**\n   * Registers a left-associative binary operator parselet for the given token\n   * and precedence.\n   */\n  public infixLeft(token: TokenType, precedence: number): void {\n    this.register(token, new BinaryOperatorParselet(precedence, false));\n  }\n\n  /**\n   * Registers a right-associative binary operator parselet for the given token\n   * and precedence.\n   */\n  public infixRight(token: TokenType, precedence: number): void {\n    this.register(token, new BinaryOperatorParselet(precedence, true));\n  }\n}\n","// tslint:disable-next-line: import-name\nimport SimpleSchema, {\n  SchemaDefinition,\n  ValidationFunction,\n} from \"simpl-schema\";\nimport ODKFormulaLexer from \"../functions/odk-formulas/odk-formula-parser/ODKFormulaLexer\";\nimport ODKFormulaParser from \"../functions/odk-formulas/odk-formula-parser/ODKFormulaParser\";\n\n/**\n * @returns a `SimpleSchema` definition for validating an object with string keys and string\n * values, e.g. for representing localized strings.\n */\nexport const getStringMapSchemaDefinition = <T>(\n  schemaDefinition: Partial<SchemaDefinition<T>> = {}\n): SchemaDefinition<T> => {\n  return {\n    type: Object,\n    blackbox: true,\n    custom() {\n      const { value } = this;\n      if (value === undefined) {\n        return;\n      }\n      if (typeof value === \"string\") {\n        return \"notAllowed\";\n      }\n      const keys = Object.keys(value);\n      for (let i = 0; i < keys.length; i += 1) {\n        const key = keys[i];\n        if (typeof value[key] !== \"string\") {\n          return \"notAllowed\";\n        }\n      }\n      return undefined;\n    },\n    ...schemaDefinition,\n  };\n};\n\n/**\n * @returns a `SimpleSchema` definition for validating an object with language codes as keys and\n * string values, representing localized variants of a string.\n */\nexport const getLocalizedStringSchemaDefinition = getStringMapSchemaDefinition;\n\nconst optionalLocalizedString = getLocalizedStringSchemaDefinition({\n  optional: true,\n});\nconst optionalStringMap = getStringMapSchemaDefinition({ optional: true });\n\n/**\n * A `SimpleSchema` validation function that validates if an ODK formula value is evaluatable.\n */\nconst formulaValidationFunction: ValidationFunction<unknown> = function () {\n  try {\n    const lexer = new ODKFormulaLexer(this.value);\n    const parser = new ODKFormulaParser({ tokens: lexer });\n    parser.parseExpression();\n  } catch (e) {\n    this.addValidationErrors([\n      {\n        name: this.key,\n        type: `Invalid formula: ${e.message}`,\n        value: this.value,\n      },\n    ]);\n  }\n};\n\n/** `SimpleSchema` for a row in the `survey` worksheet of an XLSForm. */\nexport const questionRowSchema = new SimpleSchema({\n  type: {\n    type: String,\n  },\n  name: {\n    type: String,\n    optional: true,\n    custom() {\n      const shouldBeRequired = ![\"end_group\", \"end_repeat\"].includes(\n        this.field(\"type\").value\n      );\n      if (shouldBeRequired) {\n        const error = SimpleSchema.ErrorTypes.REQUIRED;\n\n        // inserts\n        if (!this.operator) {\n          if (!this.isSet || this.value === null || this.value === \"\")\n            return error;\n        }\n\n        // updates\n        else if (this.isSet) {\n          if (\n            (this.operator === \"$set\" && this.value === null) ||\n            this.value === \"\"\n          )\n            return error;\n          if (this.operator === \"$unset\") return error;\n          if (this.operator === \"$rename\") return error;\n        }\n      }\n      return undefined;\n    },\n  },\n  constraint: {\n    type: String,\n    optional: true,\n    custom: formulaValidationFunction,\n  },\n  constraint_message: optionalLocalizedString,\n  label: optionalLocalizedString,\n  image: optionalLocalizedString,\n  video: optionalLocalizedString,\n  hint: optionalLocalizedString,\n  guidance_hint: optionalLocalizedString,\n  required_message: optionalLocalizedString,\n  relevant: {\n    type: String,\n    optional: true,\n    custom: formulaValidationFunction,\n  },\n  choice_filter: {\n    // Only on 'select*' types\n    type: String,\n    optional: true,\n  },\n  calculation: {\n    type: String,\n    optional: true,\n    custom: formulaValidationFunction,\n  },\n  trigger: {\n    type: String,\n    optional: true,\n    custom: formulaValidationFunction,\n  },\n  readonly: {\n    type: String,\n    optional: true,\n  },\n  required: {\n    type: String,\n    optional: true,\n    custom: formulaValidationFunction,\n  },\n  parameters: {\n    type: String,\n    optional: true,\n  },\n  repeat_count: {\n    type: String,\n    optional: true,\n    custom: formulaValidationFunction,\n  },\n  appearance: {\n    type: String,\n    optional: true,\n  },\n  default: {\n    type: String,\n    optional: true,\n  },\n  instance: optionalStringMap,\n  bind: optionalStringMap,\n  body: optionalStringMap,\n});\n\n/** `SimpleSchema` for a row in the `choice` worksheet of an XLSForm. */\nexport const choiceRowSchema = new SimpleSchema({\n  \"list name\": {\n    type: String,\n  },\n  name: {\n    type: String,\n  },\n  label: getLocalizedStringSchemaDefinition(),\n});\n\n/** `SimpleSchema` for a row in the `settings` worksheet of an XLSForm. */\nexport const settingsRowSchema = new SimpleSchema({\n  form_title: {\n    type: String,\n    optional: true,\n  },\n  form_id: {\n    type: String,\n    optional: true,\n  },\n  public_key: {\n    type: String,\n    optional: true,\n  },\n  submission_url: {\n    type: String,\n    optional: true,\n  },\n  default_language: {\n    type: String,\n    optional: true,\n  },\n  version: {\n    type: String,\n    optional: true,\n  },\n});\n","import {\n  choiceRowSchema,\n  questionRowSchema,\n  settingsRowSchema,\n} from \"./RowSchemas\";\n\nexport type StringMap = Record<string, string>;\n\n/**\n * Object with language codes as keys and strings as values, representing localized variants of a\n * string.\n */\n\nexport type LocalizedString = StringMap;\n\n/** Represents a row in the 'survey' worksheet */\n\nexport type QuestionRow = Record<\n  string,\n  string | LocalizedString | undefined\n> & {\n  /** specifies the type of entry you are adding. */\n  type: string;\n  /** specifies the unique variable name for that entry. No two entries can have the same name. Names have to start with a letter or an underscore. Names can only contain letters, digits, hyphens, underscores, and periods. Names are case-sensitive. */\n  name: string;\n  /** contains the actual text you see in the form. Alternatively, label translation columns can be used. */\n  label: LocalizedString;\n  constraint?: string;\n  constraint_message?: LocalizedString;\n  image?: LocalizedString;\n  audio?: LocalizedString;\n  video?: LocalizedString;\n  hint?: LocalizedString;\n  guidance_hint?: string;\n  relevant?: string;\n  choice_filter?: string;\n  calculation?: string;\n  trigger?: string;\n  readonly?: string;\n  required?: string;\n  required_message?: LocalizedString;\n  parameters?: string;\n  repeat_count?: string;\n  appearance?: string;\n  default?: string;\n  instance?: StringMap;\n  bind?: StringMap;\n  body?: StringMap;\n};\n\n/** Represents a row in the 'choices' worksheet */\n\nexport type ChoiceRow = Record<string, string | LocalizedString> & {\n  /** lets you group together a set of related answer choices, i.e., answer choices that should appear together under a question. */\n  \"list name\": string;\n  /** specifies the unique variable name for that answer choice. */\n  name: string;\n  /** shows the answer choice exactly as you want it to appear on the form. Alternatively, label translation columns can be used. */\n  label: LocalizedString;\n};\n\n/** Represents a row in the 'settings' worksheet */\n\nexport type SettingsRow = Record<string, string> & {\n  /** The title of the form that is shown to users. The form title is pulled from form_id if form_title is blank or missing. */\n  form_title: string;\n  /** The name used to uniquely identify the form on the server. The form id is pulled from the XLS file name if form_id is blank or missing. */\n  form_id: string;\n  /** For encryption-enabled forms, this is where the public key is copied and pasted. */\n  public_key: string;\n  /** This url can be used to override the default server where finalized records are submitted to. */\n  submission_url: string;\n  /** In localized forms, this sets which language should be used as the default. The same format as described for adding translations should be used, including the language code. */\n  default_language: string;\n  /** String of up to 10 numbers that describes this revision. Revised form definitions must have numerically greater versions than previous ones. A common convention is to use strings of the form 'yyyymmddrr'. For example, 2017021501 is the 1st revision from Feb 15th, 2017. */\n  version: string;\n};\n\nexport function assertValidQuestionRow(\n  row: Record<string, unknown>\n): asserts row is QuestionRow {\n  return questionRowSchema.validate(row);\n}\n\nexport function assertValidChoiceRow(\n  row: Record<string, unknown>\n): asserts row is ChoiceRow {\n  return choiceRowSchema.validate(row, { keys: [\"list name\", \"name\"] });\n}\n\nexport function assertValidSettingsRow(\n  row: Record<string, unknown>\n): asserts row is SettingsRow {\n  return settingsRowSchema.validate(row);\n}\n","import Excel from \"exceljs\";\nimport { SyntaxError } from \"../types/Errors\";\nimport {\n  choiceRowSchema,\n  questionRowSchema,\n  settingsRowSchema,\n} from \"../types/RowSchemas\";\nimport {\n  assertValidChoiceRow,\n  assertValidQuestionRow,\n  assertValidSettingsRow,\n  ChoiceRow,\n  QuestionRow,\n  SettingsRow,\n} from \"../types/RowTypes\";\nimport { WorksheetName, WorksheetRowsWithMetadata } from \"../types/XLSForm\";\n\nexport const localizableColumnNames = [\n  \"label\",\n  \"hint\",\n  \"constraint_message\",\n  \"required_message\",\n  \"image\",\n  \"audio\",\n  \"video\",\n];\n\n/**\n * XLSForm uses double colons (`::`) in column names to allow multilingual variants of the same\n * column, like ‘label::русский (ru)’ or ‘label::English (en)’, and for custom namespacing.\n *\n * For each column name that supports this concept, the function finds matching columns in the\n * given row, and merges them them into a single object.\n *\n * You can supply a default suffix to always obtain namespaced objects after processing a row.\n *\n * @see [‘Advanced use and extensibility’](https://xlsform.org/en/#advanced-use-and-extensibility)\n * in the XLSForm specification.\n *\n * @example\n * // before\n *\n * {\n *   'label::русский (ru)': 'Как тебя зовут?',\n *   'label::English (en)': 'What is your name?'\n * }\n *\n * // after\n *\n * {\n *   label: {\n *     'русский (ru)': 'Как тебя зовут?',\n *     'English (en)': 'What is your name?'\n *   }\n * }\n */\nexport function nestDoubleColonFields(\n  /** The row to process. */\n  row: Record<string, unknown>,\n  /** The prefixes before the :: that you want nested */\n  namespacePrefixes: string[],\n  /**\n   * Use this to enforce the result to be always nested, even if a localizable column is not\n   * localized.\n   */\n  defaultSuffix?: string\n): {\n  result: Readonly<Record<string, unknown>>;\n  foundSuffixes: Readonly<Set<string>>;\n} {\n  const result: Record<string, unknown> = {\n    ...row,\n  };\n\n  const foundSuffixes = new Set<string>();\n\n  if (defaultSuffix) {\n    namespacePrefixes.forEach((k) => {\n      if (result[k]) {\n        result[`${k}::${defaultSuffix}`] = result[k];\n      }\n      foundSuffixes.add(defaultSuffix);\n      delete result[k];\n    });\n  }\n\n  namespacePrefixes.forEach((namespacePrefix) => {\n    Object.keys(result)\n      .filter((k) => k.startsWith(namespacePrefix))\n      .forEach((k) => {\n        const [prefix, suffix] = k.split(/::/);\n        /* Example { 'label::English (en)': 'A label!' } */\n        const objectToExtend = result[prefix] as\n          | Record<string, string>\n          | string;\n        const value = String(result[k]);\n        if (objectToExtend === undefined) {\n          result[prefix] = { [suffix]: value };\n          foundSuffixes.add(suffix);\n        } else if (typeof objectToExtend === \"object\") {\n          objectToExtend[suffix] = value;\n          foundSuffixes.add(suffix);\n        } else {\n          throw new SyntaxError(\n            `Can't handle \\`${prefix}\\` column. Columns with prefix \\`${prefix}\\` must be namespaced with \\`::\\`. See chapter [‘Advanced use and extensibility’](https://xlsform.org/en/#advanced-use-and-extensibility) in the documentation.`\n          );\n        }\n        delete result[k];\n      });\n  });\n\n  return { result, foundSuffixes };\n}\n\n// See reference table: https://xlsform.org/en/ref-table/\n\nexport function normalizeColumnNames(\n  headerRow: readonly string[]\n): readonly string[] {\n  const result: string[] = [];\n  for (let i = 0; i < headerRow.length; i += 1) {\n    const columnName = headerRow[i]?.toString() || \"\";\n    result.push(\n      columnName\n        .replace(/^constraint-msg\\B/, \"constraint_message\")\n        .replace(/^requiredMsg\\B/, \"required_message\")\n        .replace(/^bind::required$/, \"required\")\n        .replace(/^repeat-count$/, \"repeat_count\")\n        .replace(/^media::(image|audio|video)\\B/, \"$1\")\n        .replace(/^photo\\B/, \"image\")\n        .replace(/^list_name$/, \"list name\")\n        .replace(/\\$/g, \"__DOLLAR_SIGN__\")\n    );\n  }\n  return Object.freeze(result);\n}\n\n// See reference table: https://xlsform.org/en/ref-table/. For groups and repeats, we deviate from\n// the reference to always use underscores, making a type name recognizable with a [a-z_]+ regex\n// pattern.\n\nexport function normalizeType(type: string): string {\n  return type\n    .replace(/^media::(image|audio|video)\\B/, \"$1\")\n    .replace(/^imei$/, \"deviceid\")\n    .replace(/^phone_number$/, \"phonenumber\")\n    .replace(/^select one\\B/, \"select_one\")\n    .replace(/^select multiple\\B/, \"select_multiple\")\n    .replace(/^location$/, \"geopoint\")\n    .replace(/^photo\\B/, \"image\")\n    .replace(/^trigger$/, \"acknowledge\")\n    .replace(/^begin group$/, \"begin_group\")\n    .replace(/^end group$/, \"end_group\")\n    .replace(/^begin repeat$/, \"begin_repeat\")\n    .replace(/^end repeat$/, \"end_repeat\");\n}\n\nconst autoCleanOptions = {\n  getAutoValues: true,\n  trimStrings: true,\n  mutate: false,\n};\n\n// Loads a plain object, cleans it up and throws if it’s not a valid row from a `survey` worksheet.\nexport function loadQuestionRow(row: Record<string, unknown>): QuestionRow {\n  const cleanRow = questionRowSchema.clean(\n    { ...row, type: normalizeType(String(row.type)) },\n    autoCleanOptions\n  );\n  assertValidQuestionRow(cleanRow);\n  return cleanRow;\n}\n\n// Loads a plain object, cleans it up and throws if it’s not a valid row from a `choices` worksheet.\nexport function loadChoicesRow(row: Record<string, unknown>): ChoiceRow {\n  const cleanRow = choiceRowSchema.clean(row, {\n    ...autoCleanOptions,\n    filter: false,\n  });\n  assertValidChoiceRow(cleanRow);\n  return cleanRow;\n}\n\n// Loads a plain object, cleans it up and throws if it’s not a valid row from a `settings` worksheet.\nexport function loadSettingsRow(row: Record<string, unknown>): SettingsRow {\n  const cleanRow = settingsRowSchema.clean(row, autoCleanOptions);\n  assertValidSettingsRow(cleanRow);\n  return cleanRow;\n}\n\ntype LoadRowFunction<T> = (row: Record<string, unknown>) => T;\n\n// Turns a plain ExcelJS row into a handier data model, cleaning it up and throwing if it’s invalid.\nexport function loadExcelRow<RowT>({\n  row,\n  columnNames,\n  defaultLanguage,\n  loadRowFn,\n}: {\n  readonly row: Excel.Row;\n  readonly columnNames: readonly string[];\n  readonly defaultLanguage: string | undefined;\n  readonly loadRowFn: LoadRowFunction<RowT>;\n}) {\n  const rowRawData: Record<string, unknown> = {};\n  (row.values as Excel.CellValue[]).slice(1).forEach((value, columnIndex) => {\n    const columnName = columnNames[columnIndex];\n    rowRawData[columnName] = `${value}`;\n  });\n  const { result: rowDataWithLocalizedStrings } = nestDoubleColonFields(\n    rowRawData,\n    localizableColumnNames,\n    defaultLanguage\n  );\n  const {\n    result: rowDataWithNamespacedFields,\n  } = nestDoubleColonFields(rowDataWithLocalizedStrings, [\n    \"instance\",\n    \"bind\",\n    \"body\",\n  ]);\n  try {\n    return loadRowFn(rowDataWithNamespacedFields);\n  } catch (error) {\n    throw new SyntaxError(\n      `Could not load row ${JSON.stringify(\n        rowDataWithNamespacedFields,\n        null,\n        2\n      )}: ${error} / ${JSON.stringify(error.details)}`\n    );\n  }\n}\n\n/**\n * @returns a set of localization language names from a given list of column names.\n *\n * @example\n * findLanguagesInColumnNames([\n *   'label::русский (ru)',\n *   'label::English (en)'\n * ]) // -> ['русский (ru)', 'English (en)']\n *\n * findLanguagesInColumnNames(['label']) // -> ['English (en)']\n */\nfunction findLanguagesInColumnNames(\n  columnNames: readonly string[],\n  defaultLanguage?: string\n): Readonly<Set<string>> {\n  const columnNamesToTrues: Record<string, unknown> = {};\n  columnNames.forEach((name) => {\n    columnNamesToTrues[name] = true;\n  });\n  const { foundSuffixes } = nestDoubleColonFields(\n    columnNamesToTrues,\n    localizableColumnNames,\n    defaultLanguage\n  );\n  return foundSuffixes;\n}\n\n/**\n * Loads an worksheet from an ExcelJS workbook and returns the sheet in our internal data model.\n */\nexport function loadWorksheet<RowT>(\n  /** The ExcelJS `Workbook` from which the sheet should be loaded. */\n  workbook: Excel.Workbook,\n  /** Name of the worksheet, for example, `\"survey\"` */\n  sheetName: WorksheetName,\n  /** Function to process, clean up, and load a single row into our internal row data model. */\n  loadRowFn: LoadRowFunction<RowT>,\n  /** Default language to assume if a column is not localized. */\n  defaultLanguage?: string\n): WorksheetRowsWithMetadata<RowT> | undefined {\n  const excelWorksheet = workbook.getWorksheet(sheetName);\n  const rows: RowT[] = [];\n\n  if (!excelWorksheet) {\n    return undefined;\n  }\n\n  const firstRow = excelWorksheet.getRows(1, 1)[0];\n  if (!(firstRow.values instanceof Array)) {\n    throw new SyntaxError(\n      `First row of the ‘${sheetName}’ worksheet must be an array structure, but is a ${typeof firstRow.values} instead. Please fix this.`\n    );\n  }\n\n  // Normalize column names because XLSForm implementations vary, unfortunately\n  const columnNames = firstRow.values\n    .slice(1)\n    .map((cellValue) => cellValue?.toString() || \"\");\n  const columnNamesNormalized = normalizeColumnNames(columnNames);\n\n  const languages = findLanguagesInColumnNames(\n    columnNamesNormalized,\n    defaultLanguage\n  );\n\n  // Apply given row loading function to all rows\n  excelWorksheet.eachRow((row, rowIndex) => {\n    if (rowIndex === 1) {\n      return;\n    }\n    rows.push(\n      loadExcelRow<RowT>({\n        row,\n        columnNames: columnNamesNormalized,\n        defaultLanguage,\n        loadRowFn,\n      })\n    );\n  });\n\n  return { rows, languages, columnNames, columnNamesNormalized };\n}\n","import { parseAttributeFlags } from \"../types/AppearanceAttributeFlags\";\nimport {\n  BeginMarkerRow,\n  BeginOrEndMarkerRow,\n} from \"../types/BeginOrEndMarkerRow\";\nimport { SemanticError } from \"../types/Errors\";\nimport { ODKNode } from \"../types/ODKNode\";\nimport { QuestionRow } from \"../types/RowTypes\";\nimport { normalizeType } from \"./loadSurveyFromXLSX\";\n\nfunction assertNoEndMarker(\n  row: QuestionRow | BeginOrEndMarkerRow,\n  i: number\n): asserts row is QuestionRow | BeginMarkerRow {\n  if (row.type.match(/^end[ _](?:group|repeat)$/)) {\n    throw new SemanticError(\n      `Found '${row.type}' without a matching start marker in row ${\n        i + 2\n      }. Please check that the group/repeat nesting is correct. The row: ${row}`\n    );\n  }\n}\n\n/**\n * Calculates a nested `Node` survey tree model for an array of non-nested survey worksheet rows.\n *\n * This nests everything between `begin_group`…`end_group` and `begin_repeat`…`end_repeat` row\n * markers.\n */\nexport default function nestSurvey({\n  /** flat array of non-nested rows to tree-ify */\n  rows,\n  /** Language name to assume if a column is not localized, for example, `\"English (en)\"` */\n  defaultLanguage,\n  /**\n   * In the XLSForm standard, the root survey node is reachable under the `//data` selector, so we\n   * name it `\"data\"` by default - you can customize this name, if necessary.\n   */\n  formRootNameFromSettings = \"data\",\n  /**\n   * Because it looks intuitive, you can give the root node a title, too. If you supply no title,\n   * the survey form's title is used (if it is defined in the `settings` worksheet).\n   */\n  titleFromSettings = \"\",\n  /**\n   * Called back for each row that is found, with the row and its generated `ODKNode` (if\n   * applicable).\n   */\n  onRow,\n}: {\n  rows: readonly (QuestionRow | BeginOrEndMarkerRow)[];\n  defaultLanguage: string;\n  formRootNameFromSettings?: string;\n  titleFromSettings?: string;\n  onRow?: (row: QuestionRow | BeginOrEndMarkerRow, node: ODKNode) => void;\n}): {\n  node: Readonly<ODKNode>;\n} {\n  const root: ODKNode = {\n    children: [] as ODKNode[],\n    type: \"\",\n    typeParameters: [],\n    rowIndex: -1,\n    indentationLevel: 0,\n    row: {\n      name: formRootNameFromSettings,\n      type: \"\",\n      label: { [defaultLanguage]: titleFromSettings },\n    } as QuestionRow,\n  };\n  const stack: ODKNode[] = [root];\n  let i = 0;\n\n  while (i < rows.length) {\n    const row = rows[i];\n    const [type, ...typeParameters] = normalizeType(row.type).split(\" \");\n    const appearance =\n      row.appearance && row.appearance.trim().length > 0\n        ? parseAttributeFlags(row.appearance)\n        : undefined;\n    const lastOpenedGroup = stack[stack.length - 1];\n\n    if (lastOpenedGroup.type === \"begin_group\" && type === \"end_group\") {\n      // Found an end marker row for the currently open group\n      stack.pop();\n      onRow?.(row, lastOpenedGroup);\n    } else if (\n      // Found an end marker row for the currently open repeat\n      lastOpenedGroup.type === \"begin_repeat\" &&\n      row.type === \"end_repeat\"\n    ) {\n      stack.pop();\n      onRow?.(row, lastOpenedGroup);\n    } else if (type.match(/^begin_(?:repeat|group)$/)) {\n      // Found the beginning of a new nested group or repeat\n      const newGroupNode: ODKNode = {\n        row: row as BeginMarkerRow,\n        type,\n        typeParameters,\n        children: [],\n        indentationLevel: stack.length - 1,\n        rowIndex: i,\n      };\n      if (appearance !== undefined) {\n        newGroupNode.appearance = appearance;\n      }\n      lastOpenedGroup.children.push(newGroupNode);\n      stack.push(newGroupNode);\n      onRow?.(row, newGroupNode);\n    } else {\n      // Assume we found a 'normal', non-nested row\n      assertNoEndMarker(row, i);\n      const newChildNode: ODKNode = {\n        row,\n        type,\n        typeParameters,\n        indentationLevel: stack.length - 1,\n        rowIndex: i,\n        children: [],\n      };\n      if (appearance !== undefined) {\n        newChildNode.appearance = appearance;\n      }\n      lastOpenedGroup.children.push(newChildNode);\n      onRow?.(row, newChildNode);\n    }\n\n    i += 1;\n  }\n\n  return { node: root };\n}\n","import nestSurvey from \"../functions/nestSurvey\";\nimport { ODKNode } from \"./ODKNode\";\nimport { ChoiceRow, QuestionRow, SettingsRow } from \"./RowTypes\";\n\n/** Represents the content and meta information of a single worksheet in an XLSForm document. */\nexport type XLSFormWorksheet<RowT> = Readonly<{\n  rows: readonly RowT[];\n  languages: Readonly<Set<string>>;\n  columnNames: readonly string[];\n  columnNamesNormalized: readonly string[];\n}>;\n\n/** Represents the content and meta information of the `survey` worksheet in an XLSForm document. */\nexport type SurveyWorksheet = XLSFormWorksheet<QuestionRow>;\n/** Represents the content and meta information of the `choices` worksheet in an XLSForm document. */\nexport type ChoicesWorksheet = XLSFormWorksheet<ChoiceRow>;\n/** Represents the content and meta information of the `settings` worksheet in an XLSForm document. */\nexport type SettingsWorksheet = XLSFormWorksheet<SettingsRow>;\n\nexport type ChoiceRowByName = Record<string, ChoiceRow>;\nexport type ChoiceRowsByListNameAndName = Record<string, ChoiceRowByName>;\n\nexport type FlatNode = {\n  row: Readonly<QuestionRow>;\n  node: Readonly<ODKNode>;\n};\n\n/** Represents content and meta information of an XLSForm document. */\nexport type XLSForm = {\n  worksheets: {\n    survey: SurveyWorksheet;\n    choices?: ChoicesWorksheet;\n    settings?: SettingsWorksheet;\n  };\n  // TODO: Rename this to choiceRowsByNameAndListName\n  choicesByName: Readonly<ChoiceRowsByListNameAndName>;\n  /** The root node of the survey. Contains all groups and fields as descendants. */\n  rootSurveyGroup: Readonly<ODKNode>;\n  /** A set of all languages that the XLSForm uses in column names. */\n  languages: Readonly<Set<string>>;\n  /**\n   * All nodes by their row index. Rows containing `end_group` and `end_repeat` types are mapped\n   * to the same reference as their respective begin marker rows.\n   */\n  flatNodes: readonly ODKNode[];\n};\n\nexport type WorksheetName = keyof XLSForm[\"worksheets\"];\n\nexport type WorksheetRowsWithMetadata<RowT> = {\n  rows: readonly RowT[];\n  languages: Readonly<Set<string>>;\n  columnNames: readonly string[];\n  columnNamesNormalized: readonly string[];\n};\n\n/**\n * Creates a map of choice list names -> choice names -> choice rows from the `choices` worksheet\n * of an XLSForm\n */\nexport function loadChoices(\n  worksheet: ChoicesWorksheet\n): ChoiceRowsByListNameAndName {\n  const map: ChoiceRowsByListNameAndName = {};\n\n  worksheet.rows.forEach((row) => {\n    const listName = row[\"list name\"];\n    const { name } = row;\n    const list = map[listName] || {};\n    list[name] = row;\n    map[listName] = list;\n  });\n\n  return map;\n}\n\n/**\n * @returns an XLSForm model created from raw worksheet rows.\n */\nexport function loadXLSFormFromRows(\n  survey: Readonly<WorksheetRowsWithMetadata<QuestionRow>>,\n  defaultLanguage: string,\n  settings?: WorksheetRowsWithMetadata<SettingsRow>,\n  choices?: WorksheetRowsWithMetadata<ChoiceRow>\n) {\n  const flatNodes: ODKNode[] = [];\n  const { node: rootSurveyGroup } = nestSurvey({\n    rows: survey.rows,\n    defaultLanguage,\n    onRow: (row, node) => flatNodes.push(node),\n  });\n\n  const xlsForm: XLSForm = {\n    worksheets: {\n      settings,\n      choices,\n      survey,\n    },\n    rootSurveyGroup,\n    choicesByName: choices ? loadChoices(choices) : {},\n    languages: survey.languages,\n    flatNodes,\n  };\n  return xlsForm;\n}\n","import Excel from \"exceljs\";\nimport { loadXLSFormFromRows, XLSForm } from \"../types/XLSForm\";\nimport {\n  loadChoicesRow,\n  loadQuestionRow,\n  loadSettingsRow,\n  loadWorksheet,\n} from \"./loadSurveyFromXLSX\";\n\n/**\n * Loads a given ExcelJS workbook.\n *\n * @returns an `XLSForm` model.\n */\n\nexport async function loadFormFromExcelWorkbook(\n  /** The ExcelJS workbook to load as XLSForm model. */\n  workbook: Excel.Workbook\n): Promise<XLSForm> {\n  const settings = loadWorksheet(workbook, \"settings\", loadSettingsRow);\n  const defaultLanguage = settings?.rows[0].default_language || \"English (en)\";\n  const choices = loadWorksheet(\n    workbook,\n    \"choices\",\n    loadChoicesRow,\n    defaultLanguage\n  );\n  const survey = loadWorksheet(\n    workbook,\n    \"survey\",\n    loadQuestionRow,\n    defaultLanguage\n  );\n\n  if (!survey) {\n    throw new Error(\n      \"No `survey` sheet found in workbook. Please define a sheet named `survey` and try again.\"\n    );\n  }\n\n  const xlsForm: XLSForm = loadXLSFormFromRows(\n    survey,\n    defaultLanguage,\n    settings,\n    choices\n  );\n\n  return xlsForm;\n}\n","import ExcelJS from \"exceljs\";\n\nexport default async function loadEmptyXLSFormWorkbook() {\n  const emptyWorkbook = new ExcelJS.Workbook();\n\n  emptyWorkbook.addWorksheet(\"survey\");\n  emptyWorkbook.addWorksheet(\"choices\");\n\n  const settingsWorksheet = emptyWorkbook.addWorksheet(\"settings\");\n  settingsWorksheet.addRow([\"default_language\"]);\n  settingsWorksheet.addRow([\"English (en)\"]);\n\n  return emptyWorkbook;\n}\n","import { loadFormFromExcelWorkbook } from \"../loadFormFromExcelWorkbook\";\nimport loadEmptyXLSFormWorkbook from \"./loadEmptyXLSFormWorkbook\";\n\nexport default async function createEmptyXLSForm() {\n  return await loadFormFromExcelWorkbook(await loadEmptyXLSFormWorkbook());\n}\n","import { FileInput } from \"@blueprintjs/core\";\nimport * as ExcelJS from \"exceljs\";\nimport * as React from \"react\";\nimport { Patch } from \"../lib/undo/useUndoHistory\";\nimport { XLSForm } from \"../xlsform-simple-schema\";\nimport { loadFormFromExcelWorkbook } from \"../xlsform-simple-schema/functions/loadFormFromExcelWorkbook\";\n\nexport default function ExcelFileInput(props: {\n  setXLSFormWithPatches: (\n    description: string,\n    value: XLSForm | undefined,\n    patches: Patch[],\n    inversePatches: Patch[]\n  ) => void;\n  setLanguage: (language: string) => void;\n}) {\n  const { onFileChange } = useWorkbookFromFile(props);\n  return <FileInput onInputChange={onFileChange} large={true} />;\n}\n\nexport function useWorkbookFromFile({\n  setXLSFormWithPatches,\n  setLanguage,\n}: {\n  setXLSFormWithPatches: (\n    description: string,\n    value: XLSForm | undefined,\n    patches: Patch[],\n    inversePatches: Patch[]\n  ) => void;\n  setLanguage: (language: string) => void;\n}) {\n  const onLoadWorkbook = React.useCallback(\n    async (workbook: ExcelJS.Workbook) => {\n      const xlsForm = await loadFormFromExcelWorkbook(workbook);\n      setXLSFormWithPatches(\"Load Excel workbook\", xlsForm, [], []);\n      setLanguage(\n        xlsForm.worksheets.settings?.rows[0].default_language ||\n          [...xlsForm.languages?.values()][0] ||\n          \"English (en)\"\n      );\n    },\n    [setLanguage, setXLSFormWithPatches]\n  );\n\n  const onFileChange = React.useCallback(\n    (e) => {\n      const file = e.target.files[0];\n      const wb = new ExcelJS.Workbook();\n      const reader = new FileReader();\n\n      reader.readAsArrayBuffer(file);\n      reader.onload = () => {\n        const buffer = reader.result;\n        if (!(buffer instanceof ArrayBuffer)) {\n          throw new Error(\n            \"Buffer was not defined as Buffer object after reading.\"\n          );\n        }\n        wb.xlsx.load(buffer).then((workbook) => {\n          onLoadWorkbook(wb);\n        });\n      };\n    },\n    [onLoadWorkbook]\n  );\n\n  return { onFileChange };\n}\n","import { Button, ControlGroup, NonIdealState } from \"@blueprintjs/core\";\nimport React, { useCallback } from \"react\";\nimport { Patch } from \"../lib/undo/useUndoHistory\";\nimport createEmptyXLSForm from \"../xlsform-simple-schema/functions/editing/createEmptyXLSForm\";\nimport { XLSForm } from \"../xlsform-simple-schema/index\";\nimport ExcelFileInput from \"./ExcelFileInput\";\n\n/** Shows a load button and a 'create empty survey' button after the app just loaded. */\nexport function AppEmptyState({\n  setXLSFormWithPatches,\n  setLanguage,\n}: {\n  setXLSFormWithPatches: (\n    description: string,\n    value: XLSForm | undefined,\n    patches: Patch[],\n    inversePatches: Patch[]\n  ) => void;\n  setLanguage: (language: string) => void;\n}) {\n  const fileInput = (\n    <ExcelFileInput {...{ setXLSFormWithPatches, setLanguage }} />\n  );\n\n  const loadEmptyXLSForm = useCallback(async () => {\n    setXLSFormWithPatches(\n      \"Load empty XLSForm document\",\n      await createEmptyXLSForm(),\n      [],\n      []\n    );\n  }, [setXLSFormWithPatches]);\n\n  const nonIdealStateActions = (\n    <ControlGroup vertical={true}>\n      <p>{fileInput}</p>\n      <p>or</p>\n      <p>\n        <Button large={true} onClick={loadEmptyXLSForm}>\n          Start from scratch\n        </Button>\n      </p>\n    </ControlGroup>\n  );\n\n  const nonIdealState = (\n    <NonIdealState\n      icon=\"document-open\"\n      title=\"Open an XLSForm Excel file to start.\"\n      action={nonIdealStateActions}\n    />\n  );\n  return nonIdealState;\n}\n","import { XLSForm } from \"../../xlsform-simple-schema\";\nimport { createUndoHistoryContext } from \"./createUndoHistoryContext\";\n\nexport const UndoContext = createUndoHistoryContext<XLSForm>();\n","import { Patch } from \"immer\";\nimport * as React from \"react\";\nimport { UndoHistory } from \"./types\";\n\nexport type UndoContextType<T> = {\n  setDocumentWithPatches: (\n    description: string,\n    nextState: T | undefined,\n    patches: Patch[],\n    inversePatches: Patch[]\n  ) => void;\n  document: T | undefined;\n  undoHistory: UndoHistory<T>;\n  undo: () => void;\n  redo: () => void;\n  gotoIndex: (index: number) => void;\n};\n\nexport function createUndoHistoryContext<T>() {\n  return React.createContext<UndoContextType<T>>({\n    undoHistory: {\n      commands: [],\n      index: -1,\n    },\n    setDocumentWithPatches: () => {},\n    undo: () => {},\n    redo: () => {},\n    gotoIndex: () => {},\n    document: undefined,\n  });\n}\n","import { Callout } from \"@blueprintjs/core\";\nimport { omit } from \"lodash\";\nimport marked from \"marked\";\nimport * as React from \"react\";\nimport unindent from \"./unindent\";\n\ninterface IProps extends React.HTMLProps<HTMLDivElement> {\n  children: React.ReactNode;\n  /** Use this to supply any markdown compiler function that can convert a Markdown string to a HTML string */\n  marked: (markdown: string) => string;\n  /** Removes <p></p> tags around the markdown code */\n  inline?: boolean;\n}\n\n// Use this code to load the component lazily at runtime.\n// const Markdown = LoadableMap({\n//   loader: {\n//     marked: () => import(\"marked\"),\n//   },\n//   render(loaded, props: IProps) {\n//     return <MarkdownDivOrSpan {...props} marked={loaded.marked?.default} />;\n//   },\n//   loading: () => null,\n// });\n\n/**\n * React component that displays a given Markdown as formatted output. Allows arbitrary indentation\n * of the whole code for readability.\n *\n * @example\n *   <Markdown>{`\n *     # A header\n *\n *     ## A secondary header\n *\n *     - a list item\n *     - another list item\n *   `}</Markdown>\n */\nfunction Markdown(props: {\n  children: React.ReactNode;\n  /** Removes <p></p> tags around the markdown code */\n  inline?: boolean;\n  style?: React.CSSProperties;\n  markedOptions?: marked.MarkedOptions;\n}) {\n  const markedFn = React.useMemo(\n    () => (markdown: string) => {\n      return marked(markdown, props.markedOptions);\n    },\n    [props.markedOptions]\n  );\n  return (\n    <MarkdownDivOrSpan {...omit(props, \"markedOptions\")} marked={markedFn} />\n  );\n}\n\nexport default Markdown;\n\n/**\n * Internal component used by the <Markdown> React component.\n */\nfunction MarkdownDivOrSpan(props: IProps) {\n  if (typeof props.children !== \"string\") {\n    return (\n      <Callout intent=\"danger\">Markdown content must be a string.</Callout>\n    );\n  }\n  let html = props.marked?.(unindent(props.children));\n  if (props.inline) {\n    html = html.replaceAll(/<\\/?p>/g, \"\");\n  }\n  const DivOrSpan = props.inline ? \"span\" : \"div\";\n  return (\n    <DivOrSpan\n      {...omit(props, \"children\", \"marked\", \"inline\")}\n      dangerouslySetInnerHTML={{\n        __html: html,\n      }}\n    />\n  );\n}\n","/**\n * Removes first level of whitespace indentation from a given string by recognizing the indentation\n * level from the first line that has non-whitespace content contains  to remove.\n *\n * This allows to specify hardcoded strings with indentation in code without having to break the\n * code's own indentation:\n *\n * @example\n *   // before:\n *   function getMarkdown() {\n *     return `\n *   # Hello\n *\n *   - this is a markdown list\n *   - with multiple items\n *   `;\n *   }\n *\n *   // with unindent:\n *   function getMarkdown() {\n *     return unindent(`\n *       # Hello\n *\n *       - this is a markdown list\n *       - with multiple items\n *     `);\n *   }\n*/\nexport default function unindent(input: string): string {\n  const firstLineWithContent = input\n    .split(/\\n/)\n    .find(line => line.replace(/\\s/, '').length > 0);\n  if (!firstLineWithContent) {\n    return input;\n  }\n\n  const matchedIndentation = firstLineWithContent.match(/^\\s+/);\n  if (!matchedIndentation) {\n    return input;\n  }\n\n  const matchedIndentationString = matchedIndentation[0];\n  if (!matchedIndentationString) {\n    return input;\n  }\n\n  const indentationRegExp = new RegExp(`^${matchedIndentationString}`);\n  return input\n    .split(/\\n/)\n    .map(line => line.replace(indentationRegExp, ''))\n    .join('\\n');\n}\n","import {\n  Button,\n  KeyCombo,\n  Menu,\n  MenuDivider,\n  MenuItem,\n} from \"@blueprintjs/core\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport React from \"react\";\nimport { UndoContext } from \"../lib/undo/UndoContext\";\nimport Markdown from \"./core/Markdown\";\n\n/** Button showing a 'Edit' menu */\nexport function EditMenuButton() {\n  const undoContext = React.useContext(UndoContext);\n  const { undoHistory } = undoContext;\n  const nextCommand = undoHistory.commands[undoHistory.index + 1];\n\n  const menu = (\n    <Menu>\n      <MenuItem\n        text={<Markdown inline={true}>{`Undo`}</Markdown>}\n        labelElement={<KeyCombo combo={\"mod+z\"} minimal={true}></KeyCombo>}\n        onClick={undoContext.undo}\n      />\n      <MenuItem\n        text={\n          nextCommand ? <Markdown inline={true}>{`Redo`}</Markdown> : \"Redo\"\n        }\n        labelElement={\n          <KeyCombo combo={\"mod+shift+z\"} minimal={true}></KeyCombo>\n        }\n        onClick={undoContext.redo}\n        disabled={!nextCommand}\n      />\n      <MenuDivider />\n      <MenuItem text=\"History\">\n        {undoHistory.commands.map((command, i) => (\n          <MenuItem\n            key={i}\n            active={i === undoHistory.index}\n            text={<Markdown inline={true}>{command.description}</Markdown>}\n            onClick={() => undoContext.gotoIndex(i)}\n          />\n        ))}\n      </MenuItem>\n    </Menu>\n  );\n\n  const button = (\n    <Button className=\"bp3-minimal\" rightIcon=\"caret-down\" text=\"Edit\" />\n  );\n\n  return (\n    <>\n      <Popover2\n        content={menu}\n        lazy={true}\n        placement={\"bottom-end\"}\n        minimal={true}\n      >\n        {button}\n      </Popover2>\n    </>\n  );\n}\n","import * as ExcelJS from \"exceljs\";\nimport { get } from \"lodash\";\nimport { WorksheetName, XLSForm } from \"../../types/XLSForm\";\nimport {\n  localizableColumnNames,\n  normalizeColumnNames,\n} from \"../loadSurveyFromXLSX\";\n\nexport function generateExcelWorkbook(xlsForm: XLSForm) {\n  const workbook = new ExcelJS.Workbook();\n  workbook.modified = workbook.created = new Date();\n  workbook.creator = \"Sozialheld*innen Survey Editor\";\n\n  const worksheetNames: WorksheetName[] = [\"survey\", \"choices\", \"settings\"];\n  worksheetNames.forEach((worksheetName) => {\n    const internalWorksheet = xlsForm?.worksheets[worksheetName];\n    if (!internalWorksheet) {\n      return;\n    }\n\n    const excelWorksheet = workbook.addWorksheet(worksheetName);\n    const rows = [...(internalWorksheet?.rows || [])];\n\n    const internalColumnNames = internalWorksheet.columnNames.flatMap((cn) => {\n      if (localizableColumnNames.includes(cn)) {\n        return [...xlsForm.languages.keys()].map((l) => `${cn}::${l}`);\n      } else {\n        return cn;\n      }\n    });\n\n    const columnNames = normalizeColumnNames(internalColumnNames).map((cn) =>\n      cn.replace(/::/g, \".\")\n    );\n\n    excelWorksheet.columns = columnNames.map((columnName) => ({\n      header: columnName.replace(/\\./g, \"::\").replace(/__DOLLAR_SIGN__/g, \"$\"),\n      key: columnName.replace(/\\./g, \"::\").replace(/__DOLLAR_SIGN__/g, \"$\"),\n      width: 10,\n    })) as ExcelJS.Column[];\n\n    excelWorksheet.addRows(\n      rows.map((row) =>\n        columnNames.map((cn) => {\n          if (localizableColumnNames.includes(cn)) {\n            cn = `${cn}.English (en)`;\n          }\n          return get(row, cn);\n        })\n      )\n    );\n  });\n\n  const title =\n    xlsForm?.worksheets.settings?.rows[0].form_title ||\n    \"Untitled XLSForm survey\";\n  workbook.model.title = title;\n\n  return { workbook, title };\n}\n\n/** Creates an XLSForm Excel file and starts its download in the browser.  */\nexport async function saveXLSForm(xlsForm: XLSForm) {\n  const { workbook, title } = generateExcelWorkbook(xlsForm);\n  const buffer = await workbook.xlsx.writeBuffer();\n  const blob = new Blob([buffer], {\n    type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  });\n  var a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  const url = window.URL.createObjectURL(blob);\n  a.href = url;\n  a.download = `${title}.xlsx`;\n  a.click();\n\n  setTimeout(() => {\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n  }, 0);\n}\n","import { Button, Menu, MenuDivider, MenuItem } from \"@blueprintjs/core\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport React from \"react\";\nimport { Patch } from \"../lib/undo/useUndoHistory\";\nimport createEmptyXLSForm from \"../xlsform-simple-schema/functions/editing/createEmptyXLSForm\";\nimport { saveXLSForm } from \"../xlsform-simple-schema/functions/editing/saveXLSForm\";\nimport { XLSForm } from \"../xlsform-simple-schema/index\";\nimport { useWorkbookFromFile } from \"./ExcelFileInput\";\nimport useSettingsDialog from \"./hooks/useSettingsDialog\";\n\n/** Button showing a 'File' menu */\nexport function FileMenuButton({\n  xlsForm,\n  setXLSFormWithPatches,\n  setLanguage,\n}: {\n  xlsForm: XLSForm | undefined;\n  setXLSFormWithPatches: (\n    description: string,\n    value: XLSForm | undefined,\n    patches: Patch[],\n    inversePatches: Patch[]\n  ) => void;\n  setLanguage: (language: string) => void;\n}) {\n  const inputFieldRef = React.createRef<HTMLInputElement>();\n  const { showSettingsDialog, settingsDialog } = useSettingsDialog();\n  const { onFileChange } = useWorkbookFromFile({\n    setXLSFormWithPatches,\n    setLanguage,\n  });\n\n  const loadEmptyXLSForm = React.useCallback(async () => {\n    setXLSFormWithPatches(\n      \"Create new, empty XLSForm document\",\n      await createEmptyXLSForm(),\n      [],\n      []\n    );\n  }, [setXLSFormWithPatches]);\n\n  const closeFile = React.useCallback(() => {\n    setXLSFormWithPatches(\"Close current workbook\", undefined, [], []);\n  }, [setXLSFormWithPatches]);\n\n  const saveFileAs = React.useCallback(async () => {\n    if (xlsForm) {\n      await saveXLSForm(xlsForm);\n    }\n  }, [xlsForm]);\n\n  const menu = (\n    <Menu>\n      <MenuItem text=\"New File\" icon=\"plus\" onClick={loadEmptyXLSForm} />\n      <MenuDivider />\n      <label htmlFor=\"open-file-input\">\n        <MenuItem icon=\"import\" text=\"Import File…\" />\n      </label>\n      <MenuItem text=\"Export\" icon=\"export\">\n        <MenuItem\n          text=\"Microsoft Excel (.xlsx)\"\n          onClick={saveFileAs}\n          disabled={!xlsForm}\n        />\n      </MenuItem>\n      <MenuDivider />\n      <MenuItem text=\"Settings\" icon=\"cog\" onClick={showSettingsDialog} />\n      <MenuDivider />\n      <MenuItem text=\"Close File\" onClick={closeFile} />\n    </Menu>\n  );\n\n  const button = (\n    <Button className=\"bp3-minimal\" rightIcon=\"caret-down\" text=\"File\" />\n  );\n\n  return (\n    <>\n      <input\n        id=\"open-file-input\"\n        type=\"file\"\n        onChange={onFileChange}\n        ref={inputFieldRef}\n        style={{ display: \"none\" }}\n      />\n      {settingsDialog}\n      <Popover2 content={menu} placement={\"bottom-end\"} minimal={true}>\n        {button}\n      </Popover2>\n    </>\n  );\n}\n","import { Button, Classes, Dialog } from \"@blueprintjs/core\";\nimport { useCallback, useState } from \"react\";\n\n/**\n * Custom React hook returning a function to show a dialog for managing settings.\n */\nexport default function useSettingsDialog() {\n  const [isDialogOpen, setDialogOpen] = useState(false);\n\n  const closeDialog = useCallback(() => {\n    setDialogOpen(false);\n  }, []);\n\n  const showSettingsDialog = useCallback(() => {\n    setDialogOpen(true);\n  }, []);\n\n  const settingsDialog = (\n    <Dialog\n      title={<>Settings</>}\n      icon=\"cog\"\n      isOpen={isDialogOpen}\n      canOutsideClickClose={true}\n      canEscapeKeyClose={true}\n      isCloseButtonShown={true}\n      onClose={closeDialog}\n      lazy={true}\n    >\n      <div className={Classes.DIALOG_BODY}>TODO: Settings go here</div>\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button onClick={closeDialog} type=\"button\">\n            Close\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  return {\n    showSettingsDialog,\n    settingsDialog,\n  };\n}\n","import { Button, MenuItem } from \"@blueprintjs/core\";\nimport { ItemRenderer, Select } from \"@blueprintjs/select\";\nimport * as React from \"react\";\n\nconst LanguageSelect = Select.ofType<string>();\n\ntype Props = {\n  language: string;\n  languages: string[];\n  onChange: (language: string) => void;\n};\n\nconst renderItem: ItemRenderer<string> = (language: string, options) => {\n  const [, name, code] = language.match(/^(.*) \\((.*)\\)$/) || [];\n  return (\n    <MenuItem\n      text={name}\n      label={code}\n      // active={true}\n      key={code}\n      onClick={options.handleClick}\n      shouldDismissPopover={false}\n    />\n  );\n};\n\nexport default function LanguageSelector(props: Props) {\n  const onItemSelect = React.useCallback(\n    (language: string) => {\n      props.onChange(language);\n    },\n    [props]\n  );\n\n  const [, name] = props.language.match(/^(.*) \\((.*)\\)$/) || [];\n\n  return (\n    <LanguageSelect\n      items={props.languages}\n      itemRenderer={renderItem}\n      activeItem={props.language}\n      noResults={<MenuItem disabled={true} text=\"No languages loaded yet.\" />}\n      onItemSelect={onItemSelect}\n      filterable={false}\n    >\n      {/* children become the popover target; render value here */}\n      <Button\n        text={name}\n        rightIcon=\"double-caret-vertical\"\n        icon=\"globe\"\n        minimal={true}\n      />\n    </LanguageSelect>\n  );\n}\n","import {\n  EvaluatableColumnName,\n  NodesToValues,\n  ODKNode,\n} from \"../../../types/ODKNode\";\nimport { NameExpression } from \"../pratt-parser-base\";\nimport ODKFormulaEvaluationResult from \"./ODKFormulaEvaluationResult\";\n\n/**\n * Contains global information that can be used in a single formula evaluation. The evaluation\n * process can use this to:\n *\n * - tracking stack overflows and potential create stack traces\n * - store state of the end user's survey answers\n * - store evaluated values of formulas\n * - find answer values of other nodes referenced in formulas\n */\n\ntype ODKFormulaEvaluationContext = {\n  /** The survey in which the evaluation takes place */\n  survey: ODKNode;\n  nodesToAnswers: NodesToValues;\n  evaluationResults: NodesToValues<\n    Map<EvaluatableColumnName, ODKFormulaEvaluationResult>\n  >;\n  /** The current stack depth. Used to to prevent stack overflows in recursive calculations. */\n  stackDepth: number;\n  knownLiteralsWithoutDollarSign: Record<string, unknown>;\n  evaluateNonDollarNameFn?: (options: {\n    expression: NameExpression;\n    context: ODKFormulaEvaluationContext;\n    scope: ODKNode;\n  }) => unknown;\n};\n\nexport default ODKFormulaEvaluationContext;\n\n/** These are literals that appeared (and apparently were supported) in our Kobo forms, and are documented in XLSForms. */\nexport const knownLiteralsWithoutDollarSign: Record<string, unknown> = {\n  yes: true,\n  no: false,\n  TRUE: true,\n  FALSE: false,\n  true: true,\n  false: false,\n};\n\n/** Returns a blank context to start evaluating from scratch. */\nexport const getEmptyEvaluationContext: (\n  survey?: ODKNode\n) => ODKFormulaEvaluationContext = (survey?: ODKNode) => ({\n  survey: survey || {\n    type: \"\",\n    typeParameters: [],\n    row: {\n      type: \"\",\n      name: \"data\",\n      label: { \"English (en)\": \"[empty survey]\" },\n    },\n    children: [],\n    indentationLevel: 0,\n    rowIndex: -1,\n  },\n  nodesToAnswers: new Map(),\n  evaluationResults: new Map(),\n  stackDepth: 0,\n  knownLiteralsWithoutDollarSign,\n});\n","import * as React from \"react\";\nimport SimpleSchema from \"simpl-schema\";\nimport useChangeHooks from \"../components/hooks/useChangeHooks\";\nimport { XLSForm } from \"../xlsform-simple-schema\";\nimport ODKFormulaEvaluationContext, {\n  getEmptyEvaluationContext,\n} from \"../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationContext\";\n\n/** Provides the current XLSForm survey, its evaluation results, and its metadata. */\nexport type ODKSurveyContextType = {\n  /** `true` if the survey should show editing/debugging UI features, `false` otherwise. */\n  debug: boolean;\n\n  /** The current survey’s XLSForm model. */\n  xlsForm?: XLSForm;\n\n  /** A schema that allows to validate answer results for the current survey. */\n  schema?: SimpleSchema;\n\n  /** The ODK/XLSForm evaluation context for the survey. Contains evaluated answers and formulas. */\n  evaluationContext?: ODKFormulaEvaluationContext;\n\n  /** The currently selected language used for survey display. */\n  language?: string;\n\n  /** Name of the currently selected language used for survey display (e.g. 'Deutsch'). */\n  languageName?: string;\n\n  /** Language tag of the currently selected language used for survey display (e.g. 'de-AT'). */\n  languageCode?: string;\n} & ReturnType<typeof useChangeHooks>;\n\n/**\n * Provides the current XLSForm survey, its evaluation results, its metadata, and functions to edit\n * the survey.\n */\nexport const ODKSurveyContext = React.createContext<ODKSurveyContextType>({\n  schema: new SimpleSchema({}),\n  debug: true,\n  xlsForm: undefined,\n\n  evaluationContext: getEmptyEvaluationContext(),\n\n  language: \"English (en)\",\n  languageCode: \"en\",\n  languageName: \"English\",\n\n  setEvaluationContext: () => {},\n  setXLSFormWithPatches: () => {},\n  onChangeAnswer: () => {},\n  onChangeCell: () => {},\n  onMoveNode: () => {},\n  onSpliceRows: () => {},\n  onRemoveRowAndChildren: () => {},\n  onRenameNode: () => {},\n  onNestNode: () => {},\n  onUngroupNode: () => {},\n  onAddNode: () => {},\n});\n","import { Classes, EditableText } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\n\n/** Displays the survey’s configured title (and file name), editable. */\n\nexport default function EditableSurveyTitle() {\n  const context = React.useContext(ODKSurveyContext);\n  const surveyName = context.xlsForm?.worksheets.settings?.rows[0].form_title;\n  const [editedSurveyName, setEditedSurveyName] = React.useState<string>();\n\n  const onChangeSurveyName = React.useCallback(\n    (text: string) => {\n      if (editedSurveyName === undefined || editedSurveyName === \"\") {\n        return;\n      }\n      context.onChangeCell(\"settings\", 0, \"form_title\", editedSurveyName);\n      setEditedSurveyName(undefined);\n    },\n    [editedSurveyName, context]\n  );\n\n  const surveyTitleString =\n    context.xlsForm?.worksheets.settings?.rows[0].form_title;\n  const hasTitle =\n    surveyTitleString !== undefined && surveyTitleString.trim() !== \"\";\n  // const surveyTitle = (\n  //   <Text\n  // className={[!hasTitle && Classes.TEXT_MUTED, Classes.TEXT_LARGE]\n  //   .filter(Boolean)\n  //   .join(\" \")}\n  //   >\n  //     {surveyTitleString || \"Untitled survey\"}\n  //   </Text>\n  // );\n\n  return (\n    <EditableText\n      onChange={setEditedSurveyName}\n      onConfirm={onChangeSurveyName}\n      confirmOnEnterKey={true}\n      className={[!hasTitle && Classes.TEXT_MUTED, Classes.TEXT_LARGE]\n        .filter(Boolean)\n        .join(\" \")}\n      placeholder={`Enter a survey title…`}\n      value={editedSurveyName === undefined ? surveyName : editedSurveyName}\n      minWidth={100}\n    />\n  );\n}\n","import { Alignment, Navbar } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { Patch } from \"../lib/undo/useUndoHistory\";\nimport { XLSForm } from \"../xlsform-simple-schema/index\";\nimport { EditMenuButton } from \"./EditMenuButton\";\nimport { FileMenuButton } from \"./FileMenuButton\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport EditableSurveyTitle from \"./survey/fields/EditableSurveyTitle\";\n\nexport function AppNavBar({\n  setXLSFormWithPatches,\n  setLanguage,\n  xlsForm,\n  viewMenuButton,\n  language,\n}: {\n  setXLSFormWithPatches: (\n    description: string,\n    nextState: XLSForm | undefined,\n    patches: Patch[],\n    inversePatches: Patch[]\n  ) => void;\n  setLanguage: (language: string) => void;\n  xlsForm: XLSForm | undefined;\n  viewMenuButton: JSX.Element;\n  language: string;\n}) {\n  return (\n    <Navbar>\n      <Navbar.Group>\n        <FileMenuButton {...{ setXLSFormWithPatches, setLanguage, xlsForm }} />\n        <EditMenuButton />\n      </Navbar.Group>\n      <Navbar.Group>\n        <Navbar.Divider />\n        <EditableSurveyTitle />\n      </Navbar.Group>\n      <Navbar.Group align={Alignment.RIGHT}>\n        {viewMenuButton}\n        <Navbar.Divider />\n        {xlsForm && language && (\n          <LanguageSelector\n            languages={Array.from(xlsForm.languages.values())}\n            language={language}\n            onChange={setLanguage}\n          />\n        )}\n      </Navbar.Group>\n    </Navbar>\n  );\n}\n","import { HTMLDivProps } from \"@blueprintjs/core\";\nimport * as React from \"react\";\n\nfunction getDarkModeSetting(): boolean {\n  return (\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n  );\n}\n\n/**\n * A React Hook returning a boolean value that is `true` when the user switched on dark mode,\n * `false` otherwise.\n */\nexport function useDarkMode() {\n  const [isDarkMode, setIsDarkMode] = React.useState(getDarkModeSetting());\n\n  const handleChange = React.useCallback((e) => {\n    setIsDarkMode(getDarkModeSetting());\n  }, []);\n\n  React.useEffect(() => {\n    if (window.matchMedia === undefined) {\n      return;\n    }\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", handleChange);\n  }, [handleChange]);\n\n  return isDarkMode;\n}\n\n/**\n * A React component wrapper with a Blueprint CSS class that controls if the container's children\n * are rendered in dark-mode style or not.\n *\n * Wrap your Blueprint.js components in this React component to adapt them to the user's dark mode\n * setting automatically.\n */\nexport default function BlueprintDarkModeContainer(props: HTMLDivProps) {\n  const isDarkMode = useDarkMode();\n  return (\n    <div\n      {...props}\n      className={isDarkMode ? `${props.className} bp3-dark` : props.className}\n    >\n      {props.children}\n    </div>\n  );\n}\n","export type ContextAndValue<T> = [React.Context<T>, T];\n\n/**\n * This function allows you to render a React component with multiple nested React contexts around\n * it, but makes the code doing that more readable.\n *\n * @param contextAndValuePairs an array of [context ref, context value] entries.\n * @param children the react children to render.\n * @example\n * ```jsx\n * const contexts: ContextAndValue<any>[] = [\n *    [SomeContext, someValue],\n *    [UndoContext, undoContext]\n * ];\n * return <div>\n *   {composeContexts(contexts, navbarAndBody)}\n * </div>;\n * ```\n */\n\nconst composeContexts = (\n  contextAndValuePairs: ContextAndValue<any>[],\n  children: React.ReactNode\n) =>\n  contextAndValuePairs.reduce(\n    (acc: React.ReactNode, [Context, value]: ContextAndValue<any>) => {\n      return <Context.Provider value={value}>{acc}</Context.Provider>;\n    },\n    children\n  );\n\nexport default composeContexts;\n","import { Position, Toaster } from \"@blueprintjs/core\";\n\n/** Singleton toaster instance. Create separate instances for different options. */\nexport const AppToaster = Toaster.create({\n  className: \"recipe-toaster\",\n  position: Position.BOTTOM_RIGHT,\n});\n","import { Patch } from \"immer\";\n\nexport function mergeCommands<T>(\n  ops: [nextState: T, patches: Patch[], inversePatches: Patch[]][]\n) {\n  return ops.reduce((prev, current, index) => [\n    current[0],\n    prev[1].concat(current[1]),\n    prev[2].concat(current[2]),\n  ]);\n}\n","import ODKFormulaEvaluationContext from \"../functions/odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport AppearanceAttributeFlags from \"./AppearanceAttributeFlags\";\nimport {\n  IBeginGroupMarkerRow,\n  IBeginRepeatMarkerRow,\n} from \"./BeginOrEndMarkerRow\";\nimport { QuestionRow } from \"./RowTypes\";\n\n/**\n * Represents a 'raw' survey variable, input, field group or repeat group, before its content is\n * semantically inspected. An `ODKNode` can have an array of `ODKNode` objects in its `children`\n * property if it is a field group or repeat group.\n */\nexport type ODKNodeWithoutRuntimeInfo =\n  | {\n      row?: QuestionRow & (IBeginRepeatMarkerRow | IBeginGroupMarkerRow);\n      children: ODKNodeWithoutRuntimeInfo[];\n      indentationLevel: number;\n      rowIndex: number;\n    }\n  | {\n      row: QuestionRow;\n      children: ODKNodeWithoutRuntimeInfo[];\n      indentationLevel: number;\n      rowIndex: number;\n    };\n\n/**\n * Represents a 'raw' survey variable, input, field group or repeat group, after its content is\n * semantically inspected and added. An `ODKNode` can have an array of `ODKNode` objects in its\n * `children` property if it is a field group or repeat group.\n */\nexport type ODKNode =\n  | {\n      row: QuestionRow & (IBeginRepeatMarkerRow | IBeginGroupMarkerRow);\n      type: string;\n      typeParameters: string[];\n      appearance?: AppearanceAttributeFlags;\n      children: ODKNode[];\n      indentationLevel: number;\n      rowIndex: number;\n    }\n  | {\n      row: QuestionRow;\n      type: string;\n      typeParameters: string[];\n      appearance?: AppearanceAttributeFlags;\n      children: ODKNode[];\n      indentationLevel: number;\n      rowIndex: number;\n    };\n\n/** Maps `ODKNode` references to values, for example, answers, or formula evaluation results. */\nexport type NodesToValues<T = unknown> = Readonly<Map<Readonly<ODKNode>, T>>;\n\n/** A name of a column in the `survey` worksheet that can contain formulas. */\nexport type EvaluatableColumnName =\n  | \"relevant\"\n  | \"calculation\"\n  | \"required\"\n  | \"readonly\"\n  | \"constraint\";\n\n/** Names of columns in the `survey` worksheet that can contain formulas. */\nexport const evaluatableColumnNames: EvaluatableColumnName[] = [\n  \"calculation\",\n  \"required\",\n  \"relevant\",\n  \"readonly\",\n  \"constraint\",\n];\n\n/**\n * Evaluates a node's `relevant` formula condition. If there is no formula in the node’s `relevant`\n * cell, the function returns `true` and the node is visible in the survey.\n */\nexport function isNodeRelevant(\n  node: ODKNode,\n  context?: ODKFormulaEvaluationContext\n) {\n  if (!context) {\n    return false;\n  }\n  const isRelevantEvaluationResult = context.evaluationResults\n    .get(node)\n    ?.get(\"relevant\")?.result;\n  return isRelevantEvaluationResult === undefined || isRelevantEvaluationResult;\n}\n\n/**\n * Evaluates a node's `readonly` formula condition amd returns the result. If there is no formula in\n * the node’s `readonly` cell, the function returns `false` and the node is not read-only in the\n * survey.\n */\nexport function isNodeReadonly(\n  node: ODKNode,\n  context?: ODKFormulaEvaluationContext\n) {\n  if (!context) {\n    return false;\n  }\n  const isReadonlyEvaluationResult = context.evaluationResults\n    .get(node)\n    ?.get(\"readonly\")?.result;\n  return isReadonlyEvaluationResult === undefined || isReadonlyEvaluationResult;\n}\n\n/**\n * @returns `true` if the given node’s type is `begin_group` or `begin_repeat`, `false` otherwise.\n */\nexport function isGroupNode(node: ODKNode) {\n  return node.type === \"begin_group\" || node.type === \"begin_repeat\";\n}\n\nexport function isGroupRow(row: QuestionRow) {\n  return (\n    row.type === \"begin_group\" ||\n    row.type === \"begin_repeat\" ||\n    row.type === \"end_group\" ||\n    row.type === \"end_repeat\"\n  );\n}\n","import { isEqual } from \"lodash\";\nimport { isGroupNode, ODKNode } from \"../types/ODKNode\";\nimport { XLSForm } from \"../types/XLSForm\";\n\n/**\n * Returns the last row index of a given node in the given XLSForm. For normal fields, this is the\n * field's row index, for groups/repeats, this is the `end_group` or `end_repeat` row index.\n */\nexport default function getLastRowIndexOfNode(xlsForm: XLSForm, node: ODKNode) {\n  const isGroup = isGroupNode(node);\n\n  if (!isGroup) {\n    return node.rowIndex;\n  }\n  // The end_group or end_repeat marker is associated to the node, too.\n  const indexOfGroupOrRepeatEnd = xlsForm.flatNodes.findIndex(\n    (n, i) => i > node.rowIndex && isEqual(n, node)\n  );\n  return indexOfGroupOrRepeatEnd;\n}\n","import { LocalizedString } from \"../../types/RowTypes\";\n\n/**\n * Creates an object with language codes as property names, using the given text as translation for\n * all languages. Helpful when you need a `LocalizedString` but have no sensible content yet.\n */\nexport function createLocalizedString(\n  text: string,\n  languages: Readonly<Set<string>>\n): LocalizedString {\n  const result: LocalizedString = {};\n  languages.forEach((lang) => {\n    result[lang] = text;\n  });\n  return result;\n}\n","import { enablePatches, produceWithPatches } from \"immer\";\nimport { uniq } from \"lodash\";\nimport { Patch } from \"../../../lib/undo/useUndoHistory\";\nimport {\n  ChoicesWorksheet,\n  loadXLSFormFromRows,\n  SettingsWorksheet,\n  SurveyWorksheet,\n  WorksheetName,\n  XLSForm,\n} from \"../../types/XLSForm\";\nimport { normalizeColumnNames } from \"../loadSurveyFromXLSX\";\n\nenablePatches();\n\n/**\n * Defines a splice operation on the XLSForm’s rows. A 'Splice' operation is generic and allows to\n * add, remove, and edit rows at once.\n */\nexport type RowSpliceOperation = {\n  rowIndex: number;\n  numberOfRowsToRemove: number;\n  rowsToAdd: any[];\n};\n\n/**\n * Adds and removes one or more set(s) of rows in a single operation.\n *\n * If possible, use this method for all operations that change the XLSForm model. Splicing allows\n * adding, editing, and removing rows in one go. The function recreates the whole underlying XLSForm\n * model and evaluation context so you don't have to think about how the survey model looks\n * internally.\n */\nexport default function spliceRowsInWorksheet(\n  xlsForm: XLSForm,\n  worksheetName: WorksheetName,\n  operations: RowSpliceOperation[]\n): [value: XLSForm, patches: Patch[], inversePatches: Patch[]] {\n  const surveyWorksheet = xlsForm.worksheets.survey;\n  if (!surveyWorksheet) {\n    throw new Error(\"No survey worksheet defined.\");\n  }\n\n  const worksheet = xlsForm.worksheets[worksheetName];\n  if (!worksheet) {\n    return [xlsForm, [], []];\n  }\n\n  // Create a copy of the rows array to give the array a new identity, causing a re-render op\n  const newRows = [...worksheet?.rows];\n  operations.forEach(({ rowIndex, numberOfRowsToRemove, rowsToAdd }) =>\n    newRows.splice(rowIndex, numberOfRowsToRemove, ...rowsToAdd)\n  );\n  const columnNames = uniq(newRows.flatMap((row) => Object.keys(row)));\n  const newWorksheet = {\n    ...worksheet,\n    rows: newRows,\n    columnNames,\n    columnNamesNormalized: normalizeColumnNames(columnNames),\n  };\n\n  // Reload the whole XLSForm from the new row array\n  return produceWithPatches(xlsForm, (draft) =>\n    loadXLSFormFromRows(\n      worksheetName === \"survey\"\n        ? (newWorksheet as SurveyWorksheet)\n        : surveyWorksheet,\n      xlsForm?.worksheets.settings?.rows[0]?.default_language || \"English (en)\",\n      worksheetName === \"settings\"\n        ? (newWorksheet as SettingsWorksheet)\n        : xlsForm?.worksheets.settings,\n      worksheetName === \"choices\"\n        ? (newWorksheet as ChoicesWorksheet)\n        : xlsForm?.worksheets.choices\n    )\n  );\n}\n","import { ChoiceRow } from \"../../types/RowTypes\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport { createLocalizedString } from \"./createLocalizedString\";\nimport spliceRowsInWorksheet from \"./spliceRowsInWorksheet\";\n\n/** Adds example choice list to the XLSForm source. */\nexport default function addExampleChoices(xlsForm: XLSForm) {\n  const languages = xlsForm.languages || new Set([\"English (en)\"]);\n  const choiceRows: ChoiceRow[] = [\n    {\n      \"list name\": \"yes_no_maybe\",\n      name: \"yes\",\n      label: createLocalizedString(\"yes\", languages),\n    },\n    {\n      \"list name\": \"yes_no_maybe\",\n      name: \"no\",\n      label: createLocalizedString(\"no\", languages),\n    },\n    {\n      \"list name\": \"yes_no_maybe\",\n      name: \"maybe\",\n      label: createLocalizedString(\"maybe\", languages),\n    },\n  ];\n  return spliceRowsInWorksheet(xlsForm, \"choices\", [\n    {\n      rowIndex: 0,\n      numberOfRowsToRemove: 0,\n      rowsToAdd: choiceRows,\n    },\n  ]);\n}\n","import { fieldTypeNames } from \"../../field-types/fieldTypeNames\";\nimport { QuestionRow } from \"../../types/RowTypes\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport { createLocalizedString } from \"./createLocalizedString\";\n\nlet untitledFieldIndex = 0;\n\nexport function resetUntitledFieldCounter() {\n  untitledFieldIndex = 0;\n}\n\n/** Creates an untitled new field in the survey, with an auto-incremented number suffix. */\nexport function createEmptyFieldRow(\n  xlsForm: XLSForm,\n  fieldType: keyof typeof fieldTypeNames = \"text\"\n): QuestionRow {\n  return {\n    type: fieldType,\n    name: `untitled_field_${untitledFieldIndex++}`,\n    label: createLocalizedString(\"\", xlsForm.languages),\n  };\n}\n","import {\n  BeginMarkerRow,\n  IEndGroupMarkerRow,\n} from \"../../types/BeginOrEndMarkerRow\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport { createLocalizedString } from \"./createLocalizedString\";\n\nlet untitledGroupIndex = 0;\n\nexport function resetUntitledGroupCounter() {\n  untitledGroupIndex = 0;\n}\n\n/** Creates an untitled new field group in the survey, with an auto-incremented number suffix. */\nexport function createEmptyGroupRows(xlsForm: XLSForm) {\n  untitledGroupIndex += 1;\n  const beginMarkerRow: BeginMarkerRow = {\n    type: \"begin_group\",\n    name: `untitled_group_${untitledGroupIndex}`,\n    label: createLocalizedString(\"\", xlsForm.languages),\n  };\n  const endMarkerRow: IEndGroupMarkerRow = { type: \"end_group\" };\n  return { beginMarkerRow, endMarkerRow };\n}\n","import { mergeCommands } from \"../../../lib/undo/mergeCommands\";\nimport { fieldTypeNames } from \"../../field-types/fieldTypeNames\";\nimport { isGroupNode, ODKNode } from \"../../types/ODKNode\";\nimport { QuestionRow } from \"../../types/RowTypes\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport getLastRowIndexOfNode from \"../getLastRowIndexOfNode\";\nimport addExampleChoices from \"./addExampleChoices\";\nimport { createEmptyFieldRow } from \"./createUntitledFieldRow\";\nimport { createEmptyGroupRows } from \"./createUntitledGroupRows\";\nimport spliceRowsInWorksheet from \"./spliceRowsInWorksheet\";\n\n/**\n * Add a new unnamed field/group/repeat at given position (next to, or inside of another field)\n */\nexport function addNodeToXLSForm({\n  xlsForm,\n  group,\n  position,\n  relativeToNode,\n  fieldType,\n  name,\n  groupName,\n}: {\n  xlsForm: XLSForm;\n  group: boolean;\n  relativeToNode?: ODKNode;\n  position: \"after\" | \"before\" | \"inside\";\n  fieldType: keyof typeof fieldTypeNames;\n  name?: string;\n  groupName?: string;\n}) {\n  const row: QuestionRow = createEmptyFieldRow(xlsForm, fieldType);\n  if (name) {\n    row.name = name;\n  }\n  const { beginMarkerRow, endMarkerRow } = createEmptyGroupRows(xlsForm);\n  if (groupName) {\n    beginMarkerRow.name = groupName;\n  }\n  const rowsToInsert = group ? [beginMarkerRow, row, endMarkerRow] : [row];\n\n  let rowIndex = 0;\n  const currentNodeIsGroup = relativeToNode && isGroupNode(relativeToNode);\n  if (relativeToNode && currentNodeIsGroup) {\n    rowIndex = {\n      after: getLastRowIndexOfNode(xlsForm, relativeToNode) + 1,\n      before: relativeToNode.rowIndex,\n      inside: relativeToNode.rowIndex + 1,\n    }[position];\n  } else {\n    rowIndex = {\n      after: relativeToNode ? relativeToNode.rowIndex + 1 : 0,\n      before: relativeToNode ? relativeToNode.rowIndex : 0,\n      inside: 0,\n    }[position];\n  }\n\n  const commands = [];\n  if (\n    fieldType?.match(/^select/) &&\n    !xlsForm?.worksheets.choices?.rows.length\n  ) {\n    commands.push(addExampleChoices(xlsForm));\n  }\n\n  commands.push(\n    spliceRowsInWorksheet(commands[0]?.[0] || xlsForm, \"survey\", [\n      {\n        rowIndex: rowIndex,\n        numberOfRowsToRemove: 0,\n        rowsToAdd: rowsToInsert,\n      },\n    ])\n  );\n\n  return mergeCommands(commands);\n}\n","import { cloneDeep, get, set, uniqBy } from \"lodash\";\nimport { evaluatableColumnNames, ODKNode } from \"../../types/ODKNode\";\nimport { QuestionRow } from \"../../types/RowTypes\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport { localizableColumnNames } from \"../loadSurveyFromXLSX\";\n\nexport type NodeDependency = {\n  node: ODKNode;\n  index: number;\n  row: QuestionRow;\n  columnName: string;\n};\n\n/**\n * Refactoring feature: Finds or replaces all references to a given field in other fields, so the\n * survey developer doesn't have to rename every reference manually.\n */\nexport default function findOrReplaceFieldReferences(\n  xlsForm: XLSForm,\n  node: ODKNode,\n  replaceName?: string\n) {\n  const oldName = node.row.name;\n  const nodeDependenciesWithDuplicates: NodeDependency[] = [];\n  const variableRegexp = new RegExp(`\\\\\\${${oldName}}`);\n\n  const localizableKeys = localizableColumnNames.flatMap((lcn) =>\n    [...xlsForm.languages.values()].map((lang) => `${lcn}.${lang}`)\n  );\n\n  xlsForm.flatNodes.forEach((n) => {\n    let row: QuestionRow | undefined;\n    (evaluatableColumnNames as string[])\n      .concat(...localizableKeys)\n      .forEach((columnName) => {\n        const value = get(n.row, columnName);\n        if (typeof value !== \"string\" && value !== undefined) {\n          throw new Error(\n            `Replacing variable names works only with cells that contain strings. Please ensure the ${columnName} cell of the ${node.row.name} row has a string value.`\n          );\n        }\n        if (value?.match(variableRegexp)) {\n          if (replaceName) {\n            const regExp = new RegExp(`\\${${oldName}}`, \"g\");\n            const newCellValue = value?.replace(regExp, `\\${${replaceName}}`);\n            row = row || cloneDeep(n.row);\n            set(row, columnName, newCellValue);\n          }\n          nodeDependenciesWithDuplicates.push({\n            node: n,\n            index: n.rowIndex,\n            row: row || n.row,\n            columnName,\n          });\n        }\n      });\n  });\n\n  const nodeDependencies = uniqBy(\n    nodeDependenciesWithDuplicates,\n    (d) => `${d.index}/${d.columnName}`\n  );\n\n  return nodeDependencies;\n}\n","import { TokenType } from \"../pratt-parser-base\";\nimport LiteralExpression from \"../pratt-parser-base/expressions/LiteralExpression\";\n\n/**\n * @returns an evaluatable formula literal usable in an AST and for syntax highlighting.\n */\nexport default function createLiteralExpressionFromValue(value: unknown) {\n  return new LiteralExpression(\n    [{ type: TokenType.LITERAL, text: JSON.stringify(value), index: -1 }],\n    value instanceof Array ? \"array\" : typeof value,\n    value\n  );\n}\n","export function addIndefiniteArticle(noun: string) {\n  const article = [\"a\", \"e\", \"i\", \"o\", \"u\"].includes(noun.slice(0, 1))\n    ? \"an\"\n    : \"a\";\n\n  return `${article} ${noun}`;\n}\n","import { ordinalize } from \"inflection\";\nimport {\n  FunctionNotImplementedError,\n  SemanticError,\n} from \"../../../types/Errors\";\nimport { ODKNodeWithoutRuntimeInfo } from \"../../../types/ODKNode\";\nimport ODKNodeValue from \"../../../types/ODKNodeValue\";\nimport ODKFormulaExecutionContext from \"./ODKFormulaEvaluationContext\";\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\ntype Value = ODKNodeValue;\n\nexport type FormulaFunction = (\n  this: {\n    context: ODKFormulaExecutionContext;\n    scope: ODKNodeWithoutRuntimeInfo;\n  },\n  ...args: Value[]\n) => Value;\n\nfunction assertString(value: unknown, argNo: number): asserts value is string {\n  if (typeof value !== \"string\") {\n    const number = ordinalize(String(argNo + 1));\n    throw new SemanticError(\n      `Expected a string value as ${number} parameter, but got \\`${value}\\`.`\n    );\n  }\n}\n\nfunction assertNumber(value: unknown, argNo: number): asserts value is number {\n  if (typeof value !== \"number\") {\n    const number = ordinalize(String(argNo + 1));\n    throw new SemanticError(\n      `Expected a number value as ${number} parameter, but got \\`${value}\\`.`\n    );\n  }\n}\n\nfunction assertBoolean(\n  value: unknown,\n  argNo: number\n): asserts value is boolean {\n  if (typeof value !== \"boolean\") {\n    const number = ordinalize(String(argNo + 1));\n    throw new SemanticError(\n      `Expected a boolean value as ${number} parameter, but got \\`${value}\\`.`\n    );\n  }\n}\n\n// TODO: Could use reflection or code generation to find argument types automatically and avoid bugs\n\n/**\n * Map of function names to their JS implementations.\n *\n * Documentation / specification: https://docs.getodk.org/form-operators-functions/\n */\nexport const functions: Record<string, FormulaFunction> = {\n  if<T, U>(expression: unknown, then: T, elseExpression: U): T | U {\n    assertBoolean(expression, 0);\n    return expression ? then : elseExpression;\n  },\n\n  true(): boolean {\n    return true;\n  },\n\n  false(): boolean {\n    return false;\n  },\n\n  not(arg: unknown): boolean {\n    assertBoolean(arg, 0);\n    return !arg;\n  },\n\n  coalesce<T extends Value, U extends Value>(arg: T, arg2: U): T | U | string {\n    if (typeof arg !== \"undefined\" && arg !== \"\") {\n      return arg;\n    }\n    if (typeof arg2 !== \"undefined\" && arg2 !== \"\") {\n      return arg2;\n    }\n    return \"\";\n  },\n\n  boolean(arg: Value): boolean {\n    if (typeof arg === \"number\") {\n      return arg !== 0;\n    }\n    if (typeof arg === \"string\") {\n      return arg !== \"\";\n    }\n    if (arg instanceof Array) {\n      return arg.length > 0;\n    }\n    if (typeof arg === \"boolean\") {\n      return arg;\n    }\n    return false;\n  },\n\n  /**\n    Returns an integer equal to the 1-indexed position of the current node within the node defined by xpath.\n    Most often this is used in the form position(..) to identify the current iteration index within a repeat group.\n  */\n  position(_xpath: Value): number {\n    throw new FunctionNotImplementedError(\"position\");\n  },\n  /**\n   * Returns the value expression if the question's value is empty. Otherwise, returns the current value of the question.\n   * This can be used to ensure that a random number is only generated once, or to store the first value entered for a question in a way that is retrievable even if the response is changed later.\n   *   Warning This function is often misunderstood. Read when expressions are evaluated to learn more.\n   */\n  once(_expression: Value): Value {\n    throw new FunctionNotImplementedError(\"once\");\n  },\n\n  /**\n   * Returns True if string is a member of space_delimited_array, otherwise returns False. Commonly used to determined if a specific choice was selected in a select question. (This is possible because a reference to a select question returns a space-delimited array of choice names.)\n   */\n  selected(space_delimited_array: Value, string: Value): boolean {\n    if (space_delimited_array === undefined) {\n      return false;\n    }\n    assertString(space_delimited_array, 0);\n    assertString(string, 1);\n    if (space_delimited_array.length === 0 || string.length === 0) {\n      return false;\n    }\n    return space_delimited_array.split(\" \").includes(string);\n  },\n\n  // Returns the string at the n th position of the space_delimited_array. (The array is zero-indexed.) Returns an empty string if the index does not exist.\n  // This can be used to get the name of a selected choice from a multi-select question. (This is possible because a reference to a select question returns a space-delimited array of choice names.)\n  // Note\n  // If used to get a choice name from a select question, this function returns the name, not the label, of the selected choice. To get the label in the current language, use jr:choice-name().\n  \"selected-at\"(_space_delimited_array: Value, _n): string {\n    throw new FunctionNotImplementedError(\"selected-at\");\n  },\n\n  // Returns the number of choices selected in multi_select_question.\n  \"count-selected\"(_multi_select_question: Value): number {\n    throw new FunctionNotImplementedError(\"count-selected\");\n  },\n\n  // Returns the label value, in the active language, associated with the choice_name in the list of choices for the select_question.\n  // Note\n  // You have to wrap the select_question reference in quotes.\n  // '${question_name}'\n  \"jr:choice-name\"(_choice_name: Value, _select_question: Value): string {\n    throw new FunctionNotImplementedError(\"jr:choice-name\");\n  },\n\n  // Repeat groups\n  // Helpful terms\n  // nodeset\n  // A collection of XML nodes. In XLSForms, this is typically a collection of response values.\n  // Outside a repeat group, referring to a question by name will return a nodeset containing all the responses to that question.\n  // Nodesets can also be created by joining two or more nodes with pipes: /data/age | /data/name.\n\n  // Returns the response value of question name from the repeat-group group, in iteration i.\n  // Nested repeat groups can be accessed using the sub and sub_sub parameters.\n  // See also\n  // Referencing repeated questions from inside the repeat\n  \"indexed-repeat\"(\n    _name: Value,\n    _group: Value,\n    _i: Value,\n    _sub_grp: Value,\n    _sub_i: Value,\n    _sub_sub_grp: Value,\n    _sub_sub_i: Value\n  ): string {\n    throw new FunctionNotImplementedError(\"):\");\n  },\n\n  // Returns the number of items in nodeset. This can be used to count the number of repetitions in a repeat group.\n  count(_nodeset: Value): number {\n    throw new FunctionNotImplementedError(\"count\");\n  },\n\n  // Returns the number of non-empty members of nodeset.\n  \"count-non-empty\"(_nodeset: Value): number {\n    throw new FunctionNotImplementedError(\"count-non-empty\");\n  },\n\n  // Returns the sum of the members of nodeset.\n  // Can be used to tally responses to a repeated select question.\n  sum(_nodeset: Value): number {\n    throw new FunctionNotImplementedError(\"sum\");\n  },\n\n  // Returns the largest member of nodeset.\n  // Warning\n  // The min() and max() functions only work sets of numbers. Empty values (that is, variables referencing unanswered questions) are actually empty strings, and will not be automatically converted to zero (0).\n  // Strings\n  max(_nodeset: Value): Value {\n    throw new FunctionNotImplementedError(\"max\");\n  },\n\n  // Returns the smallest member of nodeset.\n  // Warning\n  // The min() and max() functions only work sets of numbers. Empty values (that is, variables referencing unanswered questions) are actually empty strings, and will not be automatically converted to zero (0).\n  // Strings\n  min(_nodeset: Value): Value {\n    throw new FunctionNotImplementedError(\"min\");\n  },\n\n  // Searching and matching strings\n\n  // Returns True if string is an exact and complete match for expression.\n  // See also\n  // Using regular expressions\n  regex(string: Value, expression: Value): boolean {\n    assertString(string, 0);\n    assertString(expression, 0);\n    return !!string.match(new RegExp(expression));\n  },\n\n  // Returns True if the string contains the substring.\n  contains(string: Value, substring: Value): boolean {\n    assertString(string, 0);\n    assertString(substring, 1);\n    return !!string.match(substring);\n  },\n\n  // Returns True if string begins with substring.\n  \"starts-with\"(string: Value, substring: Value): boolean {\n    assertString(string, 0);\n    assertString(substring, 1);\n    return string.startsWith(substring);\n  },\n\n  // Returns True if the string ends with substring.\n  \"ends-with\"(string: Value, substring: Value): boolean {\n    assertString(string, 0);\n    assertString(substring, 1);\n    return string.endsWith(substring);\n  },\n\n  // Returns the substring of string beginning at the index start and extending to (but not including) index end (or to the termination of string, if end is not provided). Members of string are zero-indexed.\n  substr(string: Value, start: Value, end: Value): string {\n    assertString(string, 0);\n    assertNumber(start, 1);\n    assertNumber(end, 2);\n    return string.substring(start, end);\n  },\n\n  // Returns the substring of string before the first occurrence of the target substring. If the target is not found, or string begins with the target substring, then this will return an empty string.\n  \"substring-before\"(_string: Value, _target): string {\n    throw new FunctionNotImplementedError(\"substring-before\");\n  },\n\n  // Returns the substring of string after the first occurrence of the target substring. If the target is not found this will return an empty string.\n  \"substring-after\"(_string: Value, _target): string {\n    throw new FunctionNotImplementedError(\"substring-after\");\n  },\n\n  // Returns a copy of string, where every occurrence of a character in fromchars is replaced by the corresponding character in tochars. If fromchars is longer than tochars then every occurrence of a character in fromchars that does not have a corresponding character in tochars will be removed.\n  translate(_string: Value, _fromchars: Value, _tochars: Value): string {\n    throw new FunctionNotImplementedError(\"translate\");\n  },\n\n  // Returns the number of characters in string. If no value is passed in, returns the number of characters in the value of the question that this function call is tied to which can be useful in a constraint expression.\n  \"string-length\"(string: Value): number {\n    assertString(string, 0);\n    return string.length;\n  },\n\n  // Returns a string with normalized whitespace by stripping leading and trailing whitespace of string and replacing sequences of whitespace characters with a single space. If no value is passed in, normalizes whitespace of the value of the question that this function call is tied to.\n  \"normalize-space\"(string?: Value): string {\n    assertString(string, 0);\n    return string.trim();\n  },\n\n  // Combining strings\n\n  // Concatenates one or more arguments into a single string. If any arg is a nodeset, the values within the set are concatenated into a string.\n  concat(...args: Value[]): string {\n    return args.join(\"\");\n  },\n\n  // Joins the members of nodeset, using the string separator.\n  join(_separator: Value, _nodeset: ODKNodeValue): string {\n    throw new FunctionNotImplementedError(\"join\");\n  },\n\n  // Converting to and from strings\n\n  // Returns True if string is \"true\" or \"1\". Otherwise, False.\n  \"boolean-from-string\"(string: Value): boolean {\n    return string === \"true\" || string === \"1\";\n  },\n\n  // Converts arg to a string.\n  string(arg: Value): string {\n    return String(arg);\n  },\n\n  // Math\n  // Warning\n  // Math functions (except number()) only work with number values.\n  // You can use number() to convert a string of digits to a number, but it is usually better to get a number value directly.\n  // Empty values (that is, variables referencing unanswered questions) are actually empty strings, and will not be automatically converted to zero (0).\n\n  // Number handling\n\n  // Rounds a decimal number to some number of decimal places.\n  round(number: Value, places: Value): number {\n    assertNumber(number, 0);\n    assertNumber(places, 1);\n    return Math.round(number * 10 ** places) / 10 ** places;\n  },\n\n  // Truncates the fractional portion of a decimal number to return an integer.\n  int(number: Value) {\n    assertNumber(number, 0);\n    return Math.floor(number);\n  },\n\n  // Converts arg to number value.\n  // If arg is a string of digits, returns the number value.\n  // If arg is True, returns 1. If arg is False, returns 0.\n  // If arg cannot be converted, returns NaN (not a number).\n  number(arg: Value): number {\n    if (typeof arg === \"boolean\") {\n      return arg ? 1 : 0;\n    }\n    if (typeof arg === \"string\") {\n      if (arg.trim().match(/-?\\d+(\\.\\d+)?/)) {\n        return Number(arg);\n      }\n    }\n    if (typeof arg === \"number\") {\n      return arg;\n    }\n    return NaN;\n  },\n\n  // Computes and returns the hash value of the data string using the indicated hash algorithm string, and encoding this hash value using the optional encoding string.\n  // Options for the algorithm are MD5, SHA-1, SHA-256, SHA-384, SHA-512.\n  // If the third parameter is not specified, the encoding is base64. Valid options for the encoding are base64 and hex.\n  // This function can be useful if, for example, someone wants to build a unique identifier from sensitive data like a national ID number without compromising that data.\n  // See also\n  // count(), max(), min(), number()\n  digest(_data: Value, _algorithm: Value, _encodingMethod: Value): string {\n    throw new FunctionNotImplementedError(\"digest\");\n  },\n\n  // Calculation\n  pow(number: Value, exponent: Value): number {\n    assertNumber(number, 0);\n    assertNumber(exponent, 1);\n    return Math.pow(number, exponent);\n  },\n  log(number: Value): number {\n    assertNumber(number, 0);\n    return Math.log(number);\n  },\n  log10(number: Value): number {\n    assertNumber(number, 0);\n    return Math.log10(number);\n  },\n  abs(number: Value): number {\n    assertNumber(number, 0);\n    return Math.abs(number);\n  },\n  sin(number: Value): number {\n    assertNumber(number, 0);\n    return Math.sin(number);\n  },\n  cos(number: Value): number {\n    assertNumber(number, 0);\n    return Math.cos(number);\n  },\n  tan(number: Value): number {\n    assertNumber(number, 0);\n    return Math.tan(number);\n  },\n  asin(number: Value): number {\n    assertNumber(number, 0);\n    return Math.asin(number);\n  },\n  acos(number: Value): number {\n    assertNumber(number, 0);\n    return Math.acos(number);\n  },\n  atan(number: Value): number {\n    assertNumber(number, 0);\n    return Math.atan(number);\n  },\n  atan2(y: Value, x: Value): number {\n    assertNumber(y, 0);\n    assertNumber(x, 1);\n    return Math.atan2(y, x);\n  },\n  sqrt(number: Value): number {\n    assertNumber(number, 0);\n    return Math.sqrt(number);\n  },\n  exp(number: Value): number {\n    assertNumber(number, 0);\n    return Math.exp(number);\n  },\n  exp10: (number: Value): number => {\n    assertNumber(number, 0);\n    return 10 ** number;\n  },\n  pi: (): number => {\n    return Math.PI;\n  },\n\n  // Date and time\n\n  // Returns the current date without a time component.\n  today(): Date {\n    const now = new Date();\n    now.setHours(0, 0, 0, 0);\n    return now;\n  },\n\n  // Returns the current datetime in ISO 8601 format, including the timezone.\n  // Warning\n  // This function is often misused. Read when expressions are evaluated to learn more.\n  now(): string {\n    return new Date().toISOString();\n  },\n\n  // Converting dates and time\n\n  // Converts dateTime value to the number of days since January 1, 1970 (the Unix Epoch).\n  // This is the inverse of date().\n  \"decimal-date-time\"(_dateTime: Value): number {\n    throw new FunctionNotImplementedError(\"decimal-date-time\");\n  },\n\n  // Converts an integer representing a number of days from January 1, 1970 (the Unix Epoch) to a standard date value.\n\n  // This is the inverse of decimal-date-time().\n  date(_days: Value): Date {\n    throw new FunctionNotImplementedError(\"date\");\n  },\n\n  // Converts time to a number representing a fractional day. For example, noon is 0.5 and 6:00 PM is 0.75.\n  \"decimal-time\"(_time: Value): number {\n    throw new FunctionNotImplementedError(\"decimal-time\");\n  },\n\n  // Formatting dates and times for display\n\n  // Returns date as a string formatted as defined by format.\n  \"format-date\"(_date: Value, _format: Value): string {\n    throw new FunctionNotImplementedError(\"format-date\");\n  },\n\n  // Returns dateTime as a string formatted as defined by format.\n  \"format-date-time\"(_dateTime: Value, _format: Value): string {\n    throw new FunctionNotImplementedError(\"format-date-time\");\n  },\n\n  // Geography\n\n  // Returns the area, in square meters, of either a nodeset of geopoints or a geoshape value.\n  // It takes into account the circumference of the Earth around the Equator but does not take altitude into account.\n  area(_nodesetOrGeoshape: Value | Value): number {\n    throw new FunctionNotImplementedError(\"area\");\n  },\n\n  // Returns the distance, in meters, of either:\n\n  // a nodeset of geopoints\n  // the perimeter of a geoshape\n  // the length of a geotrace value\n  // It takes into account the circumference of the Earth around the Equator and does not take altitude into account.\n  distance(_nodesetOrGeoshapeOrGeotrace: Value): number {\n    throw new FunctionNotImplementedError(\"distance\");\n  },\n\n  // Utility\n\n  // Returns a random number between 0.0 (inclusive) and 1.0 (exclusive).\n  // Warning\n  // This function is often misused. Read when expressions are evaluated to learn more.\n  random: Math.random,\n\n  // Returns a shuffled nodeset.\n  // A shuffle with a numeric seed is deterministic and reproducible.\n  // The primary use for this function is to randomize the order of choices for a select question. The documentation on select widgets describes how this is done in XLSForm.\n  // randomize() can only be used in a context where a nodeset is accepted. Note that questions of type calculate cannot reference a nodeset.\n  randomize(_nodeset: Value, _seed: Value): ODKNodeValue {\n    throw new FunctionNotImplementedError(\"randomize\");\n  },\n\n  // Without argument, returns a random RFC 4122 version 4 compliant UUID.\n  // With an argument it returns a random GUID of specified length.\n  uuid(_length: Value): string {\n    throw new FunctionNotImplementedError(\"uuid\");\n  },\n\n  // Returns True if the number of response s that are exactly the string \"yes\" is between min and max, inclusive.\n  // Set min or max to -1 to make the argument not applicable.\n  checklist(_min: Value, _max: Value, ..._responses: Value[]): boolean {\n    throw new FunctionNotImplementedError(\"checklist\");\n  },\n\n  // Returns True if the sum of the weight s of each response that is exactly the string \"yes\" is between min and max, inclusive.\n  // Set min or max to -1 to make the argument not\n  \"weighted-checklist\"(\n    _min: Value,\n    _max: Value,\n    _response: Value,\n    ..._weightResponsePairs: Value[]\n  ): boolean {\n    throw new FunctionNotImplementedError(\"weighted-checklist\");\n  },\n};\n\nexport default functions;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ordinalize } from \"inflection\";\nimport { addIndefiniteArticle } from \"../../../../lib/addIndefiniteArticle\";\nimport { EvaluationError } from \"../../../types/Errors\";\nimport { ODKNode } from \"../../../types/ODKNode\";\nimport ODKNodeValue from \"../../../types/ODKNodeValue\";\nimport {\n  CallExpression,\n  Expression,\n  GroupExpression,\n  NameExpression,\n  OperatorExpression,\n} from \"../pratt-parser-base\";\nimport LiteralExpression from \"../pratt-parser-base/expressions/LiteralExpression\";\nimport SelectorExpression from \"../pratt-parser-base/expressions/SelectorExpression\";\nimport createLiteralExpressionFromValue from \"./createLiteralExpressionFromValue\";\nimport evaluateNodeColumn from \"./evaluateNodeColumn\";\nimport ODKFormulaEvaluationContext from \"./ODKFormulaEvaluationContext\";\nimport functions from \"./ODKFormulaFunctions\";\nimport {\n  findNodeByNameInCurrentAndAncestorScopes,\n  findNodeByNameInsideScope,\n  findNodeByPathRelativeToScope,\n} from \"./XPath\";\n\n/**\n * Evaluates a parsed expression / AST, returning the end result as JavaScript value.\n *\n * @param expression The parsed expression / AST to evaluate.\n * @param context the global context in which the formula should be evaluated. This context contains\n *   information about the whole survey - The evaluation needs this to known the values of\n *   references to other survey nodes (e.g. when you use a variable like `${other-field}` in the\n *   formula)\n * @param scope\n *   For resolving XPaths and relative node references correctly, the evaluation process needs to\n *   know the node in which the evaluation should begin. Use this parameter to supply the node that\n *   contained the formula string.\n */\nexport default function evaluateExpression(\n  expression: Expression,\n  context: ODKFormulaEvaluationContext,\n  scope: Readonly<ODKNode>\n): unknown {\n  let result: unknown;\n\n  if (context.stackDepth > 10000) {\n    throw new EvaluationError(\n      `Stack overflow while evaluating \\`${JSON.stringify(expression)}\\``,\n      \"stackOverflow\",\n      expression,\n      context,\n      scope\n    );\n  }\n\n  const deeperContext = {\n    ...context,\n    stackDepth: context.stackDepth + 1,\n  };\n\n  // This looks as if it could be caseless, for example by having Expression subclasses that have\n  // their own evaluator. This would complicate the design though, and make the expression\n  // implementation dependent on an expressions use - a two-way dependency to rather avoid.\n  if (expression instanceof GroupExpression) {\n    result = evaluateExpression(expression.expression, deeperContext, scope);\n  } else if (expression instanceof LiteralExpression) {\n    result = evaluateLiteralExpression(expression);\n  } else if (expression instanceof NameExpression) {\n    result = evaluateNameExpression(expression, deeperContext, scope);\n  } else if (expression instanceof SelectorExpression) {\n    result = evaluateSelectorExpression(expression, deeperContext, scope);\n  } else if (expression instanceof OperatorExpression) {\n    result = evaluateOperatorExpression(expression, deeperContext, scope);\n  } else if (expression instanceof CallExpression) {\n    result = evaluateCallExpression(expression, deeperContext, scope);\n  } else {\n    throw new EvaluationError(\n      `Don’t know how to evaluate \\`${expression}\\`.`,\n      \"unsupportedExpressionType\",\n      expression,\n      deeperContext,\n      scope\n    );\n  }\n\n  context.stackDepth -= 1;\n\n  return result;\n}\n\n/**\n * A literal contains a defined value already. Return this value.\n */\nfunction evaluateLiteralExpression(\n  expression: LiteralExpression<ODKNodeValue>\n): ODKNodeValue {\n  return expression.value;\n}\n\nfunction stringFromStringOrExpression(n: string | Expression) {\n  if (typeof n === \"string\") {\n    return n;\n  }\n  let string = \"\";\n  n.print((str: string) => (string += str));\n  return string;\n}\n\n/**\n * Evaluate a CallExpression's (dynamic) function name, then each of its arguments. Then, call the\n * referred function (in this source code) by name. This evaluation does not use eval(), so it\n * shouldn't be possible to break out of this sandbox (fingers crossed)\n */\n\nfunction evaluateCallExpression(\n  expression: CallExpression,\n  context: ODKFormulaEvaluationContext,\n  scope: ODKNode\n): unknown {\n  const nameExpressionOrString =\n    expression.fn instanceof NameExpression\n      ? expression.fn\n      : String(evaluateExpression(expression.fn, context, scope));\n  let fn: unknown = undefined;\n\n  const error = (\n    message: string,\n    name: string,\n    underlyingEvaluationError?: EvaluationError\n  ) => {\n    throw new EvaluationError(\n      message,\n      name,\n      expression,\n      context,\n      scope,\n      underlyingEvaluationError\n    );\n  };\n\n  // Allow to determine a function name dynamically by using an expression to allow things like\n  // (get-function-name())()\n  if (nameExpressionOrString instanceof NameExpression) {\n    fn = evaluateNameExpression(\n      nameExpressionOrString,\n      context,\n      scope,\n      true,\n      functions\n    );\n  } else if (typeof nameExpressionOrString === \"string\") {\n    fn = functions[nameExpressionOrString];\n  } else {\n    error(\n      `Can’t call a function without knowing its name — the name must be either defined as string, return a name string or a function reference.`,\n      \"functionNotFound\"\n    );\n  }\n\n  if (!fn) {\n    const name = stringFromStringOrExpression(nameExpressionOrString);\n    error(`Could not find a function named \\`${name}()\\`.`, \"functionNotFound\");\n  }\n\n  const evaluatedArgs = expression.args.map((arg, i) => {\n    try {\n      return evaluateExpression(arg, context, scope);\n    } catch (e) {\n      const number = ordinalize(String(i + 1));\n      const name = stringFromStringOrExpression(nameExpressionOrString);\n      error(\n        `Error in ${number} argument in \\`${name}() function call\\`: ${e.message}`,\n        \"functionEvalError\",\n        e\n      );\n    }\n    return undefined; // can't be reached but necessary for typecheck\n  });\n\n  if (typeof fn !== \"function\") {\n    error(\n      `Found name \\`${fn}\\`, but it is not a function.`,\n      \"functionNotFound\"\n    );\n    return; // will never be reached because error() throws\n  }\n\n  try {\n    const result = fn.apply(context, evaluatedArgs);\n    return result;\n  } catch (e) {\n    let string = \"\";\n    expression.print((s) => (string += s));\n    error(\n      `Error while calling \\`${string}\\`: ${e.message}`,\n      \"functionEvalError\",\n      e\n    );\n  }\n}\n\nfunction assertBoolean(\n  value: unknown,\n  valueBeforeCasting: unknown,\n  expression: OperatorExpression | undefined,\n  context: ODKFormulaEvaluationContext,\n  scope: ODKNode\n): asserts value is boolean {\n  if (typeof value !== \"boolean\") {\n    throw new EvaluationError(\n      `Found operand \\`${JSON.stringify(\n        valueBeforeCasting\n      )}\\` that is no boolean value, but ${addIndefiniteArticle(\n        typeof valueBeforeCasting\n      )}. Boolean operators like \\`${\n        expression?.operatorToken.text\n      }\\` only work with values that are \\`true\\` or \\`false\\`.`,\n      \"invalidOperandType\",\n      expression,\n      context,\n      scope\n    );\n  }\n}\n\n/**\n * Evaluates operands of the expression, and calculates the result from combining them with the\n * operator referenced by the expression's operator string.\n */\nfunction evaluateOperatorExpression(\n  expression: OperatorExpression,\n  context: ODKFormulaEvaluationContext,\n  scope: ODKNode\n): ODKNodeValue {\n  const leftBeforeCasting = evaluateExpression(expression.left, context, scope);\n  const rightBeforeCasting = evaluateExpression(\n    expression.right,\n    context,\n    scope\n  );\n\n  const operator = expression.operatorToken.text;\n\n  if (operator === \"=\") {\n    // eslint-disable-next-line eqeqeq\n    return leftBeforeCasting == rightBeforeCasting;\n  }\n  if (operator === \"!=\") {\n    // eslint-disable-next-line eqeqeq\n    return leftBeforeCasting != rightBeforeCasting;\n  }\n\n  let left;\n  let right;\n  if (operator === \"and\" || operator === \"or\") {\n    if (typeof leftBeforeCasting === \"boolean\") {\n      left = leftBeforeCasting;\n    }\n    if (typeof leftBeforeCasting === \"number\") {\n      left = Boolean(leftBeforeCasting);\n    }\n\n    if (typeof rightBeforeCasting === \"boolean\") {\n      right = rightBeforeCasting;\n    }\n    if (typeof rightBeforeCasting === \"number\") {\n      right = Boolean(rightBeforeCasting);\n    }\n\n    assertBoolean(left, leftBeforeCasting, expression, context, scope);\n    assertBoolean(right, rightBeforeCasting, expression, context, scope);\n\n    switch (operator) {\n      case \"or\":\n        return left || right;\n      case \"and\":\n        return left && right;\n    }\n  }\n\n  if (typeof leftBeforeCasting === \"number\") {\n    left = leftBeforeCasting;\n  }\n  if (typeof leftBeforeCasting === \"string\") {\n    if (leftBeforeCasting.match(/^-?\\d+\\.?\\d*/)) {\n      left = parseFloat(leftBeforeCasting);\n    }\n  }\n\n  if (typeof rightBeforeCasting === \"number\") {\n    right = rightBeforeCasting;\n  }\n  if (typeof rightBeforeCasting === \"string\") {\n    if (rightBeforeCasting.match(/^-?\\d+\\.?\\d*/)) {\n      right = parseFloat(rightBeforeCasting);\n    }\n  }\n\n  if (typeof left !== \"number\") {\n    throw new EvaluationError(\n      `Left operand is \\`${JSON.stringify(\n        leftBeforeCasting\n      )}\\`, which is no number. Arithmetic and relative comparison operators only work with operands that are numeric.`,\n      \"invalidOperandType\",\n      expression,\n      context,\n      scope\n    );\n  }\n  if (typeof right !== \"number\") {\n    throw new EvaluationError(\n      `Right operand is \\`${JSON.stringify(\n        rightBeforeCasting\n      )}\\`, which no number. Arithmetic and relative comparison operators only work with operands that are numeric.`,\n      \"invalidOperandType\",\n      expression,\n      context,\n      scope\n    );\n  }\n\n  switch (operator) {\n    case \"+\":\n      return left + right;\n    case \"-\":\n      return left - right;\n    case \"*\":\n      return left * right;\n    case \"div\":\n      return left / right;\n    case \"mod\":\n      return left % right;\n    case \">\":\n      return left > right;\n    case \">=\":\n      return left >= right;\n    case \"<\":\n      return left < right;\n    case \"<=\":\n      return left <= right;\n    default:\n      throw new EvaluationError(\n        `The \\`${operator}\\` operator is not supported`,\n        \"unsupportedOperator\",\n        expression,\n        context,\n        scope\n      );\n  }\n}\n\n/**\n * Returns the value of a scoped NameExpression in a given evaluation context.\n *\n * Handled cases:\n *\n * - The name references a single node: Returns the node's answer or `calculation` value in this case.\n * - The name references a node set: Returns the answers/calculations of all nodes, as list.\n * - The name has no dollar sign: Look up the name as key in the supplied `literalBag` map, and return its value.\n */\nfunction evaluateNameExpression(\n  expression: NameExpression,\n  context: ODKFormulaEvaluationContext,\n  scope: ODKNode,\n  /** By default, throw if the name is not defined somewhere. */\n  allowUndefinedNames = false,\n  /**\n   * Hand over a mapping of literal names to values. These literals can be used legally inside\n   * the formula, and will be evaluated to their values in the map.\n   */\n  literalBag: Record<string, unknown> = context.knownLiteralsWithoutDollarSign\n): unknown {\n  if (expression.text.startsWith(\"$\")) {\n    const nodeOrNodes =\n      findNodeByNameInCurrentAndAncestorScopes(\n        expression.name,\n        context.survey,\n        scope\n      ) || findNodeByNameInsideScope(expression.name, context.survey);\n\n    if (!nodeOrNodes) {\n      throw new EvaluationError(\n        `Could not find a node with name \\`${expression.name}\\`.`,\n        \"nodeNotFound\",\n        expression,\n        context,\n        scope\n      );\n    }\n\n    if (nodeOrNodes instanceof Array) {\n      // Return a list of the values of all nodes referenced by this name.\n      // TODO: Check specs and examples if this is standard + correct ODK behavior.\n      return nodeOrNodes.map((node) =>\n        evaluateNodeColumn(\n          node,\n          context,\n          \"calculation\",\n          context.nodesToAnswers.get(node)\n        )\n      );\n    }\n\n    const evaluationResult = evaluateNodeColumn(\n      nodeOrNodes,\n      context,\n      \"calculation\",\n      context.nodesToAnswers.get(nodeOrNodes)\n    );\n\n    if (evaluationResult.error) {\n      throw new EvaluationError(\n        `Error in expression ${expression.text}.`,\n        \"unsupportedNameExpression\",\n        expression,\n        context,\n        scope,\n        evaluationResult.error instanceof EvaluationError\n          ? evaluationResult.error\n          : undefined\n      );\n    }\n\n    return evaluationResult.result;\n  } else if (expression.text === expression.name) {\n    const value = context.evaluateNonDollarNameFn\n      ? context.evaluateNonDollarNameFn({ expression, context, scope })\n      : literalBag[expression.name];\n\n    if (value !== undefined || allowUndefinedNames) {\n      return value;\n    }\n\n    let tip: string = \"\";\n    const node = findNodeByNameInCurrentAndAncestorScopes(\n      expression.name,\n      context.survey,\n      scope\n    );\n    if (node) {\n      tip = `— did you mean to type \\`\\${${expression.name}}\\` instead of \\`${expression.name}\\`?`;\n    }\n\n    throw new EvaluationError(\n      `\\`${expression.text}\\` is not a known name or reference. ${tip}`,\n      \"unknownNameWithoutDollarSign\",\n      expression,\n      context,\n      scope\n    );\n  }\n\n  throw new EvaluationError(\n    `Don’t know how to evaluate ${expression}.`,\n    \"unsupportedNameExpression\",\n    expression,\n    context,\n    scope\n  );\n}\n\n/**\n * Finds a single node or multiple nodes that match the given node selector, then returns their\n * value(s).\n */\nexport function evaluateSelectorExpression(\n  expression: SelectorExpression<string[]>,\n  context: ODKFormulaEvaluationContext,\n  scope: ODKNode\n): unknown {\n  const selector = expression.selector;\n  const node = findNodeByPathRelativeToScope(selector, context.survey, scope);\n\n  const evalCalculation = (n: ODKNode) =>\n    n === scope\n      ? {\n          state: \"success\",\n          result: context.nodesToAnswers.get(n),\n          expression: createLiteralExpressionFromValue(\n            context.nodesToAnswers.get(n)\n          ),\n          error: undefined,\n        }\n      : evaluateNodeColumn(\n          n,\n          context,\n          \"calculation\",\n          context.nodesToAnswers.get(n)\n        );\n\n  if (node instanceof Array) {\n    return node.map((childNode) => evalCalculation(childNode));\n  }\n  return node && evalCalculation(node);\n}\n","import {\n  ODKFormulaError,\n  SemanticError,\n  SyntaxError,\n} from \"../../../types/Errors\";\nimport { ODKNode } from \"../../../types/ODKNode\";\nimport ODKFormulaLexer from \"../odk-formula-parser/ODKFormulaLexer\";\nimport ODKFormulaParser from \"../odk-formula-parser/ODKFormulaParser\";\nimport { Expression } from \"../pratt-parser-base\";\nimport evaluateExpression from \"./evaluateExpression\";\nimport ODKFormulaEvaluationContext from \"./ODKFormulaEvaluationContext\";\nimport ODKFormulaEvaluationResult from \"./ODKFormulaEvaluationResult\";\n\nexport function assertExpressionAfterEvaluation(\n  expression: unknown\n): asserts expression is Expression {\n  if (!expression) {\n    throw new SemanticError(\n      \"Formula was not evaluated to an expression, but no error was encountered. This means an error handler is missing for this case.\"\n    );\n  }\n}\n\n/**\n * Evaluates a formula string.\n *\n * @returns The resulting value, the AST, and detailed error information if the evaluation fails.\n *\n * @param formula the formula string to evaluate, e.g. '1 + 1'\n * @param context the global context in which the formula should be evaluated. This context contains\n *   information about the whole survey - The evaluation needs this to known the values of\n *   references to other survey nodes (e.g. when you use a variable like `${other-field}` in the\n *   formula)\n * @param scope\n *   For resolving XPaths and relative node references correctly, the evaluation process needs to\n *   know the node in which the evaluation should begin. Use this parameter to supply the node that\n *   contained the formula string.\n */\nexport default function evaluateODKFormula(\n  formula: string,\n  context: ODKFormulaEvaluationContext,\n  scope: ODKNode = context.survey\n): ODKFormulaEvaluationResult {\n  let error;\n  let result;\n  let expression;\n  const lexer = new ODKFormulaLexer(formula);\n  const parser = new ODKFormulaParser({ tokens: lexer });\n  try {\n    expression = parser.parseExpression();\n    if (!expression) {\n      throw new SyntaxError(\n        `Parsing given formula \\`${formula}\\` returned an empty expression.`\n      );\n    }\n    result = evaluateExpression(expression, context, scope);\n    assertExpressionAfterEvaluation(expression);\n    return {\n      parser,\n      state: \"success\",\n      expression,\n      result,\n      error: undefined,\n    };\n  } catch (e) {\n    if (e instanceof ODKFormulaError || e.isODKFormulaError) {\n      error = e;\n    } else {\n      console.log(e, \"is not an ODKFormulaError!\");\n      throw e;\n    }\n  }\n\n  return {\n    parser,\n    state: \"error\",\n    expression,\n    error,\n    result: null,\n  };\n}\n","import { EvaluatableColumnName, ODKNode } from \"../../../types/ODKNode\";\nimport createLiteralExpressionFromValue from \"./createLiteralExpressionFromValue\";\nimport evaluateODKFormula from \"./evaluateODKFormula\";\nimport ODKFormulaEvaluationContext from \"./ODKFormulaEvaluationContext\";\nimport ODKFormulaEvaluationResult from \"./ODKFormulaEvaluationResult\";\n\n/**\n * @returns the JavaScript value of a survey node, returning either a user answer or a calculated\n * formula result.\n *\n * @param node The node containing the survey answer / calculation to evaluate.\n * @param context the global context in which the node's result should be evaluated. This context\n *   contains information about the whole survey - The evaluation needs this to known the values of\n *   references to other survey nodes (e.g. when you use a variable like `${other-field}` in the\n *   formula)\n */\nexport default function evaluateNodeColumn(\n  node: ODKNode,\n  context: ODKFormulaEvaluationContext,\n  columnName: EvaluatableColumnName,\n  fallback: unknown,\n  overrideFormula?: string\n): ODKFormulaEvaluationResult {\n  const originalFormula = overrideFormula\n    ? overrideFormula\n    : node.row?.[columnName];\n  if (originalFormula !== undefined && typeof originalFormula !== \"string\") {\n    debugger;\n    throw new Error(\"Sorry, multilingual formulas are not supported yet.\");\n  }\n  const formula = originalFormula?.trim();\n  if (formula === \"\" || formula === undefined) {\n    const fallbackValue = fallback;\n    const isMultiSelectResult = node.type === \"select_multiple\";\n    const value =\n      isMultiSelectResult && fallbackValue instanceof Array\n        ? fallbackValue.join(\" \")\n        : fallbackValue;\n    return {\n      state: \"success\",\n      result: value,\n      expression: createLiteralExpressionFromValue(value),\n      error: undefined,\n    };\n  }\n  let evaluationResult: ODKFormulaEvaluationResult | undefined = undefined;\n  evaluationResult = evaluateODKFormula(formula, context, node);\n  return evaluationResult;\n}\n","import { fromPairs, isEmpty } from \"lodash\";\nimport {\n  EvaluatableColumnName,\n  evaluatableColumnNames,\n  isGroupNode,\n  ODKNode,\n} from \"../../../types/ODKNode\";\nimport { XLSForm } from \"../../../types/XLSForm\";\nimport evaluateNodeColumn from \"./evaluateNodeColumn\";\nimport ODKFormulaEvaluationContext from \"./ODKFormulaEvaluationContext\";\nimport ODKFormulaEvaluationResult from \"./ODKFormulaEvaluationResult\";\n\nexport function getJSONResult(\n  node: ODKNode,\n  context: ODKFormulaEvaluationContext\n): unknown {\n  const evaluationResults = context.evaluationResults.get(node);\n  if (isGroupNode(node)) {\n    if (evaluationResults?.get(\"relevant\")?.result === false) {\n      return undefined;\n    }\n    return fromPairs(\n      node.children\n        .map((childNode) => [\n          childNode.row.name,\n          getJSONResult(childNode, context),\n        ])\n        .filter(([, result]) => result !== undefined && !isEmpty(result))\n    );\n  }\n  return evaluationResults?.get(\"calculation\")?.result;\n}\n\n/**\n * @returns the calculated or answered value of a given branch (incl. children) or leaf in the node\n * tree. Calls a callback function for each found result.\n */\nexport function evaluateNodeAndChildren(\n  node: ODKNode,\n  context: ODKFormulaEvaluationContext,\n  onEval: (\n    node: ODKNode,\n    columnName: EvaluatableColumnName,\n    result: ODKFormulaEvaluationResult\n  ) => void\n): void {\n  const fallbacks: Record<EvaluatableColumnName, () => unknown> = {\n    relevant: () => true,\n    calculation: () =>\n      isGroupNode(node)\n        ? getJSONResult(node, context)\n        : context.nodesToAnswers.get(node),\n    required: () => false,\n    readonly: () => false,\n    constraint: () => true,\n  };\n\n  node.children?.forEach((child) =>\n    evaluateNodeAndChildren(child, context, onEval)\n  );\n\n  evaluatableColumnNames.forEach((columnName) => {\n    onEval(\n      node,\n      columnName,\n      evaluateNodeColumn(node, context, columnName, fallbacks[columnName]())\n    );\n  });\n}\n\n/**\n * @returns the calculated or answered value of all leaves in the node tree. Saves the calculated\n * results in the given evaluation context as a side effect.\n */\n\nexport default function getEvaluatedXLSFormResult(\n  xlsForm: XLSForm,\n  context: ODKFormulaEvaluationContext\n) {\n  evaluateNodeAndChildren(\n    xlsForm.rootSurveyGroup,\n    context,\n    (node, columnName, result) => {\n      // console.log(\"Eval\", { name: node.row.name, columnName, result });\n      let columnNamesToResults = context.evaluationResults.get(node);\n      if (!columnNamesToResults) {\n        columnNamesToResults = new Map();\n        context.evaluationResults.set(node, columnNamesToResults);\n      }\n      columnNamesToResults?.set(columnName, result);\n    }\n  );\n}\n","import { ODKNode } from \"./ODKNode\";\n\nexport function describeNode(node: ODKNode) {\n  return node?.row.name || `node in row ${node.rowIndex}`;\n}\n","import { Colors } from \"@blueprintjs/core\";\nimport styled from \"styled-components\";\n\n/** CSS container for highlighted formula code. */\n\nconst StyledCode = styled.code`\n  .expression.has-error {\n    text-decoration: underline wavy ${Colors.RED2};\n    text-decoration-skip: none;\n    text-decoration-skip-ink: none;\n    text-decoration-color: ${Colors.RED2} !important;\n\n    a {\n      text-decoration: underline wavy ${Colors.RED2};\n      text-decoration-skip: none;\n      text-decoration-skip-ink: none;\n      text-decoration-color: ${Colors.RED2} !important;\n    }\n  }\n\n  .expression-name {\n    color: ${Colors.VIOLET5};\n  }\n\n  &.expression-call > .expression-name:first-child,\n  .expression-call > .expression-name:first-child {\n    color: ${Colors.BLUE3};\n  }\n\n  .expression-name {\n    word-break: break-word;\n  }\n\n  .token-STRING_LITERAL {\n    color: ${Colors.ORANGE3};\n  }\n\n  .token-NUMBER_LITERAL {\n    color: ${Colors.ORANGE4};\n  }\n\n  .token-COMMA {\n    color: ${Colors.GRAY1};\n  }\n\n  .token-LEFT_PAREN,\n  .token-RIGHT_PAREN {\n    color: ${Colors.BLUE2} !important;\n    font-weight: bold;\n  }\n\n  .token-INVALID {\n    border: 2px ${Colors.RED5} solid;\n    padding: 2px;\n    margin: -2px;\n    color: ${Colors.RED5};\n  }\n\n  .token-COMMA::after {\n    content: \" \";\n  }\n\n  .expression-operator {\n    clear: left;\n  }\n\n  .token-COMPARISON {\n    &::after,\n    &::before {\n      content: \" \";\n    }\n    font-weight: bold;\n    color: ${Colors.VERMILION3};\n  }\n\n  .token-COLON,\n  .token-BOOLEAN_AND,\n  .token-BOOLEAN_OR,\n  .token-PLUS,\n  .token-GREATER_THAN,\n  .token-LESS_THAN,\n  .token-MODULO,\n  .token-QUESTION {\n    word-break: break-word;\n    display: block;\n    font-weight: bold;\n    color: ${Colors.VERMILION2};\n  }\n`;\n\nexport default StyledCode;\n","import { hsl, rgb } from \"d3-color\";\nimport { interpolateHsl, interpolateLab } from \"d3-interpolate\";\n\n/**\n * @returns a brighter version of the given color. Nicer looking than using HSL + changing the\n * luminance: The LAB color space is modeled similarly to how the human eye senses light, resulting\n * in more ‘natural’ color tones.\n */\nexport function coloredWhite(color: string, value: number = 0.5) {\n  const labColor = hsl(color);\n  return interpolateHsl(labColor, \"white\")(value).toString();\n}\n\n/** @returns a brighter version of the given color. */\nexport function brighter(color: string, value: number = 0.3) {\n  return hsl(color).brighter(value).toString();\n}\n\n/** @returns a darker version of the given color. */\nexport function darker(color: string, value: number = 0.3) {\n  return hsl(color).darker(value).toString();\n}\n\n/** @returns the same color, but with a different alpha (opacity) value. */\nexport function alpha(color: string, value: number = 0.4) {\n  const alphaColor = rgb(color);\n  alphaColor.opacity *= value;\n  return alphaColor.toString();\n}\n\n/**\n * @returns a color between the given two colors, mixed using the LAB color space. This color space\n * is modeled similarly to how the human eye senses light, resulting in more ‘natural’ color tones.\n */\nexport function mixLab(color1: string, color2: string, ratio: number = 0.5) {\n  return interpolateLab(color1, color2)(ratio).toString();\n}\n","import { createLocalizedString } from \"../functions/editing/createLocalizedString\";\nimport { ODKNode } from \"./ODKNode\";\n\nexport let i = 0;\n\nexport function getEmptyNode(\n  languages: Readonly<Set<string>>\n): Readonly<ODKNode> {\n  i += 1;\n  return Object.freeze({\n    row: {\n      type: \"text\",\n      name: `empty_node_${i}`,\n      label: createLocalizedString(`Empty node ${i}`, languages),\n    },\n    type: \"text\",\n    typeParameters: [],\n    children: [],\n    indentationLevel: 0,\n    rowIndex: -2,\n  });\n}\n","import * as React from \"react\";\nimport ODKFormulaEvaluationResult from \"../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationResult\";\nimport { getEmptyNode } from \"../xlsform-simple-schema/types/getEmptyNode\";\nimport {\n  EvaluatableColumnName,\n  ODKNode,\n} from \"../xlsform-simple-schema/types/ODKNode\";\n\n/** Provides the current XLSForm node (= survey field or group/repeat), and its evaluation results. */\nexport interface IODKNodeContext {\n  node: ODKNode;\n  nodeEvaluationResults?: Map<\n    EvaluatableColumnName,\n    ODKFormulaEvaluationResult\n  >;\n}\n\n/** Provides the current XLSForm node (= survey field or group/repeat), and its evaluation results. */\nexport const ODKNodeContext = React.createContext<IODKNodeContext>({\n  node: getEmptyNode(new Set([\"English (en)\"])),\n});\n","import { IconName } from \"@blueprintjs/core\";\n\nexport const fieldTypesToIcons: Record<string, IconName> = {\n  integer: \"numerical\",\n  decimal: \"numerical\",\n  range: \"horizontal-distribution\",\n  text: \"edit\",\n  select_one: \"selection\",\n  select_one_from_file: \"selection\",\n  select_multiple: \"multi-select\",\n  select_multiple_from_file: \"multi-select\",\n  rank: \"sort-numerical\",\n  note: \"lightbulb\",\n  geopoint: \"map-marker\",\n  geotrace: \"draw\",\n  geoshape: \"geofence\",\n  date: \"calendar\",\n  time: \"time\",\n  datetime: \"time\",\n  image: \"media\",\n  audio: \"headset\",\n  video: \"video\",\n  file: \"upload\",\n  barcode: \"barcode\",\n  calculate: \"function\",\n  acknowledge: \"switch\",\n  hidden: \"eye-off\",\n  \"xml-external\": \"layout-hierarchy\",\n  start: \"time\",\n  end: \"time\",\n  today: \"calendar\",\n  deviceid: \"desktop\",\n  simserial: \"sim-card\",\n  subscriberid: \"id-number\",\n  phonenumber: \"phone\",\n  username: \"person\",\n  email: \"envelope\",\n  audit: \"shield\",\n  begin_group: \"group-objects\",\n  begin_repeat: \"repeat\",\n};\n","/** These field types are internal and have automati values - fields of these types should not be shown to users. */\nexport const internalFieldTypes = [\n  undefined,\n  \"\",\n  \"start\",\n  \"end\",\n  \"today\",\n  \"username\",\n  \"simserial\",\n  \"subscriberid\",\n  \"deviceid\",\n  \"phonenumber\",\n  \"calculate\",\n];\n","import ODKFormulaEvaluationResult from \"./odk-formulas/evaluation/ODKFormulaEvaluationResult\";\n\n/**\n * @returns name of the first found column with a formula parsing/evaluation error.\n */\nexport function getFirstColumnNameWithError(\n  nodeEvaluationResults: Map<string, ODKFormulaEvaluationResult> | undefined\n) {\n  return (\n    nodeEvaluationResults &&\n    [...nodeEvaluationResults.keys()].find(\n      (k) => nodeEvaluationResults?.get(k)?.error\n    )\n  );\n}\n","import { ODKNode } from \"./ODKNode\";\nimport { assertValidQuestionRow } from \"./RowTypes\";\n\n/** Throws an error of the given untyped object is not a valid ODK Node. */\nexport function assertIsODKNode(node: any): asserts node is ODKNode {\n  const error = () => {\n    throw new Error(\"Given data is not a valid ODK node.\");\n  };\n  if (typeof node !== \"object\") {\n    error();\n  }\n\n  assertValidQuestionRow(node.row);\n  if (\n    typeof node.type !== \"string\" ||\n    !(node.typeParameters instanceof Array) ||\n    !node.typeParameters.every((p: unknown) => typeof p === \"string\") ||\n    typeof node.indentationLevel !== \"number\" ||\n    typeof node.rowIndex !== \"number\" ||\n    (node.resultIsInvalid !== undefined &&\n      typeof node.resultIsInvalid !== \"boolean\")\n  ) {\n    error();\n  }\n  node.children.forEach(assertIsODKNode);\n}\n","import * as React from \"react\";\nimport ODKFormulaEvaluationContext from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport { getNodeAbsolutePathString } from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport { assertIsODKNode } from \"../../xlsform-simple-schema/types/assertIsODKNode\";\nimport { ODKNode } from \"../../xlsform-simple-schema/types/ODKNode\";\n\nexport type DropNodeHandler = (options: {\n  sourceNode: ODKNode;\n  destinationNode: ODKNode;\n  sourcePath: string;\n  position: \"before\" | \"after\" | \"inside\";\n}) => void;\n\nexport const ODKNodeDragAndDropContext = React.createContext<{\n  onDropNode: DropNodeHandler;\n}>({ onDropNode: () => {} });\n\n/**\n * @returns a set of props that you can add to a React node to add field drag & drop features to\n * it. Makes the element draggable, and allows to drag ODK nodes over and onto the element.\n */\n\nexport function useNodeDragAndDrop({\n  node,\n  evaluationContext,\n  setIsDraggedOver,\n}: {\n  /** The ODK node model that will be transferred when dragging & dropping */\n  node: ODKNode;\n  /** The source evaluation context in which to find the source node */\n  evaluationContext?: ODKFormulaEvaluationContext;\n  /**\n   * A React state setter method to allow the UI to show that it is a potential drop target while\n   * dragging over it\n   */\n  setIsDraggedOver: React.Dispatch<React.SetStateAction<boolean>>;\n}) {\n  const { onDropNode } = React.useContext(ODKNodeDragAndDropContext);\n\n  const onDragStart = React.useCallback(\n    (event: React.DragEvent<HTMLDivElement>) => {\n      if (!evaluationContext) {\n        return;\n      }\n      event.dataTransfer.setData(\n        \"application/json\",\n        JSON.stringify({\n          sourceNode: node,\n          sourcePath: getNodeAbsolutePathString(node, evaluationContext.survey),\n        })\n      );\n    },\n    [evaluationContext, node]\n  );\n\n  const onDragOver = React.useCallback(\n    (event: React.DragEvent<HTMLDivElement>) => {\n      event.preventDefault();\n      if (!evaluationContext) {\n        return;\n      }\n      setIsDraggedOver(true);\n    },\n    [evaluationContext, setIsDraggedOver]\n  );\n\n  const onDrop = React.useCallback(\n    (event: React.DragEvent<HTMLDivElement>) => {\n      if (!evaluationContext) {\n        return;\n      }\n      // const path = getNodeAbsolutePathString(node, evaluationContext);\n      const data = JSON.parse(event.dataTransfer.getData(\"application/json\"));\n      const { sourcePath, sourceNode } = data;\n      assertIsODKNode(sourceNode);\n      // console.log(\"Dropped on path\", path);\n      setIsDraggedOver(false);\n      onDropNode({\n        sourceNode,\n        sourcePath,\n        destinationNode: node,\n        position: \"before\",\n      });\n    },\n    [evaluationContext, node, onDropNode, setIsDraggedOver]\n  );\n\n  const onDragLeave = React.useCallback(() => {\n    if (!evaluationContext) {\n      return;\n    }\n    // const path = getNodeAbsolutePathString(node, evaluationContext);\n    // console.log(\"Left dragging at path\", path);\n    setIsDraggedOver(false);\n  }, [evaluationContext, setIsDraggedOver]);\n\n  const dragProps = {\n    draggable: true,\n    onDragStart,\n    onDragOver,\n    onDragLeave,\n    onDrop,\n  };\n\n  return dragProps;\n}\n","import styled from \"styled-components\";\nimport Markdown from \"./Markdown\";\n\n/**\n * Like <Markdown>, but using some opinionated minimal default CSS.\n */\nconst StyledMarkdown = styled(Markdown)`\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin: 1em 0;\n  }\n\n  code,\n  pre {\n    color: inherit;\n    background-color: rgba(255, 255, 255, 0.3);\n    @media (prefers-color-scheme: dark) {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n  }\n\n  pre {\n    padding: 0.5em 0.55em;\n    margin: 0.5em 0;\n    line-height: 1.3em;\n    white-space: pre-wrap;\n  }\n\n  code {\n    font-weight: 600;\n  }\n\n  p {\n    margin-block-end: 16px;\n  }\n  p:last-child {\n    margin-block-end: 0;\n  }\n\n  ul,\n  ol {\n    margin: 1em 1.25em;\n  }\n`;\n\nexport default StyledMarkdown;\n","import { Classes, Text } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { EvaluatableColumnName } from \"../../../xlsform-simple-schema/types/ODKNode\";\n\n/** Shows a text explaining what happens if a formula-based XLSForm cell is empty. */\nexport function DefaultValueExplanation({\n  answer,\n  columnName,\n  nodeName,\n}: {\n  answer: unknown;\n  columnName: EvaluatableColumnName;\n  nodeName: string;\n}) {\n  return (\n    <Text className={Classes.TEXT_MUTED}>\n      {\n        {\n          calculation:\n            answer === undefined || answer === \"\" ? (\n              <>\n                This survey field has no entered answer yet, and the{\" \"}\n                <code>{columnName}</code> cell is empty.\n              </>\n            ) : (\n              <>\n                This is the answer value entered in the <code>{nodeName}</code>{\" \"}\n                field.\n              </>\n            ),\n          required: (\n            <>\n              This means users are not required to enter this field. This is the\n              default when the <code>{columnName}</code> cell is empty.\n            </>\n          ),\n          relevant: (\n            <>\n              This means the survey field is always shown. This is the default\n              behavior when the <code>{columnName}</code> cell is empty.\n            </>\n          ),\n          readonly: (\n            <>\n              This means the survey field enables input. This is the default\n              behavior when the <code>{columnName}</code> cell is empty.\n            </>\n          ),\n          constraint: (\n            <>\n              If the cell contains a formula that evaluates to <code>true</code>{\" \"}\n              or if there is no formula in the <code>{columnName}</code> cell,\n              the field accepts any input.\n            </>\n          ),\n        }[columnName]\n      }\n    </Text>\n  );\n}\n","import { Classes, Text } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport ODKFormulaEvaluationResult from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationResult\";\nimport { EvaluatableColumnName } from \"../../../xlsform-simple-schema/types/ODKNode\";\n\n/**\n * Displays an explanation of a formula result — what effect will it have for end users?\n */\nexport function FormulaResultMeaning({\n  results,\n  columnName,\n  formulaIsTrivial,\n}: {\n  results: ODKFormulaEvaluationResult;\n  columnName: EvaluatableColumnName;\n  formulaIsTrivial: boolean;\n}) {\n  return (\n    <Text className={Classes.TEXT_MUTED}>\n      {\n        {\n          calculation:\n            !formulaIsTrivial &&\n            (results.error ? (\n              <>Because of this error, the field has no result yet.</>\n            ) : (\n              <>This is the result of the formula.</>\n            )),\n          required: `This means you ${\n            results?.result ? \"can’t\" : \"can\"\n          } complete the survey without entering data in this field.`,\n          relevant: `This means the survey field is ${\n            results?.result ? \"shown\" : \"hidden\"\n          }.`,\n          readonly: `This means the survey field is ${\n            results?.result ? \"read-only\" : \"editable\"\n          }.`,\n          constraint: `This means the survey field contains an input that is ${\n            results?.result ? \"allowed\" : \"not allowed\"\n          } by the constraint formula..`,\n        }[columnName]\n      }\n    </Text>\n  );\n}\n","import { Callout, Colors, Icon } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport StyledMarkdown from \"../../../components/core/StyledMarkdown\";\nimport HighlightedExpression from \"../../../components/odk/HighlightedExpression/HighlightedODKExpression\";\nimport { alpha } from \"../../../lib/colors\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport createLiteralExpressionFromValue from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/createLiteralExpressionFromValue\";\nimport ODKFormulaEvaluationResult from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationResult\";\nimport { getNodeAbsolutePathString } from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport { NameExpression } from \"../../../xlsform-simple-schema/functions/odk-formulas/pratt-parser-base\";\nimport LiteralExpression from \"../../../xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/LiteralExpression\";\nimport { EvaluationError } from \"../../../xlsform-simple-schema/types/Errors\";\nimport {\n  EvaluatableColumnName,\n  ODKNode,\n} from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport { useDarkMode } from \"../../core/BlueprintDarkModeContainer\";\nimport { DefaultValueExplanation } from \"./DefaultValueExplanation\";\nimport {\n  StyledCalloutWithCode,\n  StyledCodeBlock,\n  StyledPanel,\n} from \"./FieldPopoverButton\";\nimport { FormulaResultMeaning } from \"./FormulaResultMeaning\";\n\n/**\n * Visual debugger for XLSForm cells that support formulas. Shows the cell's syntax-highlighted\n * formula, the calculated result, and explanations.\n */\nexport function ExpressionPanel({\n  node,\n  columnName,\n  nodeEvaluationResult,\n  style,\n}: {\n  node: ODKNode;\n  columnName: EvaluatableColumnName;\n  nodeEvaluationResult: ODKFormulaEvaluationResult | undefined;\n  style?: React.CSSProperties;\n}) {\n  const isDarkMode = useDarkMode();\n  const context = React.useContext(ODKSurveyContext);\n  const cellValue = node.row[columnName];\n  const results = nodeEvaluationResult;\n  const cellIsEmpty = cellValue === undefined;\n  const isLiteral = results?.expression?.kind === \"literal\";\n  const isName = results?.expression?.kind === \"name\";\n  const answer = context.evaluationContext?.nodesToAnswers.get(node);\n  const nodeName = context.evaluationContext\n    ? getNodeAbsolutePathString(node, context.evaluationContext.survey)\n    : node.row.name;\n\n  const formulaIsTrivial =\n    results?.expression instanceof LiteralExpression ||\n    (results?.expression instanceof NameExpression &&\n      results?.expression.name === results?.expression.text);\n\n  let title: React.ReactNode = \"Result\";\n  if (cellIsEmpty) {\n    if (columnName === \"calculation\") {\n      if (answer !== undefined) {\n        title = \"Using answer value\";\n      }\n    } else {\n      title = \"Default value\";\n    }\n  } else {\n    title = (\n      <>\n        <Icon icon=\"function\" />{\" \"}\n        {columnName === \"calculation\" ? \"Formula\" : \"Condition\"}\n      </>\n    );\n  }\n\n  const panel = (\n    <StyledPanel\n      lang=\"en\"\n      style={{\n        backgroundColor: Colors.LIGHT_GRAY5,\n        marginTop: \"0\",\n        padding: \"20px\",\n        background: `linear-gradient(${alpha(Colors.BLUE3, 0.06)}, ${alpha(\n          Colors.BLUE3,\n          0.05\n        )} 5px, ${alpha(Colors.BLUE3, 0.01)} 10px, transparent 30px)`,\n        borderTop: `solid 1px ${\n          isDarkMode ? Colors.DARK_GRAY2 : Colors.LIGHT_GRAY3\n        }`,\n        ...style,\n      }}\n    >\n      <h4>{title}</h4>\n\n      {!cellIsEmpty && (\n        <>\n          <StyledCodeBlock\n            style={{\n              fontSize: isLiteral || isName ? \"20px\" : \"16px\",\n              lineHeight: \"28px\",\n            }}\n          >\n            <HighlightedExpression\n              node={node}\n              state={results?.state}\n              error={results?.error}\n              expression={results?.expression}\n            />\n          </StyledCodeBlock>\n        </>\n      )}\n\n      {(cellIsEmpty || !formulaIsTrivial) && (\n        <>\n          {!cellIsEmpty && !results && (\n            <Callout intent=\"none\">Not calculated yet.</Callout>\n          )}\n          {results?.state !== \"error\" && (\n            <StyledCodeBlock style={{ fontSize: \"20px\", lineHeight: \"28px\" }}>\n              {!formulaIsTrivial && <>=&nbsp;</>}\n              {results?.result === undefined ? (\n                \"undefined\"\n              ) : (\n                <HighlightedExpression\n                  node={node}\n                  state={results?.state}\n                  error={results?.error}\n                  expression={createLiteralExpressionFromValue(results?.result)}\n                />\n              )}\n            </StyledCodeBlock>\n          )}\n        </>\n      )}\n\n      {results?.state === \"error\" && (\n        <StyledCalloutWithCode intent=\"danger\">\n          {results.error instanceof EvaluationError && (\n            <>\n              Error in&nbsp;\n              <code>\n                <HighlightedExpression\n                  node={node}\n                  expression={results.error.expression}\n                />\n              </code>\n              :\n            </>\n          )}\n          <StyledMarkdown>{results.error.toMarkdown()}</StyledMarkdown>\n        </StyledCalloutWithCode>\n      )}\n\n      {!cellIsEmpty && results?.result !== undefined && (\n        <FormulaResultMeaning {...{ results, columnName, formulaIsTrivial }} />\n      )}\n\n      {cellIsEmpty && (\n        <DefaultValueExplanation {...{ answer, columnName, nodeName }} />\n      )}\n    </StyledPanel>\n  );\n  return panel;\n}\n","import { Breadcrumbs } from \"@blueprintjs/core\";\nimport * as React from \"react\";\n\n/**\n * Shows all parent groups of a field and the field’s name in breadcrumb layout.\n */\nexport function FieldPathBreadcrumbs({\n  path,\n  width,\n}: {\n  path: string[];\n  width: number;\n}) {\n  return (\n    <Breadcrumbs\n      items={path.map((k, i) => ({\n        href: `#//${path.slice(0, i + 1).join(\"/\")}`,\n        text: k,\n      }))}\n      collapseFrom=\"start\"\n      overflowListProps={{\n        minVisibleItems: 1,\n        style: {\n          transition: \"width 0.1s ease-out\",\n          width: `${width}px`,\n        },\n      }}\n    />\n  );\n}\n","export const fieldTypeNames: Record<string, string> = {\n  integer: \"Integer number\",\n  decimal: \"Decimal number\",\n  range: \"Slider\",\n  text: \"Text field\",\n  select_one: \"Single choice\",\n  select_one_from_file: \"Single choice from file\",\n  select_multiple: \"Multiple choice\",\n  select_multiple_from_file: \"Multiple choice from file\",\n  rank: \"Rank items\",\n  note: \"Note / Hint\",\n  geopoint: \"Locate a point\",\n  geotrace: \"Trace a line\",\n  geoshape: \"Draw a shape\",\n  date: \"Date\",\n  time: \"Time\",\n  datetime: \"Date and time\",\n  image: \"Image\",\n  audio: \"Audio\",\n  video: \"Video\",\n  file: \"File\",\n  barcode: \"Scan a code\",\n  acknowledge: \"Checkbox\",\n  calculate: \"Calculate formula\",\n  hidden: \"Hidden field\",\n  \"xml-external\": \"External XML reference\",\n  start: \"Survey start date and time\",\n  end: \"Survey submission date and time\",\n  today: \"Survey start day\",\n  deviceid: \"Device ID\",\n  simserial: \"SIM serial number\",\n  subscriberid: \"Subscriber ID\",\n  phonenumber: \"Phone number\",\n  username: \"Username\",\n  email: \"Email address\",\n  audit: \"Audit trail\",\n  begin_group: \"Field group\",\n  begin_repeat: \"Repeat group\",\n};\n","import {\n  Callout,\n  Checkbox,\n  Classes,\n  Code,\n  ControlGroup,\n  Menu,\n  Text,\n} from \"@blueprintjs/core\";\nimport { sortBy, without } from \"lodash\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { XLSForm } from \"../../../xlsform-simple-schema\";\nimport { ODKNode } from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport { QuestionRow } from \"../../../xlsform-simple-schema/types/RowTypes\";\n\n/** Displays all defined XLSForm survey choice lists as selectable checkboxes. */\nexport function ChoiceListMenu({\n  xlsForm,\n  node,\n}: {\n  xlsForm: XLSForm;\n  node: ODKNode;\n}) {\n  const choiceListsByName = xlsForm?.choicesByName;\n  const choiceListNames = choiceListsByName\n    ? Object.keys(choiceListsByName)\n    : [];\n  const context = React.useContext(ODKSurveyContext);\n\n  const onChange = React.useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const checked = event.currentTarget.checked;\n      const choiceListName = event.currentTarget.value;\n      let typeParameters = [...node.typeParameters];\n      if (checked) {\n        typeParameters.push(choiceListName);\n      } else {\n        typeParameters = without(typeParameters, choiceListName);\n      }\n      const newTypeValue = [node.type, ...typeParameters].join(\" \");\n      const newRow: QuestionRow = {\n        ...node.row,\n        type: newTypeValue,\n      };\n      const description = checked\n        ? `Add \\`${choiceListName}\\` choice list to \\`${node.row.name}\\``\n        : `Remove \\`${choiceListName}\\` choice list from \\`${node.row.name}\\``;\n      context.onSpliceRows(\n        \"survey\",\n        [\n          {\n            rowIndex: node.rowIndex,\n            numberOfRowsToRemove: 1,\n            rowsToAdd: [newRow],\n          },\n        ],\n        description\n      );\n    },\n    [context, node]\n  );\n\n  const choiceListMenu = (\n    <Menu>\n      <li className=\"bp3-menu-header\">\n        <h6 className=\"bp3-heading\">\n          Set which choice lists should be visible.\n        </h6>\n      </li>\n      <ControlGroup style={{ margin: \"16px 8px 4px\" }} vertical={true}>\n        {choiceListNames.map((listName) => {\n          const isSelected = node.typeParameters.includes(listName);\n          const nameElement = listName;\n          const choiceNamesToRows = choiceListsByName[listName];\n          const choiceNames = Object.keys(choiceNamesToRows);\n\n          const sortedChoiceRows = sortBy(\n            choiceNames.map((n) => choiceNamesToRows[n]),\n            (r) => r.name.toLowerCase()\n          );\n\n          const maxChoicesCount = 4;\n          const shownChoices = sortedChoiceRows\n            .slice(0, maxChoicesCount)\n            .map((row) => (\n              <li>\n                <Code\n                  key={row.name}\n                  style={{\n                    marginInline: \"1px\",\n                  }}\n                >\n                  {row.name}\n                </Code>\n              </li>\n            ));\n          const restElement = sortedChoiceRows.length > maxChoicesCount && (\n            <span\n              className={Classes.UI_TEXT}\n              style={{\n                lineHeight: \"24px\",\n                marginLeft: \"4px\",\n                paddingRight: \"2px\",\n              }}\n              aria-label={`and ${\n                sortedChoiceRows.length - maxChoicesCount\n              } more`}\n            >\n              +{sortedChoiceRows.length - maxChoicesCount}\n            </span>\n          );\n          const shownLabel = (\n            <ControlGroup fill={true} style={{ display: \"inline-flex\" }}>\n              <header aria-label={`Choice list ${listName}, allowed values:`}>\n                <Text>{nameElement}</Text>\n              </header>\n              <ul className={Classes.LIST_UNSTYLED}>\n                <ControlGroup\n                  style={{\n                    justifyContent: \"flex-end\",\n                    marginLeft: \"16px\",\n                  }}\n                >\n                  {shownChoices}\n                  {restElement}\n                </ControlGroup>\n              </ul>\n            </ControlGroup>\n          );\n\n          return (\n            <Checkbox\n              value={listName}\n              onChange={onChange}\n              large={true}\n              checked={isSelected}\n              disabled={\n                node.typeParameters.length === 1 &&\n                listName === node.typeParameters[0]\n              }\n            >\n              {shownLabel}\n            </Checkbox>\n          );\n        })}\n      </ControlGroup>\n\n      <Callout intent=\"primary\">\n        The content of these lists is defined in the <code>choices</code> Excel\n        sheet.\n      </Callout>\n    </Menu>\n  );\n  return choiceListMenu;\n}\n","import { IconName } from \"@blueprintjs/core\";\n\nexport const fieldCategoriesToIcons: Record<string, IconName> = {\n  literal: \"edit\",\n  choice: \"selection\",\n  geo: \"globe\",\n  time: \"time\",\n  media: \"upload\",\n  stats: \"scatter-plot\",\n  track: \"person\",\n  special: \"small-minus\",\n  grouping: \"layout-hierarchy\",\n};\n","export const fieldCategoryNames: Record<string, string> = {\n  literal: \"Enter value\",\n  choice: \"Choice\",\n  geo: \"Maps\",\n  time: \"Date and time\",\n  media: \"Upload\",\n  special: \"Other\",\n  stats: \"Statistics\",\n  track: \"Personal data\",\n  grouping: \"Grouping\",\n};\n","export const fieldTypesToCategories: Record<string, string> = {\n  text: \"literal\",\n  acknowledge: \"literal\",\n  integer: \"literal\",\n  decimal: \"literal\",\n  range: \"literal\",\n  barcode: \"literal\",\n  select_one: \"choice\",\n  select_one_from_file: \"choice\",\n  select_multiple: \"choice\",\n  select_multiple_from_file: \"choice\",\n  rank: \"choice\",\n  geopoint: \"geo\",\n  geotrace: \"geo\",\n  geoshape: \"geo\",\n  date: \"time\",\n  time: \"time\",\n  datetime: \"time\",\n  image: \"media\",\n  audio: \"media\",\n  video: \"media\",\n  file: \"media\",\n  note: \"special\",\n  calculate: \"special\",\n  hidden: \"special\",\n  \"xml-external\": \"special\",\n  start: \"stats\",\n  end: \"stats\",\n  today: \"stats\",\n  deviceid: \"track\",\n  simserial: \"track\",\n  subscriberid: \"track\",\n  phonenumber: \"track\",\n  username: \"track\",\n  email: \"track\",\n  audit: \"track\",\n  begin_group: \"grouping\",\n  begin_repeat: \"grouping\",\n};\n","import { Menu, MenuDivider, MenuItem } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { fieldCategoriesToIcons } from \"../../../xlsform-simple-schema/field-types/fieldCategoriesToIcons\";\nimport { fieldCategoryNames } from \"../../../xlsform-simple-schema/field-types/fieldCategoryNames\";\nimport { fieldTypeNames } from \"../../../xlsform-simple-schema/field-types/fieldTypeNames\";\nimport { fieldTypesToCategories } from \"../../../xlsform-simple-schema/field-types/fieldTypesToCategories\";\nimport { fieldTypesToIcons } from \"../../../xlsform-simple-schema/field-types/fieldTypesToIcons\";\n\nexport function FieldTypeMenu({\n  onSelectType,\n  header,\n}: {\n  header: React.ReactNode;\n  onSelectType: (fieldType: keyof typeof fieldTypeNames) => void;\n}) {\n  const onClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      const type = event.currentTarget.dataset.type;\n      if (!type) {\n        throw new Error(\n          \"Encountered a menu item without a set field type. This is a bug – please report this to the developers.\"\n        );\n      }\n      onSelectType(type);\n    },\n    [onSelectType]\n  );\n\n  return (\n    <Menu>\n      <li className=\"bp3-menu-header\">\n        <h6 className=\"bp3-heading\">{header}</h6>\n      </li>\n\n      {Object.keys(fieldCategoriesToIcons)\n        .filter((c) => c !== \"special\" && c !== \"grouping\")\n        .map((category) => (\n          <MenuItem\n            text={fieldCategoryNames[category]}\n            icon={fieldCategoriesToIcons[category]}\n          >\n            {Object.keys(fieldTypesToCategories)\n              .filter((t) => fieldTypesToCategories[t] === category)\n              .map((type) => (\n                <MenuItem\n                  text={fieldTypeNames[type]}\n                  icon={fieldTypesToIcons[type]}\n                  onClick={onClick}\n                  data-type={type}\n                />\n              ))}\n          </MenuItem>\n        ))}\n\n      <MenuDivider />\n\n      {Object.keys(fieldTypesToCategories)\n        .filter((t) => fieldTypesToCategories[t] === \"special\")\n        .map((type) => (\n          <MenuItem\n            text={fieldTypeNames[type]}\n            icon={fieldTypesToIcons[type]}\n            onClick={onClick}\n            data-type={type}\n          />\n        ))}\n    </Menu>\n  );\n}\n","import * as React from \"react\";\nimport { ODKNodeContext } from \"../../../lib/ODKNodeContext\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { mergeCommands } from \"../../../lib/undo/mergeCommands\";\nimport { fieldTypeNames } from \"../../../xlsform-simple-schema/field-types/fieldTypeNames\";\nimport addExampleChoices from \"../../../xlsform-simple-schema/functions/editing/addExampleChoices\";\nimport spliceRowsInWorksheet from \"../../../xlsform-simple-schema/functions/editing/spliceRowsInWorksheet\";\nimport { QuestionRow } from \"../../../xlsform-simple-schema/types/RowTypes\";\nimport { FieldTypeMenu } from \"./FieldTypeMenu\";\n\nexport function SetFieldTypeMenu() {\n  const context = React.useContext(ODKSurveyContext);\n  const { node } = React.useContext(ODKNodeContext);\n\n  const onSelectType = React.useCallback(\n    (type: keyof typeof fieldTypeNames) => {\n      const typeParameters = type?.match(/^select/) ? node.typeParameters : [];\n      const newTypeValue = [type, ...typeParameters].join(\" \");\n      const newRow: QuestionRow = {\n        ...node.row,\n        type: newTypeValue,\n      };\n\n      if (!context.xlsForm) {\n        return;\n      }\n\n      const commands = [];\n      if (\n        type?.match(/^select/) &&\n        !context.xlsForm?.worksheets.choices?.rows.length\n      ) {\n        commands.push(addExampleChoices(context.xlsForm));\n      }\n\n      commands.push(\n        spliceRowsInWorksheet(commands[0]?.[0] || context.xlsForm, \"survey\", [\n          {\n            rowIndex: node.rowIndex,\n            numberOfRowsToRemove: 1,\n            rowsToAdd: [newRow],\n          },\n        ])\n      );\n      context.setXLSFormWithPatches(\n        `Set \\`${node.row.name}\\` type to \\`${type}\\``,\n        ...mergeCommands(commands)\n      );\n    },\n    [context, node]\n  );\n\n  return (\n    <FieldTypeMenu onSelectType={onSelectType} header={\"Set a field type.\"} />\n  );\n}\n","import {\n  Boundary,\n  Button,\n  ButtonGroup,\n  Classes,\n  Code,\n  Icon,\n  OverflowList,\n} from \"@blueprintjs/core\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { fieldTypeNames } from \"../../../xlsform-simple-schema/field-types/fieldTypeNames\";\nimport { fieldTypesToIcons } from \"../../../xlsform-simple-schema/field-types/fieldTypesToIcons\";\nimport {\n  isGroupNode,\n  ODKNode,\n} from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport { ChoiceListMenu } from \"./ChoiceListMenu\";\nimport { NoChoicesState } from \"./NoChoicesState\";\nimport { SetFieldTypeMenu } from \"./SetFieldTypeMenu\";\n\n/**\n * Shows a survey field’s type and type parameters (if existing). The type and parameters are\n * clickable and allow to reconfigure the field.\n */\nexport function FieldTypeButtonGroup({\n  node,\n  showType,\n}: {\n  node: ODKNode;\n  showType: boolean;\n}) {\n  const isGroup = isGroupNode(node);\n  const context = React.useContext(ODKSurveyContext);\n  const { xlsForm } = context;\n  const surveyHasChoiceLists =\n    !!xlsForm && Object.keys(xlsForm?.choicesByName).length > 0;\n  const choiceListMenu = xlsForm && (\n    <ChoiceListMenu xlsForm={xlsForm} node={node} />\n  );\n  const noChoicesAvailable = NoChoicesState();\n  const typeName = fieldTypeNames[node.type];\n  const icon = fieldTypesToIcons[node.type];\n  const hasItems = node.typeParameters.length > 0;\n\n  if (isGroup)\n    return (\n      <span\n        className={[Classes.TEXT_MUTED].join(\" \")}\n        style={{ alignSelf: \"center\", marginLeft: \"8px\" }}\n      >\n        <Icon icon={icon} />\n        &nbsp;{typeName}\n      </span>\n    );\n\n  return (\n    <ButtonGroup>\n      {showType && (\n        <Popover2 content={<SetFieldTypeMenu />} lazy={true}>\n          <Button\n            icon={icon || \"blank\"}\n            fill={false}\n            minimal={true}\n            // rightIcon={\"caret-down\"}\n          >\n            {typeName}\n          </Button>\n        </Popover2>\n      )}\n\n      {node.type.match(/^select/) && (\n        <Popover2\n          lazy={true}\n          content={surveyHasChoiceLists ? choiceListMenu : noChoicesAvailable}\n        >\n          <Button\n            fill={true}\n            minimal={true}\n            // rightIcon={\"caret-down\"}\n            intent={hasItems ? \"none\" : \"warning\"}\n          >\n            {!hasItems && \"Set visible choices\"}\n            {hasItems && (\n              <OverflowList\n                observeParents={true}\n                minVisibleItems={2}\n                collapseFrom={Boundary.END}\n                items={node.typeParameters}\n                visibleItemRenderer={(p) => <Code>{p}</Code>}\n                overflowRenderer={(overflowItems) => (\n                  <span>{`+${overflowItems.length}`}</span>\n                )}\n                style={{\n                  transition: \"width 0.1s ease-out\",\n                  maxWidth: `200px`,\n                }}\n              />\n            )}\n          </Button>\n        </Popover2>\n      )}\n    </ButtonGroup>\n  );\n}\n","import { Button, ControlGroup, NonIdealState } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport addExampleChoices from \"../../../xlsform-simple-schema/functions/editing/addExampleChoices\";\n/**\n * Shown when no choice lists are defined in the survey, allowing to create an example choice list.\n */\nexport function NoChoicesState() {\n  const context = React.useContext(ODKSurveyContext);\n\n  const onAddExampleChoices = React.useCallback(() => {\n    if (!context.xlsForm) {\n      return;\n    }\n    context.setXLSFormWithPatches(\n      \"Add example choices\",\n      ...addExampleChoices(context.xlsForm)\n    );\n  }, [context]);\n\n  const addExampleChoicesButton = (\n    <Button large={true} intent=\"primary\" onClick={onAddExampleChoices}>\n      Create example choice list\n    </Button>\n  );\n\n  return (\n    <ControlGroup style={{ padding: \"16px\" }}>\n      <NonIdealState\n        icon=\"selection\"\n        action={addExampleChoicesButton}\n        title=\"Sometimes, we have no choice.\"\n        description={\n          <>\n            This survey has no choice lists yet. Please add one first to make it\n            available for this survey question.\n          </>\n        }\n      />\n    </ControlGroup>\n  );\n}\n","import { Menu, MenuItem } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { fieldTypesToIcons } from \"../../../xlsform-simple-schema/field-types/fieldTypesToIcons\";\nimport { NodeDependency } from \"../../../xlsform-simple-schema/functions/editing/findOrReplaceFieldReferences\";\nimport { getNodeAbsolutePathString } from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\n\n/**\n * Displays a menu showing all fields that reference the given field.\n */\nexport function NodeReferencesMenu(props: { references: NodeDependency[] }) {\n  const context = React.useContext(ODKSurveyContext);\n\n  return (\n    <Menu>\n      <li className=\"bp3-menu-header\">\n        <h6 className=\"bp3-heading\">\n          This field influences{\" \"}\n          {props.references.length === 1\n            ? \"one other field.\"\n            : `${props.references?.length} other fields.`}\n        </h6>\n      </li>\n\n      {props.references?.map((reference) => {\n        if (!context.evaluationContext) {\n          return null;\n        }\n        const href = `#//${getNodeAbsolutePathString(\n          reference.node,\n          context.evaluationContext.survey,\n          \"/\"\n        )}`;\n\n        return (\n          <MenuItem\n            text={<code>{reference.node?.row.name}</code>}\n            icon={fieldTypesToIcons[reference.node.type]}\n            href={href}\n            label={reference.columnName}\n          />\n        );\n      })}\n    </Menu>\n  );\n}\n","import { Code, IconName, MenuItem } from \"@blueprintjs/core\";\nimport { useCallback, useContext } from \"react\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\nimport { fieldTypeNames } from \"../../xlsform-simple-schema/field-types/fieldTypeNames\";\nimport { ODKNode } from \"../../xlsform-simple-schema/types/ODKNode\";\nimport { FieldTypeMenu } from \"./FieldPopoverButton/FieldTypeMenu\";\n\nexport default function AddFieldOrGroupMenuItem({\n  node,\n  position,\n  icon,\n  group,\n  omitAction,\n}: {\n  node: ODKNode;\n  position: \"before\" | \"after\" | \"inside\";\n  icon?: IconName;\n  group: boolean;\n  omitAction?: boolean;\n}) {\n  const context = useContext(ODKSurveyContext);\n\n  const caption = (\n    <>\n      {omitAction ? null : `Add ${group ? \"group\" : \"field\"}`} {position}{\" \"}\n      <Code>{node.row.name}</Code>\n    </>\n  );\n\n  const addFieldWithType = useCallback(\n    (fieldType: keyof typeof fieldTypeNames) => {\n      context.onAddNode({ position, node, group, fieldType });\n    },\n    [context, group, node, position]\n  );\n\n  const addGroupedTextField = useCallback(() => {\n    context.onAddNode({ position, node, group, fieldType: \"text\" });\n  }, [context, group, node, position]);\n\n  if (group) {\n    return (\n      <MenuItem\n        icon={icon}\n        // intent=\"primary\"\n        text={caption}\n        onClick={addGroupedTextField}\n      />\n    );\n  }\n\n  return (\n    <MenuItem\n      icon={icon}\n      // intent=\"primary\"\n      text={caption}\n    >\n      <FieldTypeMenu\n        onSelectType={addFieldWithType}\n        header={\"Choose a type for the new field.\"}\n      />\n    </MenuItem>\n  );\n}\n","import { MenuDivider, MenuItem } from \"@blueprintjs/core\";\nimport { useCallback, useContext } from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport {\n  isGroupNode,\n  ODKNode,\n} from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport useNodeDeletionDialog from \"../../hooks/useNodeDeletionDialog\";\nimport useRenameNodeDialog from \"../../hooks/useRenameNodeDialog\";\nimport AddFieldOrGroupMenuItem from \"../AddFieldMenuItem\";\n\n/**\n * Anonymous React component with menu items for doing something with a given field.\n */\nexport default function NodeActionMenuItems(props: {\n  node?: ODKNode;\n  removeNode: () => void;\n  renameNode: () => void;\n  nestNode: () => void;\n  ungroupNode: () => void;\n  addHintToNode: () => void;\n  removeHintFromNode: () => void;\n}) {\n  const context = useContext(ODKSurveyContext);\n  const { node } = props;\n  if (!node) {\n    return null;\n  }\n\n  const isGroup = isGroupNode(node);\n  const renameText = isGroup ? \"Rename group…\" : \"Rename field…\";\n  const nodeHasHint = context.language && node.row.hint?.[context.language];\n\n  const items = (\n    <>\n      <MenuItem icon=\"edit\" text={renameText} onClick={props.renameNode} />\n      {!nodeHasHint && (\n        <MenuItem\n          icon=\"lightbulb\"\n          text=\"Add hint\"\n          onClick={props.addHintToNode}\n        />\n      )}\n      <MenuDivider />\n\n      <MenuItem icon=\"group-objects\" text=\"Add group\">\n        <AddFieldOrGroupMenuItem\n          node={node}\n          position=\"before\"\n          icon=\"arrow-up\"\n          group={true}\n          omitAction={true}\n        />\n        {isGroup && (\n          <AddFieldOrGroupMenuItem\n            node={node}\n            position=\"inside\"\n            icon=\"key-enter\"\n            group={true}\n            omitAction={true}\n          />\n        )}\n        <AddFieldOrGroupMenuItem\n          node={node}\n          position=\"after\"\n          icon=\"arrow-down\"\n          group={true}\n          omitAction={true}\n        />\n      </MenuItem>\n\n      <MenuItem icon=\"manually-entered-data\" text=\"Add field\">\n        <AddFieldOrGroupMenuItem\n          node={node}\n          position=\"before\"\n          icon=\"arrow-up\"\n          group={false}\n          omitAction={true}\n        />\n        {isGroup && (\n          <AddFieldOrGroupMenuItem\n            node={node}\n            position=\"inside\"\n            icon=\"key-enter\"\n            group={false}\n            omitAction={true}\n          />\n        )}\n        <AddFieldOrGroupMenuItem\n          node={node}\n          position=\"after\"\n          icon=\"arrow-down\"\n          group={false}\n          omitAction={true}\n        />\n      </MenuItem>\n\n      <MenuDivider />\n\n      <MenuItem\n        icon=\"group-objects\"\n        text=\"Nest in new group\"\n        onClick={props.nestNode}\n      />\n      {isGroup && (\n        <MenuItem\n          icon=\"ungroup-objects\"\n          text=\"Ungroup\"\n          onClick={props.ungroupNode}\n        />\n      )}\n\n      <MenuDivider />\n\n      <MenuItem\n        intent=\"danger\"\n        icon=\"trash\"\n        text={`Remove ${isGroup ? \"group\" : \"field\"}…`}\n        onClick={props.removeNode}\n      />\n    </>\n  );\n\n  return items;\n}\n\nexport function useNodeActionMenuItems(node?: ODKNode) {\n  const context = useContext(ODKSurveyContext);\n  const {\n    alert: nodeDeletionAlert,\n    showRemoveConfirmationDialog,\n  } = useNodeDeletionDialog(node);\n  const { dialog: renameDialog, showRenameDialog } = useRenameNodeDialog(node);\n  const nodeActionDialogs = (\n    <>\n      {nodeDeletionAlert}\n      {renameDialog}\n    </>\n  );\n\n  const addHintToNode = useCallback(() => {\n    if (!node) {\n      return;\n    }\n    context.onChangeCell(\"survey\", node?.rowIndex, \"hint\", \" \", node);\n  }, [context, node]);\n\n  const removeHintFromNode = useCallback(() => {\n    if (!node) {\n      return;\n    }\n    context.xlsForm?.languages.forEach((language) => {\n      context.onChangeCell(\n        \"survey\",\n        node?.rowIndex,\n        \"hint\",\n        \"\",\n        node,\n        language\n      );\n    });\n  }, [context, node]);\n\n  const nodeActionMenuItems = node && (\n    <NodeActionMenuItems\n      node={node}\n      removeNode={showRemoveConfirmationDialog}\n      renameNode={showRenameDialog}\n      nestNode={context.onNestNode.bind(undefined, node)}\n      ungroupNode={context.onUngroupNode.bind(undefined, node)}\n      addHintToNode={addHintToNode}\n      removeHintFromNode={removeHintFromNode}\n    />\n  );\n\n  return { nodeActionDialogs, nodeActionMenuItems };\n}\n","import { Alert, Intent } from \"@blueprintjs/core\";\nimport { useCallback, useContext, useState } from \"react\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\nimport { AppToaster } from \"../../toaster\";\nimport {\n  isGroupNode,\n  ODKNode,\n} from \"../../xlsform-simple-schema/types/ODKNode\";\n\n/**\n * Custom React hook returning a function to show a nice looking field deletion confirmation\n * prompt. The prompt contains a list of fields that are affected by the deletion.\n */\nexport default function useNodeDeletionDialog(node?: ODKNode) {\n  const context = useContext(ODKSurveyContext);\n  const [isAlertOpen, setAlertOpen] = useState(false);\n  const isGroup = node && isGroupNode(node);\n\n  const closeAlert = useCallback(() => {\n    setAlertOpen(false);\n  }, []);\n\n  const removeNode = useCallback(() => {\n    if (!node) {\n      return;\n    }\n    AppToaster.show({\n      intent: \"none\",\n      message: (\n        <>\n          <code>{node.row.name}</code> field removed.\n        </>\n      ),\n    });\n    context.onRemoveRowAndChildren(node);\n    setAlertOpen(false);\n  }, [context, node]);\n\n  const showRemoveConfirmationDialog = useCallback(() => {\n    setAlertOpen(true);\n  }, []);\n\n  const alert = (\n    <Alert\n      cancelButtonText=\"Cancel\"\n      confirmButtonText=\"Delete\"\n      icon=\"trash\"\n      intent={Intent.DANGER}\n      isOpen={isAlertOpen}\n      onCancel={closeAlert}\n      onConfirm={removeNode}\n      canOutsideClickCancel={true}\n      canEscapeKeyCancel={true}\n    >\n      <p>\n        Are you sure you want to remove the <code>{node?.row.name}</code>{\" \"}\n        {isGroup ? \"group\" : \"field\"}?\n      </p>\n      {isGroup && node?.children.length && (\n        <p>This will also remove the group’s nested fields.</p>\n      )}\n    </Alert>\n  );\n\n  return {\n    showRemoveConfirmationDialog,\n    alert,\n  };\n}\n","import {\n  Button,\n  Classes,\n  Dialog,\n  FormGroup,\n  InputGroup,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\nimport { AppToaster } from \"../../toaster\";\nimport findOrReplaceFieldReferences, {\n  NodeDependency,\n} from \"../../xlsform-simple-schema/functions/editing/findOrReplaceFieldReferences\";\nimport {\n  isGroupNode,\n  ODKNode,\n} from \"../../xlsform-simple-schema/types/ODKNode\";\nimport { NodeReferencesMenu } from \"../survey/FieldPopoverButton/NodeReferencesMenu\";\n\n/**\n * Custom React hook returning a function to show a nice-looking rename prompt for a field.\n */\nexport default function useRenameNodeDialog(node?: ODKNode) {\n  const context = useContext(ODKSurveyContext);\n  const [isDialogOpen, setDialogOpen] = useState(false);\n  const [newName, setNewName] = useState<string>(\"\");\n  const [nodeDependencies, setNodeDependencies] = useState<NodeDependency[]>(\n    []\n  );\n\n  useEffect(() => {\n    setNewName(\"\");\n  }, [node?.row.name, node]);\n\n  useEffect(() => {\n    if (context.xlsForm && node) {\n      setNodeDependencies(\n        findOrReplaceFieldReferences(context.xlsForm, node, newName)\n      );\n    }\n  }, [node?.row.name, node, context.xlsForm, newName]);\n\n  const changeName = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setNewName(event.currentTarget.value);\n    },\n    []\n  );\n\n  const closeDialog = useCallback(() => {\n    setDialogOpen(false);\n  }, []);\n\n  const renameNode = useCallback(\n    (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      if (!node) {\n        return;\n      }\n      context.onRenameNode(node, newName);\n      AppToaster.show({\n        intent: \"none\",\n        message: (\n          <>\n            The field has been renamed to ‘<code>{newName}</code>’.\n          </>\n        ),\n      });\n      setDialogOpen(false);\n    },\n    [context, newName, node]\n  );\n\n  const showRenameDialog = useCallback(() => {\n    setDialogOpen(true);\n  }, []);\n\n  const dependenciesInfo =\n    nodeDependencies.length > 0 ? (\n      <Popover2\n        content={<NodeReferencesMenu references={nodeDependencies} />}\n        lazy={true}\n      >\n        <Button minimal={true} intent=\"primary\">\n          See {nodeDependencies.length} updates…\n        </Button>\n      </Popover2>\n    ) : undefined;\n\n  const isGroup = node && isGroupNode(node);\n\n  const dialog = (\n    <Dialog\n      title={\n        <>\n          Rename ‘<code>{node?.row.name}</code>’ {isGroup ? \"group\" : \"field\"}…\n        </>\n      }\n      icon=\"edit\"\n      isOpen={isDialogOpen}\n      canOutsideClickClose={true}\n      canEscapeKeyClose={true}\n      isCloseButtonShown={true}\n      onClose={closeDialog}\n      lazy={true}\n    >\n      <form onSubmit={renameNode}>\n        <div className={Classes.DIALOG_BODY}>\n          <FormGroup\n            label={`Please enter a new name for this ${\n              isGroup ? \"group\" : \"field\"\n            }:`}\n            labelFor={\"newName\"}\n            style={{ display: \"flex\" }}\n          >\n            <InputGroup\n              id={\"newName\"}\n              placeholder=\"Enter a field name…\"\n              defaultValue={node?.row.name}\n              large={true}\n              onChange={changeName}\n              pattern=\"@?[\\w\\d_-]+\"\n              autoFocus={true}\n            />\n          </FormGroup>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <div>{dependenciesInfo}</div>\n            <Button onClick={closeDialog} type=\"button\">\n              Close\n            </Button>\n            <Button\n              intent={Intent.PRIMARY}\n              type=\"submit\"\n              disabled={newName === \"\"}\n            >\n              Rename\n            </Button>\n          </div>\n        </div>\n      </form>\n    </Dialog>\n  );\n\n  return {\n    showRenameDialog,\n    dialog,\n  };\n}\n","import {\n  Button,\n  ButtonGroup,\n  Callout,\n  Classes,\n  Code,\n  Colors,\n  ControlGroup,\n  HTMLDivProps,\n  Icon,\n  IResizeEntry,\n  Menu,\n  ResizeSensor,\n  Tab,\n  Tabs,\n} from \"@blueprintjs/core\";\nimport { Classes as PopoverClasses, Popover2 } from \"@blueprintjs/popover2\";\nimport { without } from \"lodash\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { alpha } from \"../../../lib/colors\";\nimport { ODKNodeContext } from \"../../../lib/ODKNodeContext\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { fieldTypesToIcons } from \"../../../xlsform-simple-schema/field-types/fieldTypesToIcons\";\nimport { internalFieldTypes } from \"../../../xlsform-simple-schema/field-types/internalFieldTypes\";\nimport findOrReplaceFieldReferences, {\n  NodeDependency,\n} from \"../../../xlsform-simple-schema/functions/editing/findOrReplaceFieldReferences\";\nimport { getFirstColumnNameWithError } from \"../../../xlsform-simple-schema/functions/getFirstColumnNameWithError\";\nimport ODKFormulaEvaluationResult from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationResult\";\nimport { getNodeAbsolutePath } from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport {\n  EvaluatableColumnName,\n  evaluatableColumnNames,\n  isNodeRelevant,\n  ODKNode,\n} from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport { useDarkMode } from \"../../core/BlueprintDarkModeContainer\";\nimport { useNodeDragAndDrop } from \"../useNodeDragAndDrop\";\nimport { ExpressionPanel } from \"./ExpressionPanel\";\nimport { FieldPathBreadcrumbs } from \"./FieldPathBreadcrumbs\";\nimport { FieldTypeButtonGroup } from \"./FieldTypeButtonGroup\";\nimport { useNodeActionMenuItems } from \"./NodeActionMenuItems\";\nimport { NodeReferencesMenu } from \"./NodeReferencesMenu\";\n\nexport const StyledCodeBlock = styled(Code)`\n  overflow: auto;\n  word-break: break-all;\n  font-size: 16px;\n  line-height: 20px;\n  display: block;\n  border: none;\n  box-shadow: none;\n  background: transparent;\n  padding: 0;\n`;\n\nexport const StyledPanel = styled.div`\n  display: grid;\n  gap: 8px;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin: 0;\n    &:not(:first-child) {\n      margin-top: 8px;\n    }\n  }\n`;\n\nexport const StyledCalloutWithCode = styled(Callout)`\n  > code,\n  pre {\n    color: inherit;\n    margin: -1px;\n    padding: 2px 4px;\n    background-color: rgba(255, 255, 255, 0.3);\n    @media (prefers-color-scheme: dark) {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n  }\n\n  pre {\n    padding: 0.5em 0.55em;\n    margin: 0.5em 0;\n    line-height: 1.3em;\n    background: white;\n    white-space: pre-wrap;\n  }\n\n  code {\n    font-weight: 600;\n  }\n`;\n\nconst DragStripe = styled.div`\n  position: absolute;\n  top: 0px;\n  left: -20px;\n  width: calc(100% + 40px);\n  height: 5px;\n  background-color: ${Colors.BLUE3};\n  z-index: 10000000;\n`;\n\nfunction RenderTarget({\n  detailsButtonCaption,\n  hasTypeIcon,\n  style,\n}: {\n  detailsButtonCaption?: React.ReactNode;\n  hasTypeIcon?: boolean;\n  style?: React.CSSProperties;\n}) {\n  const context = React.useContext(ODKSurveyContext);\n  const { node, nodeEvaluationResults } = React.useContext(ODKNodeContext);\n  const isInternalFieldType = internalFieldTypes.includes(node.type);\n  const isVisible =\n    !isInternalFieldType && isNodeRelevant(node, context.evaluationContext);\n  const hasMissingParameters =\n    node.type.match(/^select/) && node.typeParameters.length === 0;\n  const firstColumnNameWithError = getFirstColumnNameWithError(\n    nodeEvaluationResults\n  );\n  const hasError = !!firstColumnNameWithError;\n  const [isDraggedOver, setIsDraggedOver] = React.useState(false);\n  const dragProps = useNodeDragAndDrop({\n    evaluationContext: context.evaluationContext,\n    node,\n    setIsDraggedOver,\n  });\n\n  const isDarkMode = useDarkMode();\n  const violetColor = isDarkMode ? Colors.VIOLET5 : Colors.VIOLET3;\n\n  return (\n    <ControlGroup\n      style={{\n        display: \"inline-flex\",\n        flex: \"none\",\n        position: \"relative\",\n        overflow: \"visible\",\n        ...style,\n      }}\n      {...dragProps}\n    >\n      {isDraggedOver && <DragStripe />}\n      <Button\n        minimal={true}\n        small={true}\n        lang=\"en\"\n        intent={\n          hasError ? \"danger\" : hasMissingParameters ? \"warning\" : undefined\n        }\n        rightIcon={hasError ? \"error\" : undefined}\n        icon={\n          hasTypeIcon ? (\n            <Icon\n              icon={fieldTypesToIcons[node.type]}\n              color={hasError || hasMissingParameters ? undefined : violetColor}\n            />\n          ) : undefined\n        }\n        style={{\n          color: hasError || hasMissingParameters ? undefined : violetColor,\n          fontSize: \"inherit\",\n          padding: 0,\n        }}\n        className={[!hasError && !isVisible && Classes.TEXT_MUTED]\n          .filter(Boolean)\n          .join(\" \")}\n      >\n        <ControlGroup>\n          {detailsButtonCaption || (\n            <code style={{ color: \"inherit\" }}>{node.row.name}</code>\n          )}\n          {!isVisible && (\n            <>\n              &nbsp;\n              <Icon\n                icon=\"eye-off\"\n                style={{ opacity: 0.5, color: \"inherit\" }}\n                title=\"Invisible\"\n                htmlTitle=\"Invisible\"\n              />\n            </>\n          )}\n        </ControlGroup>\n      </Button>\n    </ControlGroup>\n  );\n}\n\nexport default function FieldPopoverButton(props: {\n  detailsButtonCaption?: React.ReactNode;\n  detailsContent?: string | JSX.Element | undefined;\n  node: ODKNode;\n  controlGroupProps?: HTMLDivProps;\n  showJumpButton?: boolean;\n  editable: boolean;\n  nameOfOnlyShownTab?: EvaluatableColumnName;\n  hasTypeIcon?: boolean;\n  buttonStyle?: React.CSSProperties;\n}) {\n  const {\n    node,\n    editable,\n    nameOfOnlyShownTab,\n    detailsButtonCaption,\n    hasTypeIcon,\n  } = props;\n  const context = React.useContext(ODKSurveyContext);\n  const nodeEvaluationResults = context.evaluationContext?.evaluationResults.get(\n    node\n  );\n  const firstColumnNameWithError = getFirstColumnNameWithError(\n    nodeEvaluationResults\n  );\n  const { row } = node;\n  const isInternalField = internalFieldTypes.includes(node.type);\n  const columnNames = isInternalField\n    ? without(evaluatableColumnNames, \"relevant\", \"readonly\")\n    : evaluatableColumnNames;\n  const firstColumnNameWithContent = columnNames.find((n) => {\n    const value = row[n];\n    return typeof value === \"string\" && value.length > 0;\n  });\n  const isDarkMode = useDarkMode();\n\n  const [width, setWidth] = React.useState(100);\n  const handleResize = React.useCallback(\n    (entries: IResizeEntry[]) => {\n      setTimeout(() => {\n        const newWidth = entries[0]?.contentRect.width;\n        if (Math.abs(newWidth - width) > 10) {\n          setWidth(newWidth);\n        }\n      }, 50);\n    },\n    [width]\n  );\n\n  const [tabId, setTabId] = React.useState<string | number>(\n    firstColumnNameWithError || firstColumnNameWithContent || \"calculation\"\n  );\n\n  const references = React.useMemo(\n    () =>\n      context?.xlsForm && findOrReplaceFieldReferences(context.xlsForm, node),\n    [context, node]\n  );\n\n  const { nodeActionMenuItems, nodeActionDialogs } = useNodeActionMenuItems(\n    node\n  );\n  if (!context.evaluationContext) {\n    return null;\n  }\n\n  const path = getNodeAbsolutePath(\n    node,\n    context.evaluationContext.survey\n  ).slice(1);\n\n  const referencesButton = ReferencesButton({ references, editable });\n\n  const editHeader = (\n    <ControlGroup\n      style={{\n        margin: \"-20px\",\n        marginBottom: \"24px\",\n        backgroundColor: Colors.LIGHT_GRAY5,\n        // padding: \"20px\",\n        background: `linear-gradient(\n          ${alpha(Colors.BLUE3, 0.0)} 0px,\n          ${alpha(Colors.BLUE3, 0.05)} 22px,\n          ${alpha(Colors.BLUE3, 0.06)} 32px)`,\n        borderBottom: `solid 1px ${\n          isDarkMode ? Colors.DARK_GRAY2 : Colors.LIGHT_GRAY3\n        }`,\n        gap: \"8px\",\n      }}\n    >\n      <FieldTypeButtonGroup node={node} showType={true} />\n\n      <div className={Classes.FLEX_EXPANDER} />\n\n      {referencesButton}\n\n      <ButtonGroup fill={false}>\n        <Popover2\n          content={<Menu>{nodeActionMenuItems}</Menu>}\n          lazy={true}\n          placement=\"right-start\"\n        >\n          <Button icon={\"more\"} minimal={true} text=\"Actions\" />\n        </Popover2>\n      </ButtonGroup>\n    </ControlGroup>\n  );\n\n  const detailsContent = (\n    <ControlGroup vertical={true}>\n      {editHeader}\n\n      <ResizeSensor onResize={handleResize} observeParents={true}>\n        <ControlGroup style={{ width: \"100%\", margin: \"-12px 8px 8px 0px\" }}>\n          <FieldPathBreadcrumbs {...{ path, width }} />\n        </ControlGroup>\n      </ResizeSensor>\n\n      {nameOfOnlyShownTab ? (\n        <ExpressionPanel\n          {...{\n            node,\n            columnName: nameOfOnlyShownTab,\n            nodeEvaluationResult: nodeEvaluationResults?.get(\n              nameOfOnlyShownTab\n            ),\n          }}\n          style={{ margin: \"0 -20px -20px -20px\" }}\n        />\n      ) : (\n        <Tabs\n          onChange={setTabId}\n          selectedTabId={tabId}\n          renderActiveTabPanelOnly={false}\n        >\n          {columnNames.map((columnName) =>\n            getTab({\n              node,\n              nodeEvaluationResults,\n              columnName: columnName,\n            })\n          )}\n        </Tabs>\n      )}\n    </ControlGroup>\n  );\n\n  return (\n    <ODKNodeContext.Provider value={{ node, nodeEvaluationResults }}>\n      {nodeActionDialogs}\n      <Popover2\n        lazy={true}\n        interactionKind=\"click\"\n        popoverClassName={PopoverClasses.POPOVER2_CONTENT_SIZING}\n        minimal={false}\n        placement=\"top\"\n        rootBoundary=\"viewport\"\n        onOpening={() => setWidth(0)}\n        modifiers={{\n          arrow: { enabled: true },\n          preventOverflow: { enabled: true },\n        }}\n        content={detailsContent}\n        fill={false}\n        targetTagName=\"span\"\n      >\n        <RenderTarget\n          {...{ detailsButtonCaption, hasTypeIcon, style: props.buttonStyle }}\n        />\n      </Popover2>\n    </ODKNodeContext.Provider>\n  );\n}\n\nfunction ReferencesButton({\n  references,\n  editable,\n}: {\n  references: NodeDependency[] | undefined;\n  editable: boolean;\n}) {\n  const referencesButtonTitle =\n    references &&\n    (references.length === 1\n      ? \"One dependency\"\n      : `${references.length} dependencies`);\n  const referencesButton = editable && references && references.length > 0 && (\n    <Popover2\n      content={<NodeReferencesMenu references={references} />}\n      lazy={true}\n    >\n      <Button\n        icon=\"link\"\n        // rightIcon={\"caret-down\"}\n        fill={false}\n        minimal={true}\n        title={referencesButtonTitle}\n        aria-label={referencesButtonTitle}\n      >\n        {references.length}\n      </Button>\n    </Popover2>\n  );\n  return referencesButton;\n}\n\nfunction getTab({\n  nodeEvaluationResults,\n  node,\n  columnName,\n}: {\n  nodeEvaluationResults: Map<string, ODKFormulaEvaluationResult> | undefined;\n  node: ODKNode;\n  columnName: EvaluatableColumnName;\n}) {\n  const nodeEvaluationResult = nodeEvaluationResults?.get(columnName);\n  const panel = (\n    <ExpressionPanel\n      {...{ node, columnName, nodeEvaluationResult }}\n      style={{ margin: \"-20px\" }}\n    />\n  );\n\n  return (\n    <Tab\n      id={columnName}\n      key={columnName}\n      panel={panel}\n      title={\n        <>\n          {columnName}\n          {nodeEvaluationResult?.state === \"error\" && (\n            <>\n              &nbsp;\n              <Icon icon=\"warning-sign\" intent=\"warning\" />\n            </>\n          )}\n        </>\n      }\n    />\n  );\n}\n","import { Namespace } from \"rdflib\";\n\nconst NamespacesByPrefix: Record<string, string> = {\n  rdf: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n  rdfs: \"http://www.w3.org/2000/01/rdf-schema#\",\n  foaf: \"http://xmlns.com/foaf/0.1/\",\n  xsd: \"http://www.w3.org/2001/XMLSchema#\",\n  schema: \"https://schema.org/\",\n};\n\nconst RDF = Namespace(NamespacesByPrefix.rdf);\nconst RDFS = Namespace(NamespacesByPrefix.rdfs);\nconst FOAF = Namespace(NamespacesByPrefix.foaf);\nconst XSD = Namespace(NamespacesByPrefix.xsd);\nconst SCHEMA = Namespace(NamespacesByPrefix.schema);\n\nexport { RDF, RDFS, FOAF, XSD, SCHEMA };\n\nexport const Namespaces = Object.values(NamespacesByPrefix);\n\nexport function replaceURIWithPrefix(uri: string) {\n  let result = uri;\n  Object.keys(NamespacesByPrefix).forEach((prefix) => {\n    const baseUri = NamespacesByPrefix[prefix];\n    result = result.replace(baseUri, prefix + \":\");\n  });\n  return result;\n}\n","import { Store } from \"rdflib\";\nimport { NamedNode } from \"rdflib/lib/tf-types\";\nimport { RDFS, SCHEMA } from \"./namespaces\";\n\nexport type ClassMetadataKey =\n  | \"label\"\n  | \"subClassOf\"\n  | \"comment\"\n  | \"isPartOf\"\n  | \"source\"\n  | \"supersededBy\";\n\nconst namesToPredicateNodes: Map<ClassMetadataKey, NamedNode> = new Map([\n  [\"label\", RDFS(\"label\")],\n  [\"subClassOf\", RDFS(\"subClassOf\")],\n  [\"comment\", RDFS(\"comment\")],\n  [\"isPartOf\", SCHEMA(\"isPartOf\")],\n  [\"source\", SCHEMA(\"source\")],\n  [\"supersededBy\", SCHEMA(\"supersededBy\")],\n]);\n\n/**\n * @returns a list of terms, one term per class metadata information.\n *\n * Supports these predicates:\n *\n * - rdfs:label\n * - rdfs:subClassOf\n * - rdfs:comment\n * - schema:isPartOf\n * - schema:source\n */\nexport function getClassMetadata(classNode: NamedNode, graph: Store) {\n  return new Map(\n    [...namesToPredicateNodes.entries()].map(([k, v]) => [\n      k,\n      graph.match(classNode, v),\n    ])\n  );\n}\n\n/**\n * @returns a raw object containing class metadata information. Values are strings.\n *\n * Supports these predicates:\n *\n * - `label` (shortcut for `rdfs:label`)\n * - `subClassOf` (shortcut for `rdfs:subClassOf`)\n * - `comment` (shortcut for `rdfs:comment`)\n * - `isPartOf` (shortcut for `schema:isPartOf`)\n * - `source` (shortcut for `schema:source`)\n */\n\nexport function getClassMetadataCompact(classNode: NamedNode, graph: Store) {\n  const result = getClassMetadata(classNode, graph);\n  return new Map(\n    [...result.entries()].map(([k, v]) => [k, v.map((v) => v.object.value)])\n  );\n}\n","import { Store } from \"rdflib\";\nimport { NamedNode } from \"rdflib/lib/tf-types\";\nimport { RDFS, SCHEMA } from \"./namespaces\";\n\nexport type PropertyMetadataKey =\n  | \"label\"\n  | \"comment\"\n  | \"domainIncludes\"\n  | \"rangeIncludes\"\n  | \"supersededBy\";\n\nconst namesToPredicateNodes: Map<PropertyMetadataKey, NamedNode> = new Map([\n  [\"label\", RDFS(\"label\")],\n  [\"comment\", RDFS(\"comment\")],\n  [\"domainIncludes\", SCHEMA(\"domainIncludes\")],\n  [\"rangeIncludes\", SCHEMA(\"rangeIncludes\")],\n  [\"supersededBy\", SCHEMA(\"supersededBy\")],\n]);\n\n/**\n * @returns a list of terms, one term per property metadata information.\n *\n * Supports these predicates:\n *\n * - rdfs:label\n * - rdfs:comment\n * - schema:domainIncludes\n * - schema:rangeIncludes\n */\nexport function getPropertyMetadata(classNode: NamedNode, graph: Store) {\n  return new Map(\n    [...namesToPredicateNodes.entries()].map(([k, v]) => [\n      k,\n      graph.match(classNode, v),\n    ])\n  );\n}\n\n/**\n * @returns a raw object containing property metadata information.\n *   Values are strings.\n *\n * Supports these predicates:\n *\n * - `label` (shortcut for `rdfs:label`)\n * - `comment` (shortcut for `rdfs:comment`)\n * - `domainIncludes` (shortcut for `schema:domainIncludes`)\n * - `rangeIncludes` (shortcut for `schema:rangeIncludes`)\n */\n\nexport function getPropertyMetadataCompact(classNode: NamedNode, graph: Store) {\n  const result = getPropertyMetadata(classNode, graph);\n  return new Map(\n    [...result.entries()].map(([k, v]) => [k, v.map((v) => v.object.value)])\n  );\n}\n","import { Store } from \"rdflib\";\nimport React from \"react\";\n\nexport const RDFGraphContext = React.createContext<Store>(new Store());\n","import { replaceURIWithPrefix } from \"../../lib/rdf/namespaces\";\n\nexport default function RDFPrefixedNodeName({\n  name,\n  contextPrefix,\n}: {\n  name: string;\n  contextPrefix: string;\n}) {\n  const [prefix, suffix] = replaceURIWithPrefix(name).split(\":\");\n  return (\n    <>\n      {prefix !== contextPrefix && (\n        <span style={{ fontWeight: 300 }}>{prefix}:</span>\n      )}\n      <span style={{ fontWeight: 600 }}>{suffix}</span>\n    </>\n  );\n}\n","import { Callout, ControlGroup, H4, H5, UL } from \"@blueprintjs/core\";\nimport marked from \"marked\";\nimport * as React from \"react\";\nimport { useContext, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  ClassMetadataKey,\n  getClassMetadataCompact,\n} from \"../../lib/rdf/getClassMetadata\";\nimport { getFirstClassOrPropertyNodeWithName } from \"../../lib/rdf/getFirstClassOrPropertyNodeWithName\";\nimport {\n  getPropertyMetadataCompact,\n  PropertyMetadataKey,\n} from \"../../lib/rdf/getPropertyMetadata\";\nimport StyledMarkdown from \"../core/StyledMarkdown\";\nimport { RDFGraphContext } from \"./RDFGraphContext\";\nimport RDFPrefixedNodeName from \"./RDFPrefixedNodeName\";\n\n/** Create a customized Markdown renderer that renders external links that open a new tab */\nfunction getMarkedRendererWithExternalLinks() {\n  const renderer = new marked.Renderer();\n  renderer.link = function (href, title, text) {\n    return `<a target=\"rdfssource\" rel=\"noopener noreferrer\" href=\"${href}\"${\n      title != null ? ` title=\"${title}\"` : \"\"\n    }>${text}</a>`;\n  };\n  return renderer;\n}\n\n/** Concatenates anything that is Iterable. */\nfunction* concat<T, U>(\n  arg0: Iterable<T> | undefined,\n  arg1: Iterable<U> | undefined\n) {\n  for (const iter of [arg0, arg1]) for (const x of iter || []) yield x;\n}\n\nfunction ExternalAnchor(props: React.HTMLProps<HTMLAnchorElement>) {\n  return (\n    <a target=\"rdfssource\" rel=\"noopener noreferrer\" {...props}>\n      {props.children}\n    </a>\n  );\n}\n\nconst ControlGroupWithGapSections = styled(ControlGroup)`\n  > * {\n    margin-top: 0.5rem !important;\n    &:first-child {\n      margin-top: 0 !important;\n    }\n  }\n`;\n\nexport function RDFClassMetadata({\n  name,\n  contextPrefix,\n  visibleSections,\n}: {\n  name: string;\n  contextPrefix: string;\n  visibleSections?: Partial<\n    Record<ClassMetadataKey | PropertyMetadataKey, boolean>\n  >;\n}) {\n  const graph = useContext(RDFGraphContext);\n\n  const node = useMemo(\n    () => graph && getFirstClassOrPropertyNodeWithName(name, graph),\n    [graph, name]\n  );\n\n  const classMetadata = useMemo(\n    () => node && getClassMetadataCompact(node, graph),\n    [graph, node]\n  );\n\n  const propertyMetadata = useMemo(\n    () => node && getPropertyMetadataCompact(node, graph),\n    [graph, node]\n  );\n\n  const metadata = new Map([...concat(classMetadata, propertyMetadata)]);\n\n  const markedRenderer = React.useMemo(getMarkedRendererWithExternalLinks, []);\n\n  if (!metadata) {\n    return null;\n  }\n\n  const labels = metadata.get(\"label\");\n  const comments = metadata.get(\"comment\");\n  const sources = metadata.get(\"source\");\n  const isPartOfs = metadata.get(\"isPartOf\");\n  const domain = [...(metadata.get(\"domainIncludes\")?.values() || [])];\n  const range = [...(metadata.get(\"rangeIncludes\")?.values() || [])];\n  const supersededBy = [...(metadata.get(\"supersededBy\")?.values() || [])];\n  const firstLabel = labels?.[0];\n  const basePrefix = name.replace(new RegExp(firstLabel + \"$\"), \"\");\n\n  return (\n    <ControlGroupWithGapSections\n      vertical={true}\n      style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n    >\n      {visibleSections?.label !== false &&\n        labels?.map((label) => (\n          <H4>\n            <ExternalAnchor href={name}>\n              <RDFPrefixedNodeName name={name} contextPrefix={contextPrefix} />\n            </ExternalAnchor>\n          </H4>\n        ))}\n\n      {visibleSections?.supersededBy !== false &&\n        supersededBy?.map((s) => (\n          <Callout intent=\"warning\">\n            <H5>Deprecated, superseded by:</H5>\n            <ExternalAnchor href={s}>{s}</ExternalAnchor>\n          </Callout>\n        ))}\n\n      {visibleSections?.rangeIncludes !== false && range.length > 0 && (\n        <section>\n          <H5>Type:</H5>\n          <UL>\n            {range.map((r) => (\n              <li>\n                <ExternalAnchor href={r}>\n                  <RDFPrefixedNodeName name={r} contextPrefix={contextPrefix} />\n                </ExternalAnchor>\n              </li>\n            ))}\n          </UL>\n        </section>\n      )}\n\n      {visibleSections?.domainIncludes !== false && domain.length > 0 && (\n        <section>\n          <H5>Property of:</H5>\n          <UL>\n            {domain.map((d) => (\n              <li>\n                <ExternalAnchor href={d}>\n                  <RDFPrefixedNodeName name={d} contextPrefix={contextPrefix} />\n                </ExternalAnchor>\n              </li>\n            ))}\n          </UL>\n        </section>\n      )}\n\n      {visibleSections?.comment !== false &&\n        comments?.map((comment) => (\n          <section>\n            <StyledMarkdown markedOptions={{ renderer: markedRenderer }}>\n              {comment?.replaceAll(\n                /\\[\\[(\\w+)\\]\\]/g,\n                (_, word) => `[\\`${word}\\`](${basePrefix}${word})`\n              )}\n            </StyledMarkdown>\n          </section>\n        ))}\n\n      {visibleSections?.source !== false && sources && sources?.length > 0 && (\n        <section>\n          <H5>Sources:</H5>\n          {sources?.map((source) => (\n            <p>\n              <ExternalAnchor href={source}>{source}</ExternalAnchor>\n            </p>\n          ))}\n        </section>\n      )}\n\n      {visibleSections?.isPartOf !== false &&\n        isPartOfs?.map((isPartOf) => (\n          <section>\n            <H5>Part of:</H5>\n            <ExternalAnchor href={isPartOf}>{isPartOf}</ExternalAnchor>\n          </section>\n        ))}\n    </ControlGroupWithGapSections>\n  );\n}\n","import { isNamedNode, Store, sym } from \"rdflib\";\nimport { RDF, RDFS } from \"./namespaces\";\n\nexport function getFirstClassOrPropertyNodeWithName(\n  name: string,\n  graph: Store\n) {\n  const classNode = graph.anyStatementMatching(\n    sym(name),\n    RDF(\"type\"),\n    RDFS(\"Class\")\n  )?.subject;\n  const propertyNode = graph.anyStatementMatching(\n    sym(name),\n    RDF(\"type\"),\n    RDF(\"Property\")\n  )?.subject;\n  const node = classNode || propertyNode;\n  return isNamedNode(node) ? node : undefined;\n}\n","import { Button, Colors } from \"@blueprintjs/core\";\nimport { Classes as PopoverClasses, Popover2 } from \"@blueprintjs/popover2\";\nimport { get, isEmpty } from \"lodash\";\nimport Inspector, { chromeLight } from \"react-inspector\";\nimport { useDarkMode } from \"../../core/BlueprintDarkModeContainer\";\nimport { RDFClassMetadata } from \"../../rdf/RDFClassMetadata\";\n\n/**\n * Shows a JavaScript object literal like Chrome inspector would show it.\n */\nexport default function ObjectLiteralButtonWithPopover({\n  object,\n  contextPrefix,\n}: {\n  object: unknown;\n  contextPrefix: string;\n}) {\n  const isDate = object instanceof Date;\n  const linkedDataType = get(object, \"@type\");\n  const type =\n    linkedDataType === undefined\n      ? isDate\n        ? \"Date\"\n        : undefined\n      : linkedDataType;\n  const isEmptyObject = type === undefined && isEmpty(object);\n\n  const isDarkMode = useDarkMode();\n  const violetColor = isDarkMode ? Colors.VIOLET5 : Colors.VIOLET3;\n\n  const inspector = (\n    <div style={{ margin: \"-20px\", padding: \"20px\", overflow: \"auto\" }}>\n      {linkedDataType && (\n        <RDFClassMetadata name={linkedDataType} contextPrefix={contextPrefix} />\n      )}\n      <Inspector\n        data={object}\n        name={type}\n        expandLevel={0}\n        theme={{\n          ...chromeLight,\n          TREENODE_FONT_FAMILY:\n            'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n          TREENODE_FONT_SIZE: \"14px\",\n          TREENODE_LINE_HEIGHT: \"1.5\",\n          BASE_FONT_SIZE: \"14px\",\n          BASE_LINE_HEIGHT: \"1.5\",\n          OBJECT_NAME_COLOR: violetColor,\n          OBJECT_VALUE_NULL_COLOR: Colors.RED4,\n          OBJECT_VALUE_UNDEFINED_COLOR: Colors.RED4,\n          OBJECT_VALUE_REGEXP_COLOR: Colors.RED4,\n          OBJECT_VALUE_STRING_COLOR: Colors.RED4,\n          OBJECT_VALUE_SYMBOL_COLOR: Colors.RED4,\n          OBJECT_VALUE_NUMBER_COLOR: Colors.RED4,\n          OBJECT_VALUE_BOOLEAN_COLOR: Colors.RED4,\n          OBJECT_VALUE_FUNCTION_PREFIX_COLOR: Colors.RED4,\n        }}\n      />\n    </div>\n  );\n  if (isEmptyObject) {\n    return null;\n  }\n\n  return (\n    <Popover2\n      lazy={true}\n      interactionKind=\"click\"\n      popoverClassName={PopoverClasses.POPOVER2_CONTENT_SIZING}\n      minimal={false}\n      placement=\"top\"\n      rootBoundary=\"viewport\"\n      modifiers={{\n        arrow: { enabled: true },\n        preventOverflow: { enabled: true },\n      }}\n      content={inspector}\n      fill={false}\n      targetTagName=\"span\"\n    >\n      <span>\n        <Button\n          minimal={true}\n          style={{\n            fontWeight: \"bold\",\n            color: violetColor,\n          }}\n        >\n          {String(type === undefined ? \"{}\" : type)}\n        </Button>\n      </span>\n    </Popover2>\n  );\n}\n","import { isObject } from \"lodash\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport ODKFormulaEvaluationContext from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport {\n  findNodeByNameInCurrentAndAncestorScopes,\n  findNodeByNameInsideScope,\n} from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport {\n  Expression,\n  NameExpression,\n  Token,\n  TokenType,\n} from \"../../../xlsform-simple-schema/functions/odk-formulas/pratt-parser-base\";\nimport LiteralExpression from \"../../../xlsform-simple-schema/functions/odk-formulas/pratt-parser-base/expressions/LiteralExpression\";\nimport { ODKNode } from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport FieldPopoverButton from \"../../survey/FieldPopoverButton/FieldPopoverButton\";\nimport ObjectLiteralButtonWithPopover from \"./ObjectLiteral\";\n\n/** Shows a function name as a link to the function's documentation. */\nfunction FunctionCallTokenElement({\n  token,\n  className,\n}: {\n  token: Token;\n  className?: string;\n}) {\n  return (\n    <a\n      href={`https://getodk.github.io/xforms-spec/#fn:${token.text}`}\n      className={className}\n      target=\"docs\"\n    >\n      {token.text}\n    </a>\n  );\n}\n\n/** Shows a variable name as a link to its definition. */\nfunction VariableReferenceTokenElement({\n  expression,\n  context,\n  className,\n  token,\n  node,\n}: {\n  expression: NameExpression;\n  context: ODKFormulaEvaluationContext;\n  className?: string;\n  token: Token;\n  node: ODKNode;\n}) {\n  // Expression is a variable reference.\n  const referencedNode =\n    findNodeByNameInCurrentAndAncestorScopes(\n      expression.name,\n      context.survey,\n      node\n    ) || findNodeByNameInsideScope(expression.name, context.survey);\n\n  if (!referencedNode || referencedNode instanceof Array) {\n    // We should never get here.\n    debugger;\n    return (\n      <var className={className} data-referenced-node={referencedNode}>\n        {token.text}\n      </var>\n    );\n  }\n\n  return (\n    <var>\n      {\"${\"}\n      <FieldPopoverButton\n        node={referencedNode}\n        editable={false}\n        nameOfOnlyShownTab={\"calculation\"}\n      />\n      {\"}\"}\n    </var>\n  );\n}\n\n/** Shows a single parsed formula token as highlighted code. */\nexport function TokenElement({\n  token,\n  expression,\n  parentExpression,\n  node,\n  stackDepth,\n}: {\n  token: Token;\n  expression?: Expression;\n  parentExpression?: Expression;\n  node: ODKNode;\n  stackDepth?: number;\n}) {\n  const className = `token token-${TokenType[token.type]}`;\n  const context = React.useContext(ODKSurveyContext);\n\n  const isFunctionCall =\n    token.type === TokenType.NAME &&\n    parentExpression?.kind === \"call\" &&\n    expression instanceof NameExpression &&\n    token === parentExpression.tokens[0];\n\n  if (isFunctionCall) {\n    return <FunctionCallTokenElement {...{ token, className }} />;\n  }\n\n  if (\n    token.type === TokenType.NAME &&\n    token.text.startsWith(\"$\") &&\n    expression instanceof NameExpression &&\n    context.evaluationContext\n  ) {\n    return (\n      <VariableReferenceTokenElement\n        {...{\n          expression,\n          context: context.evaluationContext,\n          className,\n          token,\n          node,\n        }}\n      />\n    );\n  }\n\n  if (\n    expression instanceof LiteralExpression &&\n    isObject(expression.value) &&\n    expression.type === \"object\"\n  ) {\n    return (\n      <ObjectLiteralButtonWithPopover\n        object={expression.value as Record<string, unknown>}\n        contextPrefix={\"\"}\n      />\n    );\n  }\n\n  return <span className={className}>{token.text}</span>;\n}\n","import { Classes } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { CSSProperties } from \"styled-components\";\nimport { Token } from \"../../../xlsform-simple-schema/functions/odk-formulas/pratt-parser-base\";\nimport { ODKNode } from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport StyledCode from \"./StyledCode\";\nimport { TokenElement } from \"./TokenElement\";\n\n/**\n * Shows an invalid expression's tokens and the non-tokenizable rest of its code with syntax\n * highlighting.\n */\nexport function InvalidExpression(props: {\n  code?: string;\n  className?: string;\n  style?: CSSProperties;\n  tokens?: Token[];\n  node: ODKNode;\n}) {\n  if (!props.tokens) {\n    return (\n      <StyledCode\n        style={props.style}\n        className={`${props.className || \"\"} expression expression-invalid`}\n      >\n        {props.code}\n      </StyledCode>\n    );\n  }\n\n  const lastToken = props.tokens[props.tokens.length - 1];\n  const indexAfterLastToken = lastToken.index + lastToken.text.length;\n  return (\n    <StyledCode\n      style={props.style}\n      className={`${props.className || \"\"} expression expression-invalid`}\n    >\n      {props.tokens.map((token) => (\n        <TokenElement token={token} key={token.index} node={props.node} />\n      ))}\n      <span className={Classes.TEXT_DISABLED}>\n        {props.code?.slice(indexAfterLastToken)}\n      </span>\n    </StyledCode>\n  );\n}\n","import { Callout } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { CSSProperties } from \"styled-components\";\nimport { Expression } from \"../../../xlsform-simple-schema/functions/odk-formulas/pratt-parser-base\";\nimport { EvaluationError } from \"../../../xlsform-simple-schema/types/Errors\";\nimport { ODKNode } from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport { InvalidExpression } from \"./InvalidExpression\";\nimport StyledCode from \"./StyledCode\";\nimport { TokenElement } from \"./TokenElement\";\n\n/** Shows a parsed formula expression with syntax highlighting and debugging features. */\nexport default function HighlightedExpression(props: {\n  /** The code to show. */\n  /** Highlights the success state of a formula parsing or evaluation process. */\n  state?: \"error\" | \"success\";\n  /** The error object to show, if applicable. */\n  error?: Error;\n  /** The formula expression to show. */\n  expression?: Expression;\n  /** The expression's parent expression. Allows customizing appearance based on the parent. */\n  parentExpression?: Expression;\n  /** The tokens to show. */\n  node: ODKNode;\n  /** Additional CSS class to apply. */\n  className?: string;\n  /** Additional CSS styles to apply. */\n  style?: CSSProperties;\n  stackDepth?: number;\n}) {\n  if (!props.expression) {\n    return <InvalidExpression {...props} />;\n  }\n\n  if (props.stackDepth && props.stackDepth > 50) {\n    return (\n      <Callout intent=\"warning\">Stack overflow while highlighting.</Callout>\n    );\n  }\n  const isErroneousExpression =\n    props.error instanceof EvaluationError &&\n    props.error.expression === props.expression;\n\n  return (\n    <StyledCode\n      style={props.style}\n      className={`${props.className || \"\"} expression expression-${\n        props.expression.kind\n      } ${isErroneousExpression ? \"has-error\" : \"\"}`}\n    >\n      {props.expression.children.map((expressionOrToken, i) => {\n        if (expressionOrToken instanceof Expression) {\n          return (\n            <HighlightedExpression\n              expression={expressionOrToken}\n              parentExpression={props.expression}\n              error={props.error}\n              node={props.node}\n              stackDepth={(props.stackDepth || 0) + 1}\n            />\n          );\n        } else {\n          return (\n            <TokenElement\n              token={expressionOrToken}\n              key={expressionOrToken.index}\n              expression={props.expression}\n              parentExpression={props.parentExpression}\n              node={props.node}\n              stackDepth={(props.stackDepth || 0) + 1}\n            />\n          );\n        }\n      })}\n    </StyledCode>\n  );\n}\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Patch } from \"../../lib/undo/useUndoHistory\";\nimport { AppToaster } from \"../../toaster\";\nimport { WorksheetName, XLSForm } from \"../../xlsform-simple-schema\";\nimport { fieldTypeNames } from \"../../xlsform-simple-schema/field-types/fieldTypeNames\";\nimport { addNodeToXLSForm } from \"../../xlsform-simple-schema/functions/editing/addNodeToXLSForm\";\nimport { moveNode } from \"../../xlsform-simple-schema/functions/editing/moveNode\";\nimport { nestNode } from \"../../xlsform-simple-schema/functions/editing/nestNode\";\nimport patchXLSFormCell from \"../../xlsform-simple-schema/functions/editing/patchXLSFormCell\";\nimport { removeNodeAndChildren } from \"../../xlsform-simple-schema/functions/editing/removeNodeAndChildren\";\nimport { renameNode } from \"../../xlsform-simple-schema/functions/editing/renameNode\";\nimport spliceRowsInWorksheet, {\n  RowSpliceOperation,\n} from \"../../xlsform-simple-schema/functions/editing/spliceRowsInWorksheet\";\nimport { ungroupNode } from \"../../xlsform-simple-schema/functions/editing/ungroupNode\";\nimport createLiteralExpressionFromValue from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/createLiteralExpressionFromValue\";\nimport getEvaluatedXLSFormResult from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/evaluateNodeAndChildren\";\nimport ODKFormulaEvaluationContext, {\n  getEmptyEvaluationContext,\n  knownLiteralsWithoutDollarSign,\n} from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport { getNodeIndexPath } from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport { describeNode } from \"../../xlsform-simple-schema/types/describeNode\";\nimport { ODKNode } from \"../../xlsform-simple-schema/types/ODKNode\";\nimport HighlightedExpression from \"../odk/HighlightedExpression/HighlightedODKExpression\";\nimport { FieldProps } from \"../survey/FieldProps\";\n\n/** Custom React hooks to change / edit the current survey model. */\nexport default function useChangeHooks({\n  xlsForm,\n  setXLSFormWithPatches,\n  language,\n  debug,\n}: {\n  /** The XLSForm model to edit */\n  xlsForm?: XLSForm;\n  /** A React setState method to set a new XLSForm model */\n  setXLSFormWithPatches: (\n    description: string,\n    value: XLSForm | undefined,\n    patches: Patch[],\n    inversePatches: Patch[]\n  ) => void;\n  /** Currently set XLSForm language */\n  language?: string;\n  /** `true` if in development mode, `false` if not. */\n  debug: boolean;\n}) {\n  const [context, setContext] = useState<ODKFormulaEvaluationContext>();\n\n  /** Sets a new evaluation context whenever the underlying XLSForm changes */\n  useEffect(() => {\n    if (!xlsForm) {\n      setContext(undefined);\n      return;\n    }\n\n    setContext((context: ODKFormulaEvaluationContext | undefined) => {\n      if (context && context.survey === xlsForm.rootSurveyGroup) {\n        // console.log(\n        //   \"Context exists already and survey model is identical, keeping context.\"\n        // );\n        return context;\n      }\n\n      const newContext = getEmptyEvaluationContext(xlsForm.rootSurveyGroup);\n      newContext.nodesToAnswers = new Map();\n      newContext.survey = xlsForm.rootSurveyGroup;\n      newContext.stackDepth = 0;\n      newContext.knownLiteralsWithoutDollarSign = knownLiteralsWithoutDollarSign;\n      getEvaluatedXLSFormResult(xlsForm, newContext);\n      // console.log(\"Setting up new evaluation context\", newContext);\n      return newContext;\n    });\n  }, [xlsForm, xlsForm?.rootSurveyGroup]);\n\n  /** Use this function to change a survey answer value. */\n  const onChangeAnswer = React.useCallback(\n    (value: unknown, fieldProps: FieldProps) => {\n      if (debug) {\n        AppToaster.show(\n          {\n            message: (\n              <>\n                {fieldProps.schemaKey} →{\" \"}\n                <HighlightedExpression\n                  node={fieldProps.node}\n                  expression={createLiteralExpressionFromValue(value)}\n                />\n              </>\n            ),\n          },\n          \"changeField\"\n        );\n      }\n      if (xlsForm && context) {\n        setContext((context) => {\n          if (!context) {\n            return;\n          }\n          const nodesToAnswers = new Map<ODKNode, unknown>(\n            context.nodesToAnswers.entries()\n          );\n          nodesToAnswers.set(fieldProps.node, value);\n          const newContext: ODKFormulaEvaluationContext = {\n            ...context,\n            nodesToAnswers,\n          };\n          getEvaluatedXLSFormResult(xlsForm, newContext);\n          return newContext;\n        });\n      }\n    },\n    [context, debug, xlsForm]\n  );\n\n  /** Use this function to change XLSForm cell content. */\n  const onChangeCell = React.useCallback(\n    (\n      worksheetName: WorksheetName,\n      rowIndex: number,\n      columnName: string,\n      value: unknown,\n      node?: ODKNode,\n      overrideLanguage?: string\n    ) => {\n      if (!xlsForm || !context) {\n        return;\n      }\n      const languageToUse = overrideLanguage || language;\n      if (!languageToUse) {\n        return;\n      }\n      setXLSFormWithPatches(\n        `Change \\`${columnName}\\` cell in \\`${worksheetName}\\` worksheet (Row #${rowIndex})`,\n        ...patchXLSFormCell({\n          worksheetName,\n          xlsForm,\n          node,\n          rowIndex,\n          columnName,\n          language: languageToUse,\n          value,\n          context,\n        })\n      );\n    },\n    [xlsForm, context, language, setXLSFormWithPatches]\n  );\n\n  const onSpliceRows = React.useCallback(\n    (\n      worksheetName: WorksheetName,\n      operations: RowSpliceOperation[],\n      description: string\n    ) => {\n      if (!xlsForm || !context) {\n        return;\n      }\n\n      setXLSFormWithPatches(\n        description,\n        ...spliceRowsInWorksheet(xlsForm, worksheetName, operations)\n      );\n    },\n    [context, setXLSFormWithPatches, xlsForm]\n  );\n\n  const onRemoveRowAndChildren = React.useCallback(\n    (node: ODKNode) => {\n      if (!xlsForm || !context) {\n        return;\n      }\n      const indexPath = getNodeIndexPath(node, context);\n      if (!indexPath) {\n        throw new Error(\n          \"Can’t remove a node that isn’t reachable from survey root. Please ensure the node is actually part of the survey.\"\n        );\n      }\n\n      setXLSFormWithPatches(\n        `Remove \\`${describeNode(node)}\\` node and its children`,\n        ...removeNodeAndChildren(xlsForm, node)\n      );\n    },\n    [context, setXLSFormWithPatches, xlsForm]\n  );\n\n  const onRenameNode = React.useCallback(\n    (node: ODKNode, newName: string) => {\n      if (!xlsForm) {\n        return;\n      }\n\n      setXLSFormWithPatches(\n        `Rename \\`${describeNode(node)}\\` to \\`${newName}\\``,\n        ...renameNode(xlsForm, node, newName)\n      );\n    },\n    [setXLSFormWithPatches, xlsForm]\n  );\n\n  const onNestNode = React.useCallback(\n    (node: ODKNode) => {\n      if (!xlsForm) {\n        return;\n      }\n      setXLSFormWithPatches(\n        `Nest \\`${describeNode(node)}\\``,\n        ...nestNode(xlsForm, node)\n      );\n    },\n    [setXLSFormWithPatches, xlsForm]\n  );\n\n  const onUngroupNode = React.useCallback(\n    (node: ODKNode) => {\n      if (!xlsForm) {\n        return;\n      }\n      setXLSFormWithPatches(\n        `Ungroup \\`${describeNode(node)}\\``,\n        ...ungroupNode({ node, xlsForm })\n      );\n    },\n    [setXLSFormWithPatches, xlsForm]\n  );\n\n  const onAddNode = React.useCallback(\n    ({\n      position,\n      node,\n      group,\n      fieldType,\n    }: {\n      position: \"before\" | \"after\" | \"inside\";\n      node?: ODKNode;\n      group: boolean;\n      fieldType: keyof typeof fieldTypeNames;\n    }) => {\n      if (!xlsForm) {\n        return;\n      }\n\n      const typeDescription = group ? \"group\" : `\\`${fieldType}\\` field`;\n      const description = node\n        ? `Add new ${typeDescription} ${position} \\`${describeNode(node)}\\``\n        : `Add new ${typeDescription}`;\n\n      setXLSFormWithPatches(\n        description,\n        ...addNodeToXLSForm({\n          xlsForm,\n          group,\n          position,\n          relativeToNode: node,\n          fieldType,\n        })\n      );\n    },\n    [setXLSFormWithPatches, xlsForm]\n  );\n\n  const onMoveNode = React.useCallback(\n    ({\n      sourcePath,\n      sourceNode,\n      destinationNode,\n      position,\n    }: {\n      sourcePath: string;\n      sourceNode: ODKNode;\n      destinationNode: ODKNode;\n      position: \"before\" | \"after\" | \"inside\";\n    }) => {\n      if (!xlsForm || !context || !language) {\n        return;\n      }\n\n      const moveResult = moveNode({\n        xlsForm,\n        sourceNode,\n        destinationNode,\n      });\n\n      if (!moveResult) {\n        AppToaster.show(\n          {\n            intent: \"warning\",\n            icon: \"error\",\n            message: \"Can’t move a node into itself.\",\n          },\n          \"cant-drop-node-on-itself\"\n        );\n        return;\n      }\n      setXLSFormWithPatches(\n        `Move \\`${describeNode(sourceNode)}\\` before \\`${describeNode(\n          destinationNode\n        )}\\``,\n        ...moveResult\n      );\n    },\n    [context, language, setXLSFormWithPatches, xlsForm]\n  );\n\n  return {\n    evaluationContext: context,\n    setEvaluationContext: setContext,\n    setXLSFormWithPatches,\n    onChangeAnswer,\n    onChangeCell,\n    onMoveNode,\n    onSpliceRows,\n    onRemoveRowAndChildren,\n    onRenameNode,\n    onNestNode,\n    onUngroupNode,\n    onAddNode,\n  };\n}\n","import { produceWithPatches } from \"immer\";\nimport { set } from \"lodash\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport { WorksheetName, XLSForm } from \"../../types/XLSForm\";\nimport {\n  localizableColumnNames,\n  normalizeColumnNames,\n} from \"../loadSurveyFromXLSX\";\nimport ODKFormulaEvaluationContext from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport { getNodeIndexPath } from \"../odk-formulas/evaluation/XPath\";\n\n/**\n * Changes the content of a single XLSForm cell.\n *\n * @returns a new XLSForm reference with the applied patch.\n */\nexport default function patchXLSFormCell({\n  worksheetName,\n  xlsForm,\n  rowIndex,\n  node,\n  context,\n  language,\n  columnName,\n  value,\n}: {\n  xlsForm: XLSForm;\n  worksheetName: WorksheetName;\n  node?: ODKNode;\n  rowIndex: number;\n  context: ODKFormulaEvaluationContext;\n  language: string;\n  columnName: string;\n  value: unknown;\n}) {\n  const changeIsInSurveyWorksheet = worksheetName === \"survey\";\n  if (changeIsInSurveyWorksheet && !node) {\n    throw new Error(\n      \"This is a bug: Tried to change the `survey` worksheet, but no node was supplied.\"\n    );\n  }\n\n  const valuePathInRow = localizableColumnNames.includes(columnName)\n    ? [columnName, language]\n    : [columnName];\n\n  // This creates a new object for each parent of a changed property inside the whole object tree\n  // of the given XLSForm.\n\n  // https://immerjs.github.io/immer/docs/introduction\n\n  return produceWithPatches(xlsForm, (draft) => {\n    set(\n      draft,\n      [\"worksheets\", worksheetName, \"rows\", rowIndex, ...valuePathInRow],\n      value\n    );\n\n    if (changeIsInSurveyWorksheet) {\n      set(draft, [\"flatNodes\", rowIndex, \"row\", ...valuePathInRow], value);\n      const indexPath = node && getNodeIndexPath(node, context);\n      if (indexPath) {\n        set(\n          draft,\n          [\n            \"rootSurveyGroup\",\n            ...indexPath.map((i) => [\"children\", i]).flat(),\n            \"row\",\n            ...valuePathInRow,\n          ],\n          value\n        );\n      }\n    }\n\n    // Update cached column names if necessary\n    if (language !== undefined && !draft.languages.has(language)) {\n      draft.languages.add(language);\n    }\n\n    const worksheet = draft.worksheets[worksheetName];\n    if (worksheet) {\n      if (language !== undefined && !worksheet.languages.has(language)) {\n        worksheet.languages.add(language);\n      }\n      if (!worksheet.columnNames.includes(columnName)) {\n        worksheet.columnNames.push(columnName);\n      }\n      const normalizedColumnName = normalizeColumnNames([columnName])[0];\n      if (!worksheet.columnNamesNormalized.includes(normalizedColumnName)) {\n        worksheet.columnNamesNormalized.push(normalizedColumnName);\n      }\n    }\n  });\n}\n","import { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport getLastRowIndexOfNode from \"../getLastRowIndexOfNode\";\nimport spliceRowsInWorksheet from \"./spliceRowsInWorksheet\";\n\n/** Removes a field's row (and all descendent field rows if it is a group or repeat) */\n\nexport function removeNodeAndChildren(xlsForm: XLSForm, node: ODKNode) {\n  const numberOfRowsToRemove =\n    getLastRowIndexOfNode(xlsForm, node) - node.rowIndex + 1;\n  const { rowIndex } = node;\n  const newXLSForm = spliceRowsInWorksheet(xlsForm, \"survey\", [\n    {\n      rowIndex,\n      numberOfRowsToRemove,\n      rowsToAdd: [],\n    },\n  ]);\n  return newXLSForm;\n}\n","import { Patch } from \"../../../lib/undo/useUndoHistory\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport findOrReplaceFieldReferences from \"./findOrReplaceFieldReferences\";\nimport spliceRowsInWorksheet from \"./spliceRowsInWorksheet\";\n\n/**\n * Renames a field in the XLSForm model.\n * @returns a new XLSForm reference with the renamed field.\n */\n\nexport function renameNode(\n  previousState: XLSForm,\n  node: ODKNode,\n  newName: string\n): [nextState: XLSForm, patches: Patch[], inversePatches: Patch[]] {\n  let finalNextState = previousState;\n  const finalPatches = [];\n  const finalInversePatches = [];\n\n  findOrReplaceFieldReferences(previousState, node, newName).forEach(\n    ({ index: rowIndex, row }) => {\n      const [nextState, patches, inversePatches] = spliceRowsInWorksheet(\n        finalNextState,\n        \"survey\",\n        [\n          {\n            rowIndex,\n            numberOfRowsToRemove: 1,\n            rowsToAdd: [{ ...row }],\n          },\n        ]\n      );\n      finalPatches.push(...patches);\n      finalInversePatches.push(...inversePatches);\n      finalNextState = nextState;\n    }\n  );\n\n  const [nextState, patches, inversePatches] = spliceRowsInWorksheet(\n    finalNextState,\n    \"survey\",\n    [\n      {\n        rowIndex: node.rowIndex,\n        numberOfRowsToRemove: 1,\n        rowsToAdd: [{ ...node.row, name: newName }],\n      },\n    ]\n  );\n  finalNextState = nextState;\n  finalPatches.push(...patches);\n  finalInversePatches.push(...inversePatches);\n\n  return [finalNextState, finalPatches, finalInversePatches];\n}\n","import { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport getLastRowIndexOfNode from \"../getLastRowIndexOfNode\";\nimport { createEmptyGroupRows } from \"./createUntitledGroupRows\";\nimport spliceRowsInWorksheet from \"./spliceRowsInWorksheet\";\n\n/** Nests a given node in a new, untitled group. */\n\nexport function nestNode(xlsForm: XLSForm, node: ODKNode) {\n  const { beginMarkerRow, endMarkerRow } = createEmptyGroupRows(xlsForm);\n  const firstIndex = node.rowIndex;\n  const lastIndex = getLastRowIndexOfNode(xlsForm, node);\n  const newXLSForm = spliceRowsInWorksheet(xlsForm, \"survey\", [\n    // Note that splicing changes indexes, so splicing the last row first is important.\n    {\n      rowIndex: lastIndex + 1,\n      numberOfRowsToRemove: 0,\n      rowsToAdd: [endMarkerRow],\n    },\n    {\n      rowIndex: firstIndex,\n      numberOfRowsToRemove: 0,\n      rowsToAdd: [beginMarkerRow],\n    },\n  ]);\n  return newXLSForm;\n}\n","import { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport getLastRowIndexOfNode from \"../getLastRowIndexOfNode\";\nimport spliceRowsInWorksheet from \"./spliceRowsInWorksheet\";\n\n/**\n * Remove a given group/repeat nesting, causing the nodes to be moved one hierarchy level\n * higher.\n */\nexport function ungroupNode({\n  node,\n  xlsForm,\n}: {\n  node: ODKNode;\n  xlsForm: XLSForm;\n}) {\n  const firstIndex = node.rowIndex;\n  const lastIndex = getLastRowIndexOfNode(xlsForm, node);\n  return spliceRowsInWorksheet(xlsForm, \"survey\", [\n    // Note that splicing changes indexes, so removing last row first is important.\n    {\n      rowIndex: lastIndex,\n      numberOfRowsToRemove: 1,\n      rowsToAdd: [],\n    },\n    {\n      rowIndex: firstIndex,\n      numberOfRowsToRemove: 1,\n      rowsToAdd: [],\n    },\n  ]);\n}\n","import { isEqual } from \"lodash\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport getLastRowIndexOfNode from \"../getLastRowIndexOfNode\";\nimport { getAncestors } from \"../odk-formulas/evaluation/XPath\";\nimport spliceRowsInWorksheet, {\n  RowSpliceOperation,\n} from \"./spliceRowsInWorksheet\";\n\n/**\n * Moves a node to a new position (before another field).\n *\n * @returns A new `XLSForm` with patches/inverse patches, or `false` if you try to move a group node\n *   into itself.\n */\nexport function moveNode({\n  xlsForm,\n  sourceNode,\n  destinationNode,\n}: {\n  xlsForm: XLSForm;\n  sourceNode: ODKNode;\n  destinationNode: ODKNode;\n}) {\n  if (\n    getAncestors(destinationNode, xlsForm.rootSurveyGroup)?.find((ancestor) =>\n      isEqual(ancestor, sourceNode)\n    )\n  ) {\n    return false;\n  }\n\n  const lastRowIndexOfSourceNode = getLastRowIndexOfNode(xlsForm, sourceNode);\n  const numberOfSourceNodeRows =\n    lastRowIndexOfSourceNode - sourceNode.rowIndex + 1;\n  const rowsOfSourceNode = [...xlsForm.worksheets.survey.rows].slice(\n    sourceNode.rowIndex,\n    sourceNode.rowIndex + numberOfSourceNodeRows\n  );\n  const destinationIsBeforeSource =\n    destinationNode.rowIndex < sourceNode.rowIndex;\n  const insertOperation: RowSpliceOperation = {\n    rowIndex: destinationNode.rowIndex,\n    numberOfRowsToRemove: 0,\n    rowsToAdd: rowsOfSourceNode,\n  };\n  const removeOperation: RowSpliceOperation = {\n    rowIndex:\n      sourceNode.rowIndex +\n      (destinationIsBeforeSource ? numberOfSourceNodeRows : 0),\n    numberOfRowsToRemove: numberOfSourceNodeRows,\n    rowsToAdd: [],\n  };\n\n  return spliceRowsInWorksheet(xlsForm, \"survey\", [\n    insertOperation,\n    removeOperation,\n  ]);\n}\n","import { HTMLDivProps } from '@blueprintjs/core';\nimport * as React from 'react';\n\nexport default function OverflowScrollContainer(props: HTMLDivProps) {\n    return <div {...props} style={{ overflow: 'auto', flex: 1, ...props.style }}>\n        {props.children}\n    </div>;\n}","import { uniqBy } from \"lodash\";\nimport { isNamedNode, Store } from \"rdflib\";\nimport { NamedNode, Term } from \"rdflib/lib/tf-types\";\nimport { RDFS } from \"./namespaces\";\n\n/**\n * Finds all terms defining ancestors of a given RDF `NamedNode`.\n * @returns a list with `X subClassOf Y` terms, one term per ancestor class.\n */\nexport function getClassAncestors(\n  /** The RDF `NamedNode` of the class of interest */\n  classNode: Term,\n  /** The RDF graph in which the inheritance information is saved */\n  graph: Store\n): NamedNode[] {\n  // We use `Term` as type above. This is to allow users of this function to use it with untyped\n  // match results where they assert that the results are actually `NamedNode`s, which should be the\n  // case for all defined classes.\n  if (!isNamedNode(classNode)) {\n    // Still, somebody might supply something that is not a class, so…\n    throw new Error(\n      `${classNode} is not a \\`NamedNode\\`. Please supply a \\`NamedNode\\`.`\n    );\n  }\n\n  // Find all references to parent classes. Multiple inheritance is allowed.\n  const parentClassNodes = graph\n    .match(classNode, RDFS(\"subClassOf\"))\n    .map((quad) => quad.object);\n\n  // Find all ancestors recursively\n  const ancestors = parentClassNodes.flatMap((q) => [\n    q,\n    ...getClassAncestors(q, graph),\n  ]);\n\n  // As schemas can use multiple inheritance, ancestor classes might appear more than once.\n  return uniqBy(ancestors.reverse(), \"value\").reverse().filter(isNamedNode);\n}\n","import { compact, sortBy, sortedUniqBy } from \"lodash\";\nimport { isNamedNode, Store } from \"rdflib\";\nimport { NamedNode } from \"rdflib/lib/tf-types\";\nimport { getClassAncestors } from \"./getClassAncestors\";\nimport { SCHEMA } from \"./namespaces\";\n\nexport function getClassProperties(node: NamedNode, graph: Store) {\n  return sortedUniqBy(\n    sortBy(\n      compact(\n        graph\n          .match(undefined, SCHEMA(\"domainIncludes\"), node)\n          .map((statement) =>\n            isNamedNode(statement.subject) ? statement.subject : undefined\n          )\n      ),\n      (p) => p.value\n    ),\n    (p) => p.value\n  );\n}\n\nexport function getDirectAndIndirectClassProperties(\n  node: NamedNode,\n  graph: Store\n) {\n  return sortedUniqBy(\n    sortBy(\n      [node, ...getClassAncestors(node, graph)].flatMap((a) =>\n        getClassProperties(a, graph)\n      ),\n      (p) => p.value\n    ),\n    (p) => p.value\n  );\n}\n\nexport function getClassesWithProperty(node: NamedNode, graph: Store) {\n  return sortedUniqBy(\n    sortBy(\n      compact(\n        graph\n          .match(node, SCHEMA(\"domainIncludes\"), undefined)\n          .map((statement) => {\n            const object = statement.object;\n            return isNamedNode(object) ? object : undefined;\n          })\n      ),\n      (c) => c.value\n    ),\n    (c) => c.value\n  );\n}\n","import * as React from \"react\";\n\ntype ConjunctionType = \"and\" | \"or\";\n\ntype ConjunctionMap<T> = {\n  and?: {\n    withSerialComma: T;\n    withoutSerialComma: T;\n  };\n  or?: {\n    withSerialComma: T;\n    withoutSerialComma: T;\n  };\n};\n\nconst conjunctionMapReactNodes: ConjunctionMap<React.ReactNode> = {\n  or: {\n    // translator: In a comma-separated serial enumeration, this string is the ', or' conjunction before the last word, with a serial comma at the beginning if the language has a serial comma (https://en.wikipedia.org/wiki/Serial_comma).\n    withSerialComma: (\n      <span className=\"conjunction\" key=\"conjunction\">{`, or `}</span>\n    ),\n    // translator: Conjunction between two words (like the ‘or’ in ‘humans or animals’). Please don't forget to include necessary spaces.\n    withoutSerialComma: (\n      <span className=\"conjunction\" key=\"conjunction\">{` or `}</span>\n    ),\n  },\n  and: {\n    // translator: In a comma-separated serial enumeration, this string is the ', and' conjunction before the last word, with a serial comma at the beginning if the language has a serial comma (https://en.wikipedia.org/wiki/Serial_comma).\n    withSerialComma: (\n      <span className=\"conjunction\" key=\"conjunction\">{`, and`}</span>\n    ),\n    // translator: Conjunction between two words (like the ‘and’ in ‘humans and animals’). Please don't forget to include necessary spaces.\n    withoutSerialComma: (\n      <span className=\"conjunction\" key=\"conjunction\">{` and `}</span>\n    ),\n  },\n};\n\nconst conjunctionMap: ConjunctionMap<string> = {\n  or: {\n    // translator: In a comma-separated serial enumeration, this string is the ', or' conjunction before the last word, with a serial comma at the beginning if the language has a serial comma (https://en.wikipedia.org/wiki/Serial_comma).\n    withSerialComma: `, or `,\n    // translator: Conjunction between two words (like the ‘or’ in ‘humans or animals’). Please don't forget to include necessary spaces.\n    withoutSerialComma: ` or `,\n  },\n  and: {\n    // translator: In a comma-separated serial enumeration, this string is the ', and' conjunction before the last word, with a serial comma at the beginning if the language has a serial comma (https://en.wikipedia.org/wiki/Serial_comma).\n    withSerialComma: `, and`,\n    // translator: Conjunction between two words (like the ‘and’ in ‘humans and animals’). Please don't forget to include necessary spaces.\n    withoutSerialComma: ` and `,\n  },\n};\n\n/**\n * Allows to enumerate a list of words as human-readable sentence, localizable. This can allow for\n * easier screen reader accessibility.\n *\n * Inserts a serial comma (‘Oxford’ comma) if appropriate. For this, you need to add localizations\n * to ttag's locales.\n *\n * You can supply your own conjunction used before the last word. If you do that, be sure to\n * translate it!\n *\n * Example usage:\n *\n *     import { getHumanEnumerationReactNode, andConjunction } from './getHumanEnumeration';\n *\n *     <div>\n *       {getHumanEnumerationReactNode([\n *         <strong>t`humans`</strong>,\n *         <em>t`animals`</em>,\n *       ], 'or')}\n *     </div>\n *\n *     => <div><strong>humans</strong> and <em>animals</em></div>\n */\nexport function getHumanEnumerationReactNode(\n  elements: React.ReactNode[],\n  conjunctionType: ConjunctionType = \"and\"\n): React.ReactNode[] {\n  if (!elements) return [];\n\n  const count = elements.length;\n\n  if (count === 0) {\n    return [];\n  }\n\n  if (count === 1) {\n    return elements;\n  }\n\n  if (count === 2) {\n    const firstElement = elements[0];\n    const secondElement = elements[1];\n    const conjunction =\n      conjunctionMapReactNodes[conjunctionType]?.withoutSerialComma;\n    return [firstElement, conjunction, secondElement];\n  }\n\n  const lastElement = elements[elements.length - 1];\n  const elementsBeforeLastElement = elements.slice(0, elements.length - 1);\n  const commaJoinedElements = elementsBeforeLastElement.reverse().join(\", \");\n  const conjunction =\n    conjunctionMapReactNodes[conjunctionType]?.withSerialComma;\n  return [commaJoinedElements, conjunction, lastElement];\n}\n\n/**\n * Allows to enumerate a list of words as human-readable sentence, localizable. This can allow for\n * easier screen reader accessibility.\n *\n * Inserts a serial comma (‘Oxford’ comma) if appropriate. For this, you need to add localizations\n * to ttag's locales.\n *\n * You can supply your own conjunction used before the last word. If you do that, be sure to\n * translate it!\n *\n * Example usage:\n *\n *     import { getHumanEnumerationReactNode, andConjunction } from './getHumanEnumeration';\n *\n *     <div>\n *       {getHumanEnumerationReactNode([\n *         'humans',\n *         'animals',\n *       ], 'or')}\n *     </div>\n *\n *     => 'humans and animals'\n */\nexport function getHumanEnumeration(\n  elements: string[],\n  conjunctionType: ConjunctionType = \"and\"\n): string {\n  if (!elements) return \"\";\n\n  const count = elements.length;\n\n  if (count === 0) {\n    return \"\";\n  }\n\n  if (count === 1) {\n    return elements[0];\n  }\n\n  if (count === 2) {\n    const firstElement = elements[0];\n    const secondElement = elements[1];\n    const conjunction = conjunctionMap[conjunctionType]!.withoutSerialComma;\n    return [firstElement, conjunction, secondElement].join(\" \");\n  }\n\n  const lastElement = elements[elements.length - 1];\n  const elementsBeforeLastElement = elements.slice(0, elements.length - 1);\n  const commaJoinedElements = elementsBeforeLastElement.reverse().join(\", \");\n  const conjunction = conjunctionMap[conjunctionType]!.withSerialComma;\n  return [commaJoinedElements, conjunction, lastElement].join(\" \");\n}\n","import { humanize, singularize, underscore } from \"inflection\";\nimport { capitalize, isEqual } from \"lodash\";\nimport { addIndefiniteArticle } from \"../addIndefiniteArticle\";\nimport { getHumanEnumeration } from \"../getHumanEnumeration\";\n\nexport default function guessQuestionWording(\n  isClass: boolean,\n  className: string,\n  propertyOrAncestorClassName: string,\n  propertyTypes: string[]\n) {\n  const humanClassName = humanize(underscore(className)).toLowerCase();\n  const humanPropertyOrAncestorClassName = humanize(\n    underscore(propertyOrAncestorClassName)\n  )\n    .toLowerCase()\n    .replaceAll(/\\b(\\w)(?: |\\b)/g, (m) => m.toUpperCase().trim());\n\n  if (isClass) {\n    if (className === propertyOrAncestorClassName) {\n      return `Let’s collect information about this ${humanClassName}.`;\n    }\n    if (propertyOrAncestorClassName === \"Thing\") {\n      return `Let’s collect some basic information.`;\n    }\n    return `Let’s describe this ${humanClassName} as ${addIndefiniteArticle(\n      humanPropertyOrAncestorClassName\n    )}.`;\n  }\n\n  const humanPropertyName = humanPropertyOrAncestorClassName;\n\n  if (isEqual(propertyTypes.sort(), [\"DateTime\", \"Time\"])) {\n    return `When is the ${humanPropertyName}?`;\n  }\n\n  if (\n    isEqual(propertyTypes.sort(), [\"Number\", \"QuantitativeValue\"]) ||\n    isEqual(propertyTypes.sort(), [\"Integer\", \"QuantitativeValue\"]) ||\n    isEqual(propertyTypes, [\"Integer\"]) ||\n    isEqual(propertyTypes, [\"Number\"])\n  ) {\n    return `What is the ${humanPropertyName}?`;\n  }\n\n  const isBoolean = propertyTypes.includes(\"Boolean\");\n\n  const propertyWords = humanPropertyName.split(\" \");\n  const firstPropertyWord = propertyWords[0];\n  const lastPropertyWord = propertyWords[propertyWords.length - 1];\n\n  const simpleMappings: Record<string, () => string> = {\n    sameAs: () =>\n      `Under which web addresses can a search engine find Linked Data about this ${humanClassName}?`,\n    url: () =>\n      `What is the main web address of this specific ${humanClassName}?`,\n    mainEntityOfPage: () =>\n      `Which websites describe this specific ${humanClassName}?`,\n  };\n  const simpleMapping = simpleMappings[propertyOrAncestorClassName]?.();\n  if (simpleMapping) {\n    return simpleMapping;\n  }\n\n  if ([\"of\", \"in\", \"by\"].includes(lastPropertyWord)) {\n    return `Is this ${humanClassName} ${addIndefiniteArticle(\n      propertyWords.join(\" \")\n    )} some ${getHumanEnumeration(\n      propertyTypes.map((t) => humanize(underscore(t)).toLowerCase()),\n      \"or\"\n    )}?`;\n  }\n\n  if (firstPropertyWord === \"has\") {\n    if (isBoolean) {\n      return `Does this ${humanClassName} have ${addIndefiniteArticle(\n        propertyWords.slice(1).join(\" \")\n      )}?`;\n    }\n    return `Add ${addIndefiniteArticle(propertyWords.slice(1).join(\" \"))}`;\n  }\n\n  if (firstPropertyWord === \"knows\") {\n    if (isBoolean) {\n      return `Does this ${humanClassName} know ${propertyWords\n        .slice(1)\n        .join(\" \")}?`;\n    }\n    return `Add that this ${humanClassName} knows ${propertyWords\n      .slice(1)\n      .join(\" \")}…`;\n  }\n\n  if (firstPropertyWord === \"makes\") {\n    if (isBoolean) {\n      return `Does this ${humanClassName} make ${propertyWords\n        .slice(1)\n        .join(\" \")}?`;\n    }\n    return `Add ${addIndefiniteArticle(\n      propertyWords.slice(1).join(\" \")\n    )} that this ${humanClassName} makes`;\n  }\n\n  if (isBoolean) {\n    if (firstPropertyWord === \"is\") {\n      return `Is this ${humanClassName} ${propertyWords.slice(1).join(\" \")}?`;\n    }\n    return `${capitalize(humanPropertyName)}?`;\n  }\n\n  const isPlural = singularize(firstPropertyWord) !== firstPropertyWord;\n\n  if (isPlural) {\n    return `Add ${humanPropertyName}`;\n  }\n\n  return `Add ${humanPropertyName}`;\n}\n","import { Store } from \"rdflib\";\nimport { NamedNode } from \"rdflib/lib/tf-types\";\nimport { RDF, RDFS } from \"./namespaces\";\n\nexport default function isClassNode(node: NamedNode, graph: Store) {\n  return !!graph.anyStatementMatching(node, RDF(\"type\"), RDFS(\"Class\"));\n}\n","import { Callout } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport Markdown from \"./Markdown\";\n\n/**\n * A React component that shows an error message if one of its children throw an error while\n * rendering.\n */\nclass ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { error: Error | null }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return { error };\n  }\n\n  componentDidCatch(error: unknown, info: unknown) {\n    console.error(error, info);\n  }\n\n  render() {\n    if (this.state.error) {\n      // You can render any custom fallback UI\n      return (\n        <Callout intent=\"danger\">\n          <Markdown>{String(this.state.error)}</Markdown>\n        </Callout>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { Button, Colors } from \"@blueprintjs/core\";\nimport { Classes as PopoverClasses, Popover2 } from \"@blueprintjs/popover2\";\nimport { ClassMetadataKey } from \"../../lib/rdf/getClassMetadata\";\nimport { PropertyMetadataKey } from \"../../lib/rdf/getPropertyMetadata\";\nimport { useDarkMode } from \"../core/BlueprintDarkModeContainer\";\nimport ErrorBoundary from \"../core/ErrorBoundary\";\nimport { RDFClassMetadata } from \"./RDFClassMetadata\";\nimport RDFPrefixedNodeName from \"./RDFPrefixedNodeName\";\n\n/**\n * Shows a RDF class node with a popover containing the class meta information.\n */\nexport default function RDFClassNodeButtonWithPopover({\n  name,\n  contextPrefix,\n  children,\n  visibleSections,\n}: {\n  name: string;\n  contextPrefix: string;\n  children?: React.ReactNode;\n  visibleSections?: Partial<\n    Record<ClassMetadataKey | PropertyMetadataKey, boolean>\n  >;\n}) {\n  const isDarkMode = useDarkMode();\n  const violetColor = isDarkMode ? Colors.VIOLET5 : Colors.VIOLET3;\n  const content = (\n    <ErrorBoundary>\n      <RDFClassMetadata\n        name={name}\n        contextPrefix={contextPrefix}\n        visibleSections={visibleSections}\n      />\n    </ErrorBoundary>\n  );\n\n  return (\n    <Popover2\n      lazy={true}\n      interactionKind=\"click\"\n      popoverClassName={PopoverClasses.POPOVER2_CONTENT_SIZING}\n      minimal={false}\n      placement=\"bottom\"\n      rootBoundary=\"viewport\"\n      modifiers={{\n        arrow: { enabled: true },\n        preventOverflow: { enabled: true },\n      }}\n      content={content}\n      fill={false}\n      targetTagName=\"span\"\n    >\n      <span>\n        <Button\n          minimal={true}\n          style={{\n            fontWeight: \"bold\",\n            color: violetColor,\n          }}\n        >\n          {<RDFPrefixedNodeName name={name} contextPrefix={contextPrefix} />}\n          {children}\n        </Button>\n      </span>\n    </Popover2>\n  );\n}\n","import {\n  ButtonGroup,\n  Checkbox,\n  ControlGroup,\n  ITreeNode,\n  Tag,\n  Tree,\n} from \"@blueprintjs/core\";\nimport { Store, sym } from \"rdflib\";\nimport { NamedNode } from \"rdflib/lib/tf-types\";\nimport * as React from \"react\";\nimport { getClassAncestors } from \"../../lib/rdf/getClassAncestors\";\nimport { getClassMetadataCompact } from \"../../lib/rdf/getClassMetadata\";\nimport { getClassProperties } from \"../../lib/rdf/getClassProperties\";\nimport { getPropertyMetadataCompact } from \"../../lib/rdf/getPropertyMetadata\";\nimport guessQuestionWording from \"../../lib/rdf/guessQuestionWording\";\nimport isClassNode from \"../../lib/rdf/isClassNode\";\nimport { replaceURIWithPrefix } from \"../../lib/rdf/namespaces\";\nimport RDFClassNodeButtonWithPopover from \"./RDFClassNodeButtonWithPopover\";\nimport { RDFGraphContext } from \"./RDFGraphContext\";\n\ninterface IRDFNodeWithPath {\n  node: NamedNode;\n  path: string;\n  isClass: boolean;\n}\n\n/** The label visible on the right of each tree item. */\nfunction SecondaryLabel(props: { types: string[]; contextPrefix: string }) {\n  return (\n    <ButtonGroup>\n      {props.types?.map((t) => (\n        <>\n          &nbsp;\n          <RDFClassNodeButtonWithPopover\n            name={t}\n            contextPrefix={props.contextPrefix}\n          />\n        </>\n      ))}\n    </ButtonGroup>\n  );\n}\n\n/** Recursively creates ITreeNode objects from the given model root. */\nexport function getNodeTree(\n  path: string,\n  expandedNames: Set<string>,\n  selectedNames: Set<string>,\n  node: NamedNode,\n  contextPrefix: string,\n  graph: Store,\n  transform: (\n    result: ITreeNode<IRDFNodeWithPath>,\n    isRoot: boolean\n  ) => ITreeNode<IRDFNodeWithPath>,\n  isRoot: boolean = true\n): ITreeNode<IRDFNodeWithPath> {\n  const isClass = isClassNode(node, graph);\n  const properties = getClassProperties(node, graph);\n  const ancestors =\n    path === \"\" || !isClass ? getClassAncestors(node, graph) : [];\n\n  const childNodes = ancestors\n    .reverse()\n    .concat(properties)\n    .map((node) => {\n      return getNodeTree(\n        path + \".\" + node.value,\n        expandedNames,\n        selectedNames,\n        node,\n        contextPrefix,\n        graph,\n        transform,\n        false\n      );\n    });\n\n  return transform(\n    {\n      id: path,\n      label: node.value,\n      nodeData: { node, path, isClass },\n      childNodes: childNodes.length > 0 ? childNodes : undefined,\n    },\n    isRoot\n  );\n}\n\n/** Shows a collapsible JSON tree of the survey result data for debugging. */\nexport default function RDFModelTree(props: {}) {\n  const [expandedNames, setExpandedNames] = React.useState<Set<string>>(\n    new Set([\"\"])\n  );\n\n  const [selectedNames, setSelectedNames] = React.useState<Set<string>>(\n    new Set([])\n  );\n\n  const store = React.useContext(RDFGraphContext);\n\n  const handleCheckboxChange = React.useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const checkbox = event.currentTarget;\n      const name = checkbox.dataset[\"name\"];\n      if (!name) {\n        debugger;\n        throw new Error(\"data-name must be set on checkbox\");\n      }\n      const ancestors = getClassAncestors(sym(name), store);\n      const properties = getClassProperties(sym(name), store);\n      if (checkbox.checked) {\n        properties.forEach((p) => {\n          selectedNames.add(p.value);\n        });\n        selectedNames.add(name);\n      } else {\n        ancestors.forEach((a) => selectedNames.delete(a.value));\n        properties.forEach((p) => selectedNames.delete(p.value));\n        selectedNames.delete(name);\n      }\n      setSelectedNames(new Set([...selectedNames]));\n    },\n    [selectedNames, store]\n  );\n\n  const node = sym(\"https://schema.org/Hotel\");\n  const contextPrefix = React.useMemo(() => {\n    return replaceURIWithPrefix(node.value).split(\":\")[0];\n  }, [node.value]);\n\n  const classMetadata = React.useMemo(\n    () => getClassMetadataCompact(node, store),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [store, node.value]\n  );\n\n  const className = classMetadata.get(\"label\")?.[0];\n\n  const result = React.useMemo(() => {\n    return getNodeTree(\n      \"\",\n      expandedNames,\n      selectedNames,\n      node,\n      contextPrefix,\n      store,\n      (result, isRoot: boolean) => {\n        const nodeData = result.nodeData;\n        if (!nodeData) {\n          throw new Error(\n            \"Encountered a tree node that is not associated with a node. Please fix this.\"\n          );\n        }\n\n        const isClass = isClassNode(nodeData.node, store);\n        const name = nodeData.node.value;\n        const directProperties = getClassProperties(sym(name), store);\n        const hasSelectedDirectProperties = !!directProperties.find((p) =>\n          selectedNames.has(p.value)\n        );\n        const isPartiallySelected =\n          !selectedNames.has(name) && hasSelectedDirectProperties;\n        const isSelected = selectedNames.has(nodeData.node.value);\n\n        const propertyMetadata = getPropertyMetadataCompact(\n          nodeData.node,\n          store\n        );\n\n        const propertyName = propertyMetadata.get(\"label\")?.[0];\n\n        const types = propertyMetadata.get(\"rangeIncludes\");\n\n        const label = (\n          <ControlGroup>\n            {!isRoot && (\n              <Checkbox\n                inline={true}\n                style={{ margin: \"0\", alignSelf: \"center\" }}\n                checked={isSelected}\n                aria-checked={isPartiallySelected ? \"mixed\" : isSelected}\n                indeterminate={isPartiallySelected}\n                onChange={handleCheckboxChange}\n                data-name={nodeData.node.value}\n              />\n            )}\n\n            <RDFClassNodeButtonWithPopover\n              name={nodeData.node.value}\n              contextPrefix={isRoot ? \"\" : contextPrefix}\n              visibleSections={{ rangeIncludes: false, domainIncludes: false }}\n            >\n              {propertyMetadata.get(\"supersededBy\")?.length ? (\n                <>\n                  &nbsp;<Tag intent=\"none\">superseded</Tag>\n                </>\n              ) : null}\n            </RDFClassNodeButtonWithPopover>\n\n            <div style={{ display: \"flex\", alignItems: \"center \" }}>\n              {className &&\n                propertyName &&\n                types &&\n                guessQuestionWording(\n                  isClass,\n                  className,\n                  propertyName,\n                  types?.map((t) =>\n                    replaceURIWithPrefix(t).replace(contextPrefix + \":\", \"\")\n                  )\n                )}\n            </div>\n          </ControlGroup>\n        );\n\n        const transformedResult: ITreeNode<IRDFNodeWithPath> = {\n          ...result,\n          label,\n          isExpanded: expandedNames.has(nodeData.node.value),\n          secondaryLabel: nodeData && types && (\n            <SecondaryLabel types={types} contextPrefix={contextPrefix} />\n          ),\n        };\n\n        return transformedResult;\n      }\n    );\n  }, [\n    expandedNames,\n    selectedNames,\n    node,\n    contextPrefix,\n    store,\n    handleCheckboxChange,\n    className,\n  ]);\n\n  return result ? (\n    <Tree\n      onNodeExpand={(node) => {\n        node.nodeData?.node.value &&\n          expandedNames.add(node.nodeData?.node.value);\n        setExpandedNames(new Set(expandedNames));\n      }}\n      onNodeCollapse={(node) => {\n        if (!node.nodeData?.node.value) {\n          return;\n        }\n        expandedNames.delete(node.nodeData.node.value);\n        setExpandedNames(new Set(expandedNames));\n      }}\n      contents={[result]}\n    />\n  ) : (\n    <div></div>\n  );\n}\n","import { Colors, ControlGroup, Icon, ITreeNode, Tree } from \"@blueprintjs/core\";\nimport { Tooltip2 } from \"@blueprintjs/popover2\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\nimport { XLSForm } from \"../../xlsform-simple-schema\";\nimport createLiteralExpressionFromValue from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/createLiteralExpressionFromValue\";\nimport { getJSONResult } from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/evaluateNodeAndChildren\";\nimport ODKFormulaEvaluationContext from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport {\n  getNodeAbsolutePath,\n  getNodeAbsolutePathString,\n} from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport {\n  evaluatableColumnNames,\n  ODKNode,\n} from \"../../xlsform-simple-schema/types/ODKNode\";\nimport { useDarkMode } from \"../core/BlueprintDarkModeContainer\";\nimport HighlightedExpression from \"../odk/HighlightedExpression/HighlightedODKExpression\";\nimport FieldPopoverButton from \"../survey/FieldPopoverButton/FieldPopoverButton\";\n\n/** The label visible on the right of each tree item. */\nfunction SecondaryLabel(props: { node: ODKNode; jsonResult: unknown }) {\n  const { node } = props;\n  const context = React.useContext(ODKSurveyContext);\n  const results = context.evaluationContext?.evaluationResults.get(node);\n  if (!results) {\n    return <Icon icon=\"calculator\" intent=\"none\" />;\n  }\n  const keysWithErrors = evaluatableColumnNames.filter(\n    (k) => results.get(k)?.error\n  );\n\n  const calculationResults = results?.get(\"calculation\");\n  const caption = (\n    <HighlightedExpression\n      node={node}\n      state={calculationResults?.state}\n      error={calculationResults?.error}\n      expression={createLiteralExpressionFromValue(calculationResults?.result)}\n    />\n  );\n  const error =\n    keysWithErrors.length > 0 &&\n    `Node has errors in the following columns: ${keysWithErrors\n      .map((k) => `‘${k}’`)\n      .join(\", \")}`;\n  const icon = error ? (\n    <>\n      &nbsp;\n      <Tooltip2 content={error}>\n        <Icon icon=\"error\" intent=\"danger\" title={error} htmlTitle={error} />\n      </Tooltip2>\n    </>\n  ) : null;\n  return (\n    <ControlGroup>\n      {caption}\n      {icon}\n    </ControlGroup>\n  );\n}\n\n/** Recursively creates ITreeNode objects from the given survey root. */\nexport function getNodeTree(\n  node: ODKNode,\n  context: ODKFormulaEvaluationContext,\n  jsonResult: unknown,\n  transform: (result: ITreeNode<ODKNode>) => ITreeNode<ODKNode>\n): ITreeNode<ODKNode> {\n  if (node.children.length === 0) {\n    return transform({\n      id: getNodeAbsolutePath(node, context.survey).join(\".\"),\n      label: node.row.name,\n      childNodes: [],\n      nodeData: node,\n    });\n  }\n\n  return transform({\n    id: getNodeAbsolutePath(node, context.survey).join(\".\"),\n    label: node.row.name,\n    childNodes: node.children.map((childNode) =>\n      getNodeTree(childNode, context, jsonResult, transform)\n    ),\n    nodeData: node,\n  });\n}\n\n/** Shows a collapsible JSON tree of the survey result data for debugging. */\nexport default function ResultCodeTree(props: { xlsForm: XLSForm }) {\n  const { xlsForm } = props;\n  const context = React.useContext(ODKSurveyContext);\n  const evaluationContext = context.evaluationContext;\n  const [collapsedKeys, setCollapsedKeys] = React.useState<Set<string>>(\n    new Set()\n  );\n  const isDarkMode = useDarkMode();\n  const violetColor = isDarkMode ? Colors.VIOLET5 : Colors.VIOLET3;\n\n  const result = React.useMemo(() => {\n    const jsonResult = evaluationContext?.survey\n      ? getJSONResult(evaluationContext?.survey, evaluationContext)\n      : {};\n\n    return xlsForm && evaluationContext\n      ? getNodeTree(\n          xlsForm.rootSurveyGroup,\n          evaluationContext,\n          jsonResult,\n          (result) => {\n            const node = result.nodeData;\n            if (!node) {\n              debugger;\n              throw new Error(\n                \"Encountered a tree node that is not associated with a node. Please fix this.\"\n              );\n            }\n\n            if (!evaluationContext) {\n              throw new Error(\n                \"No context defined. Please define a context before using this component.\"\n              );\n            }\n\n            const label = (\n              <FieldPopoverButton\n                node={node}\n                editable={true}\n                hasTypeIcon={true}\n                buttonStyle={{ color: violetColor }}\n              />\n            );\n\n            return {\n              ...result,\n              label,\n              key: node.row.name,\n              isExpanded: !collapsedKeys.has(\n                getNodeAbsolutePathString(node, xlsForm.rootSurveyGroup)\n              ),\n              hasCaret: !(result.childNodes?.length === 0),\n              secondaryLabel: node && (\n                <SecondaryLabel node={node} jsonResult={jsonResult} />\n              ),\n            } as ITreeNode<ODKNode>;\n          }\n        )\n      : null;\n  }, [collapsedKeys, evaluationContext, violetColor, xlsForm]);\n\n  return result ? (\n    <Tree\n      onNodeExpand={(node) => {\n        if (!node.nodeData || !evaluationContext) {\n          return;\n        }\n        collapsedKeys.delete(\n          getNodeAbsolutePathString(node.nodeData, xlsForm.rootSurveyGroup)\n        );\n        setCollapsedKeys(new Set(collapsedKeys));\n      }}\n      onNodeCollapse={(node) =>\n        node.nodeData &&\n        evaluationContext &&\n        setCollapsedKeys(\n          new Set(\n            collapsedKeys.add(\n              getNodeAbsolutePathString(node.nodeData, xlsForm.rootSurveyGroup)\n            )\n          )\n        )\n      }\n      contents={[result]}\n    />\n  ) : (\n    <div></div>\n  );\n}\n","import { Button, NonIdealState } from \"@blueprintjs/core\";\nimport { useCallback, useContext } from \"react\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\n\nexport default function NoSurveyFieldsState() {\n  const context = useContext(ODKSurveyContext);\n\n  const addNode = useCallback(() => {\n    context.onAddNode({ position: \"after\", group: false, fieldType: \"text\" });\n  }, [context]);\n\n  const addGroup = useCallback(() => {\n    context.onAddNode({ position: \"after\", group: true, fieldType: \"text\" });\n  }, [context]);\n\n  // const addLinkedDataBlock = useCallback(() => {\n  //   context.onSpliceRows(\n  //     \"survey\",\n  //     getRowsForRDFClass(\"https://schema.org/Hotel\", context.evaluationContext?.survey, xlsForm),\n  //     \"Add ‘Hotel’ Linked Data block\"\n  //   );\n  // }, [context]);\n\n  const actions = (\n    <>\n      <p>\n        <Button\n          text=\"Add a field\"\n          large={true}\n          intent=\"primary\"\n          onClick={addNode}\n        />\n      </p>\n      <p>\n        <Button text=\"Add a group of fields\" intent=\"none\" onClick={addGroup} />\n      </p>\n      <p>\n        {/* <Button\n          text=\"Add a Linked Data block\"\n          intent=\"none\"\n          onClick={addLinkedDataBlock}\n        /> */}\n      </p>\n    </>\n  );\n\n  return <NonIdealState title=\"This survey is empty.\" action={actions} />;\n}\n","import { Callout, Checkbox, Code } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  labelElement: React.ReactNode;\n  value: unknown;\n  defaultValue: unknown;\n};\n\nexport default function BooleanField(props: Props) {\n  const { value, labelElement, relevant, readonly } = props;\n  const { debug } = React.useContext(ODKSurveyContext);\n\n  //   const context = React.useContext(ODKSurveyContext);\n  if (value !== undefined && typeof value !== \"boolean\") {\n    return (\n      <Callout intent=\"warning\">\n        <h4>\n          Value must be a <Code>boolean</Code> for this field to work\n        </h4>\n      </Callout>\n    );\n  }\n  return (\n    <Checkbox\n      large={true}\n      disabled={relevant === false || readonly}\n      labelElement={debug ? undefined : labelElement}\n      onChange={props.onInputChange}\n      defaultChecked={\n        typeof props.defaultValue === \"boolean\" ? props.defaultValue : undefined\n      }\n    />\n  );\n}\n","import { Colors, ControlGroup, EditableText, Icon } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKNodeContext } from \"../../../lib/ODKNodeContext\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport evaluateNodeColumn from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/evaluateNodeColumn\";\nimport { ExpressionPanel } from \"../FieldPopoverButton/ExpressionPanel\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  labelElement: React.ReactNode;\n  value: unknown;\n  defaultValue: unknown;\n};\n\nexport default function CalculateField(props: Props) {\n  const { node } = props;\n  const { evaluationContext } = React.useContext(ODKSurveyContext);\n  const { nodeEvaluationResults } = React.useContext(ODKNodeContext);\n  const surveyContext = React.useContext(ODKSurveyContext);\n  const [editedFormula, setEditedFormula] = React.useState<string>();\n\n  const formula = node.row.calculation;\n  const value = editedFormula === undefined ? formula : editedFormula;\n  const shownValue = value?.trim() === \"\" ? undefined : value;\n\n  const nodeEvaluationResult =\n    editedFormula === undefined\n      ? nodeEvaluationResults?.get(\"calculation\")\n      : evaluationContext &&\n        evaluateNodeColumn(\n          node,\n          evaluationContext,\n          \"calculation\",\n          \"\",\n          shownValue\n        );\n\n  const onCancel = React.useCallback(() => {\n    setEditedFormula(undefined);\n  }, []);\n\n  const changeFormula = React.useCallback(\n    (newFormula?: string) => {\n      surveyContext.onChangeCell(\n        \"survey\",\n        node.rowIndex,\n        \"calculation\",\n        newFormula,\n        node\n      );\n      setEditedFormula(undefined);\n    },\n    [node, surveyContext]\n  );\n\n  return (\n    <ControlGroup vertical={true}>\n      <ControlGroup\n        style={{\n          fontFamily:\n            'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n          background: Colors.WHITE,\n          padding: \"8px\",\n          border: `1px solid ${Colors.LIGHT_GRAY2}`,\n        }}\n        fill={true}\n      >\n        <Icon icon=\"function\" style={{ marginRight: \"16px\" }} />\n        <ControlGroup fill={true}>\n          <EditableText\n            placeholder=\"Enter a literal or a formula…\"\n            onChange={setEditedFormula}\n            onCancel={onCancel}\n            onConfirm={changeFormula}\n            value={shownValue}\n            multiline={true}\n          />\n        </ControlGroup>\n      </ControlGroup>\n      <ExpressionPanel\n        node={node}\n        columnName=\"calculation\"\n        nodeEvaluationResult={nodeEvaluationResult}\n        style={{}}\n      ></ExpressionPanel>\n    </ControlGroup>\n  );\n}\n","import { compact } from \"lodash\";\nimport { SemanticError } from \"../../types/Errors\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport ODKFormulaEvaluationContext from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport { evaluateDynamicChoiceListName } from \"./evaluateDynamicChoiceListName\";\nimport { evaluateFilteredChoiceNames } from \"./evaluateFilteredChoiceNames\";\n\n/**\n * @returns An array of strings (or functions returning strings) with the names of the choices that\n * are allowed as answers in a `select_one` or `select_multiple` survey field.\n */\n\nexport default function getAllowedChoiceValues({\n  node,\n  xlsForm,\n  context,\n  key,\n}: {\n  /** The node of the `select_one` or `select_multiple` survey field. */\n  node: ODKNode;\n  /** The XLSForm in which the node is included. */\n  xlsForm: XLSForm;\n  /** The context to use if the list of allowed choices is defined using a formula. */\n  context: ODKFormulaEvaluationContext;\n  /** Key path of the node. */\n  key: string;\n}): string[] | (() => string[]) {\n  const choiceListStrings = node.typeParameters;\n  const availableListNames = Object.keys(xlsForm.choicesByName);\n  const { type } = node.row;\n  const firstList = availableListNames[0];\n  const hasAvailableChoiceList = firstList !== undefined;\n  if (!hasAvailableChoiceList) {\n    throw new SemanticError(\n      `Node \\`${key}\\` uses \\`${type}\\` as its \\`type\\`, but the ‘choices’ worksheet seems to be empty or invalid. Please define some valid choice lists first.`\n    );\n  }\n\n  const { choicesByName } = xlsForm;\n\n  let choiceListNames = compact(\n    choiceListStrings.map((choiceListString) => {\n      if (choiceListString.trim().startsWith(\"$\")) {\n        return evaluateDynamicChoiceListName(\n          choiceListString,\n          { node, xlsForm, context, key },\n          choicesByName\n        );\n      } else {\n        return choiceListString;\n      }\n    })\n  ).filter((n) => n !== undefined && n !== \"\");\n\n  const choiceObjects = choiceListNames\n    .map((n) => choicesByName[n])\n    .filter((o) => o !== undefined);\n  if (choiceObjects.length !== choiceListNames.length) {\n    throw new SemanticError(\n      `Node \\`${key}\\` (row #${\n        node.rowIndex + 2\n      }) refers to list names \\`${choiceListNames}\\`. One of these lists is either not defined in the ‘choices’ worksheet, or could not be loaded correctly. Found list names:\\n\\n${availableListNames\n        .map((n) => `\\`${n}\\``)\n        .join(\", \")}`\n    );\n  }\n\n  const choiceFilterString = node.row.choice_filter?.trim();\n  if (!choiceFilterString || choiceFilterString === \"\") {\n    return choiceObjects.flatMap((choiceObject) => Object.keys(choiceObject));\n  }\n\n  return evaluateFilteredChoiceNames(\n    choiceFilterString,\n    choiceObjects,\n    node,\n    context\n  );\n}\n","import { EvaluationError } from \"../../types/Errors\";\nimport { ChoiceRow } from \"../../types/RowTypes\";\nimport evaluateODKFormula from \"../odk-formulas/evaluation/evaluateODKFormula\";\nimport { NodeToDefinitionFunctionOptions } from \"./createLeafNodeSchemaDefinition\";\n\n/**\n * Determine the name of a referenced choice list dynamically at runtime, allowing to calculate the\n * name of the choice list by using a formula.\n */\nexport function evaluateDynamicChoiceListName(\n  /** Choice list name, or a formula that evaluates to a choice list name */\n  choiceListString: string,\n  /** Context information needed for evaluating a formula, if applicable */\n  options: NodeToDefinitionFunctionOptions,\n  /** Map of available choice lists */\n  choiceListsByName: Record<string, Record<string, ChoiceRow>>\n) {\n  const evaluationResult = evaluateODKFormula(\n    choiceListString,\n    options.context,\n    options.node\n  );\n  if (evaluationResult.state === \"error\") {\n    throw new EvaluationError(\n      `Error evaluating \\`${choiceListString}\\` to determine available selection choices.`,\n      \"invalidDynamicChoices\",\n      evaluationResult.expression,\n      options.context,\n      options.node\n    );\n  }\n  if (typeof evaluationResult.result !== \"string\") {\n    throw new EvaluationError(\n      `Evaluating \\`${choiceListString}\\` did not yield a \\`string\\`. Please ensure the referenced field returns a string.`,\n      \"invalidDynamicChoices\",\n      evaluationResult.expression,\n      options.context,\n      options.node\n    );\n  }\n  const choiceListName = evaluationResult.result;\n  if (!choiceListsByName[choiceListName]) {\n    throw new EvaluationError(\n      `Evaluating \\`${choiceListString}\\` yielded string \\`'${choiceListName}'\\`, but the according choices list does not exist. Please ensure that the field calculates an existing list name.`,\n      \"invalidDynamicChoices\",\n      evaluationResult.expression,\n      options.context,\n      options.node\n    );\n  }\n  return choiceListName;\n}\n","import { EvaluationError } from \"../../types/Errors\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport { ChoiceRow } from \"../../types/RowTypes\";\nimport evaluateExpression from \"../odk-formulas/evaluation/evaluateExpression\";\nimport ODKFormulaEvaluationContext, {\n  knownLiteralsWithoutDollarSign,\n} from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport functions from \"../odk-formulas/evaluation/ODKFormulaFunctions\";\nimport ODKFormulaLexer from \"../odk-formulas/odk-formula-parser/ODKFormulaLexer\";\nimport ODKFormulaParser from \"../odk-formulas/odk-formula-parser/ODKFormulaParser\";\nimport { Expression } from \"../odk-formulas/pratt-parser-base\";\n\n/**\n * @returns dynamically filtered choices available for a given `select_one` or `select_multiple`\n * node.\n *\n * Choices from a choice list can be filtered using a formula to make only a subset of the available\n * choices visible to the user. For this, the `choice_filter` column can contain a formula.\n *\n * The survey component checks all available choices in a list against this formula, which has to\n * return a boolean indicating if the choice should be included or not.\n *\n * The formula functions has access to extra columns defined in the `choices` worksheet to allow\n * tagging choices with meta information. To access a value in such a cell, you can refer to its\n * column name like a variable, but without the wrapping `${...}` construct.\n */\n\nexport function evaluateFilteredChoiceNames(\n  /** The condition formula specifying which choices to include in the list. */\n  choiceFilterFormula: string,\n  /** Applicable array of rows from the `choices` worksheet. */\n  choiceObjects: Record<string, ChoiceRow>[],\n  /** Node in which the choices are to be shown. */\n  node: ODKNode,\n  /** Context in which the formula should be evaluated. */\n  context: ODKFormulaEvaluationContext\n) {\n  const lexer = new ODKFormulaLexer(choiceFilterFormula);\n  const parser = new ODKFormulaParser({ tokens: lexer });\n\n  const choiceFilterExpression: Expression = parser.parseExpression();\n\n  const result = function filteredChoiceValues() {\n    return choiceObjects\n      .flatMap((choiceObject) => Object.values(choiceObject))\n      .filter((choiceRow) => {\n        const evalResult = evaluateExpression(\n          choiceFilterExpression,\n          {\n            ...context,\n            evaluateNonDollarNameFn: (options) =>\n              choiceRow[options.expression.name] ||\n              knownLiteralsWithoutDollarSign[options.expression.name] ||\n              functions[options.expression.name],\n          },\n          node\n        );\n        if (typeof evalResult !== \"boolean\") {\n          throw new EvaluationError(\n            `\\`choice_filter\\` formula did not evaluate to a \\`boolean\\`. Please ensure the formula returns a \\`boolean\\`.`,\n            \"invalidDynamicChoices\",\n            choiceFilterExpression,\n            context,\n            node\n          );\n        }\n        return evalResult;\n      })\n      .map((choiceRow) => choiceRow.name);\n  };\n  return result;\n}\n","import { Callout, Checkbox, Code, ControlGroup } from \"@blueprintjs/core\";\nimport { compact } from \"lodash\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { getNodeAbsolutePathString } from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport getAllowedChoiceValues from \"../../../xlsform-simple-schema/functions/schema-creation/getAllowedChoiceValues\";\nimport { FieldTypeButtonGroup } from \"../FieldPopoverButton/FieldTypeButtonGroup\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  value: unknown;\n};\n\nexport default function CheckboxGroupField(props: Props) {\n  const { value, node, relevant, readonly } = props;\n  const context = React.useContext(ODKSurveyContext);\n  const { language, onChangeAnswer, xlsForm } = context;\n\n  const valueIsInvalid =\n    value !== undefined &&\n    typeof value !== \"string\" &&\n    typeof value !== \"boolean\" &&\n    (!(value instanceof Array) ||\n      value.find((element) => typeof element !== \"string\"));\n\n  const choices = React.useMemo<Set<string>>(() => {\n    if (typeof value === \"string\") {\n      return new Set<string>(value === \"\" ? [] : value?.split(\" \"));\n    }\n    if (value instanceof Array || value instanceof Set) {\n      return new Set<string>(value);\n    }\n    return new Set<string>();\n  }, [value]);\n\n  const onChange = React.useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const choice = event.currentTarget.name;\n      const newChoices = new Set(choices);\n      if (event.currentTarget.checked) {\n        newChoices.add(choice);\n      } else {\n        newChoices.delete(choice);\n      }\n      onChangeAnswer(Array.from(newChoices), props);\n    },\n    [props, onChangeAnswer, choices]\n  );\n\n  if (\n    typeof language !== \"string\" ||\n    context.evaluationContext === undefined ||\n    xlsForm === undefined\n  ) {\n    return null;\n  }\n\n  if (valueIsInvalid) {\n    return (\n      <Callout intent=\"warning\">\n        <h4>\n          Value must be a <Code>string</Code> or Array of <Code>string</Code>s\n          for this field to work.\n        </h4>\n      </Callout>\n    );\n  }\n\n  if (context.debug && node.typeParameters.length === 0) {\n    return (\n      <Callout intent=\"warning\" title=\"No choice list set.\">\n        <FieldTypeButtonGroup node={node} showType={false} />\n      </Callout>\n    );\n  }\n\n  const choiceLists = compact(\n    node.typeParameters.map(\n      (choiceListName) => context.xlsForm?.choicesByName[choiceListName]\n    )\n  );\n  const key = getNodeAbsolutePathString(\n    node,\n    context.evaluationContext.survey,\n    \".\"\n  );\n  let allowedValues = getAllowedChoiceValues({\n    node,\n    xlsForm,\n    context: context.evaluationContext,\n    key,\n  });\n  if (!(allowedValues instanceof Array)) {\n    allowedValues = allowedValues();\n  }\n  const allowedValuesSet = new Set(allowedValues);\n\n  return (\n    <ControlGroup vertical={true}>\n      {choiceLists.flatMap((choiceList) => {\n        return Object.keys(choiceList).map((value) => {\n          if (!allowedValuesSet.has(value)) {\n            return null;\n          }\n          const choiceRow = choiceList[value];\n\n          const definedLabel = choiceRow?.label?.[language];\n          const shownLabel =\n            definedLabel === \"undefined\" ? choiceRow?.name : definedLabel;\n          return (\n            <Checkbox\n              disabled={relevant === false || readonly}\n              label={shownLabel}\n              checked={typeof value === \"string\" && choices.has(value)}\n              name={value}\n              inline={true}\n              large={true}\n              onChange={onChange}\n            />\n          );\n        });\n      })}\n    </ControlGroup>\n  );\n}\n","import { Callout, Code } from \"@blueprintjs/core\";\nimport { DateInput, IDateFormatProps } from \"@blueprintjs/datetime\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  labelElement: React.ReactNode;\n  value: unknown;\n  defaultValue: unknown;\n};\n\nconst jsDateFormatter: IDateFormatProps = {\n  // note that the native implementation of Date functions differs between browsers\n  formatDate: (date: Date) => date.toLocaleDateString(),\n  parseDate: (str: string) => (str.length ? new Date(str) : null),\n  placeholder: \"YYYY-MM-DD\",\n};\n\nexport default function DateField(props: Props) {\n  const { value, relevant, readonly } = props;\n  const { onChangeAnswer } = React.useContext(ODKSurveyContext);\n\n  const onChange = React.useCallback(\n    (selectedDate: Date, isUserChange: boolean) => {\n      if (isUserChange) {\n        onChangeAnswer(selectedDate, props);\n      }\n    },\n    [props, onChangeAnswer]\n  );\n\n  if (value !== undefined && !(value instanceof Date)) {\n    return (\n      <Callout intent=\"warning\">\n        <h4>\n          Value must be a <Code>Date</Code> for this field to work\n        </h4>\n      </Callout>\n    );\n  }\n\n  let defaultValue = undefined;\n  if (typeof props.defaultValue === \"string\") {\n    defaultValue = jsDateFormatter.parseDate(props.defaultValue);\n  } else if (props.defaultValue instanceof Date) {\n    defaultValue = props.defaultValue;\n  }\n\n  return (\n    <DateInput\n      {...jsDateFormatter}\n      onChange={onChange}\n      defaultValue={defaultValue || undefined}\n      disabled={relevant === false || readonly}\n    />\n  );\n}\n","import { Callout, EditableText } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { ODKNode } from \"../../../xlsform-simple-schema/types/ODKNode\";\n\nexport function EditableFieldHint({\n  node,\n  debug,\n}: {\n  node: ODKNode;\n  debug: boolean;\n}) {\n  const context = React.useContext(ODKSurveyContext);\n  const { onChangeCell, language } = context;\n\n  const [editedHintString, setEditedHintString] = React.useState<string>();\n\n  const onChangeHint = React.useCallback(\n    (value) => {\n      onChangeCell(\"survey\", node.rowIndex, \"hint\", value, node);\n      setEditedHintString(undefined);\n    },\n    [node, onChangeCell]\n  );\n\n  if (language === undefined) {\n    return null;\n  }\n\n  const hintString = node.row.hint?.[language];\n  const value = editedHintString === undefined ? hintString : editedHintString;\n  const shownValue = value?.trim() === \"\" ? undefined : value;\n  const hintElement = hintString !== undefined && hintString !== \"\" && (\n    <Callout intent=\"primary\">\n      {debug && (\n        <EditableText\n          multiline={true}\n          onChange={setEditedHintString}\n          onConfirm={onChangeHint}\n          placeholder={`Enter a hint text in ${context.languageName}…`}\n          value={shownValue}\n          minWidth={100}\n        />\n      )}\n      {!debug && hintString}\n    </Callout>\n  );\n\n  return hintElement || null;\n}\n","import { Classes, ControlGroup, EditableText } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport StyledMarkdown from \"../../../components/core/StyledMarkdown\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { getNodeAbsolutePath } from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport { FieldProps } from \"../FieldProps\";\n\n/**\n * Displays an editable field label. Supports Markdown when rendering the result.\n */\nexport function EditableFieldLabel(\n  props: FieldProps & {\n    debug: boolean;\n    minimal?: boolean;\n    children: React.ReactNode;\n    isEditable: boolean;\n  }\n) {\n  const {\n    schema,\n    schemaKey,\n    node,\n    debug,\n    relevant,\n    isEditable,\n    children,\n  } = props;\n  const context = React.useContext(ODKSurveyContext);\n  const labelString = node.row.label?.[context.language || \"English (en)\"];\n  const evaluatedLabel = schema.get(schemaKey, \"label\");\n  const { onChangeCell } = React.useContext(ODKSurveyContext);\n  const path =\n    context.evaluationContext &&\n    getNodeAbsolutePath(node, context.evaluationContext.survey).join(\"/\");\n  const [editedLabelString, setEditedLabelString] = React.useState<string>();\n\n  const onConfirmLabel = React.useCallback(\n    (text: string) => {\n      if (text === labelString || (labelString === undefined && text === \"\")) {\n        return;\n      }\n      onChangeCell(\"survey\", node.rowIndex, \"label\", text, node);\n      setEditedLabelString(undefined);\n    },\n    [labelString, node, onChangeCell]\n  );\n\n  let labelInput =\n    isEditable && debug ? (\n      <EditableText\n        onChange={setEditedLabelString}\n        onConfirm={onConfirmLabel}\n        placeholder={`Enter a title for \\`${node.row.name}\\` in ${context.languageName}…`}\n        value={\n          editedLabelString === undefined ? labelString : editedLabelString\n        }\n        minWidth={100}\n        confirmOnEnterKey={true}\n        multiline={true}\n      />\n    ) : (\n      evaluatedLabel\n    );\n\n  if (children) {\n    return (\n      <ControlGroup\n        style={{ alignItems: \"center\" }}\n        lang={context.languageCode}\n      >\n        {\n          <span\n            id={path}\n            className={relevant ? \"\" : Classes.TEXT_DISABLED}\n            style={{ flex: 1 }}\n          >\n            {debug ? (\n              labelInput\n            ) : (\n              <StyledMarkdown>{evaluatedLabel}</StyledMarkdown>\n            )}\n          </span>\n        }\n        {children}\n      </ControlGroup>\n    );\n  } else {\n    return (\n      <span\n        id={path}\n        className={relevant ? \"\" : Classes.TEXT_DISABLED}\n        style={{ flex: 1 }}\n        lang={context.languageCode}\n      >\n        {debug ? (\n          labelInput\n        ) : (\n          <StyledMarkdown style={{ display: \"inline-block\" }}>\n            {evaluatedLabel}\n          </StyledMarkdown>\n        )}\n      </span>\n    );\n  }\n}\n","/*\n\nCopyright (c) 2012 Ross Turner and contributors (https://github.com/zsinj)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nBased on code from these repositories:\n\n- https://github.com/rossturner/HTML5-ImageUploader\n- https://github.com/ericnograles/browser-image-resizer\n\nConverted to TypeScript, added some error handling, use blobs instead of data URLs.\n\n*/\n\nimport ExifReader from \"exifreader\";\n\nexport type Configuration = {\n  quality: number;\n  maxWidth: number;\n  maxHeight: number;\n  outputWidth?: number;\n  maxSize?: number;\n  scaleRatio?: number;\n  autoRotate: boolean;\n  debug: boolean;\n  mimeType: string;\n};\n\nconst DEFAULT_CONFIG: Configuration = {\n  quality: 0.5,\n  maxWidth: 800,\n  maxHeight: 600,\n  autoRotate: true,\n  debug: false,\n  mimeType: \"image/jpeg\",\n};\n\nexport function readAndCompressImage(\n  file: File,\n  userConfig: Configuration\n): Promise<Blob> {\n  return new Promise((resolve) => {\n    const img = document.createElement(\"img\");\n    const config = Object.assign({}, DEFAULT_CONFIG, userConfig);\n\n    img.src = URL.createObjectURL(file);\n    img.onload = function () {\n      if (config.autoRotate) {\n        if (config.debug)\n          console.log(\"browser-image-resizer: detecting image orientation...\");\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n          let orientation: ExifReader.NumberTag | undefined;\n          try {\n            const buffer = fileReader.result;\n            if (!(buffer instanceof ArrayBuffer)) {\n              throw new Error(\n                \"Buffer was not defined as Buffer object after reading.\"\n              );\n            }\n            const Result = ExifReader.load(buffer);\n            orientation = Result.Orientation;\n          } catch (err) {\n            console.log(\"Could not determine image orientation:\", err);\n            throw new Error(\"Could not determine image orientation.\");\n          }\n          if (config.debug) {\n            console.log(\n              \"browser-image-resizer: image orientation from EXIF tag = \" +\n                orientation\n            );\n          }\n          resolve(scaleImage(img, config, orientation?.value));\n          URL.revokeObjectURL(img.src);\n        };\n        fileReader.readAsArrayBuffer(file);\n      } else {\n        if (config.debug)\n          console.log(\n            \"browser-image-resizer: ignoring EXIF orientation tag because autoRotate is false...\"\n          );\n        resolve(scaleImage(img, config));\n        URL.revokeObjectURL(img.src);\n      }\n    };\n  });\n}\n\nasync function scaleImage(\n  img: HTMLImageElement,\n  config: Configuration,\n  orientation = 1\n): Promise<Blob> {\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  // EXIF\n  exifApplied(canvas, orientation, img);\n\n  const maxWidth = findMaxWidth(config, canvas);\n\n  while (canvas.width >= 2 * maxWidth) {\n    canvas = getHalfScaleCanvas(canvas);\n  }\n\n  if (canvas.width > maxWidth) {\n    canvas = scaleCanvasWithAlgorithm(canvas, maxWidth);\n  }\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(\n      (result) => {\n        if (result == null) {\n          reject();\n        } else {\n          resolve(result);\n        }\n      },\n      config.mimeType,\n      config.quality\n    );\n  });\n}\n\nfunction findMaxWidth(config: Configuration, canvas: HTMLCanvasElement) {\n  //Let's find the max available width for scaled image\n  let ratio = canvas.width / canvas.height;\n  let mWidth = Math.min(\n    canvas.width,\n    config.maxWidth,\n    ratio * config.maxHeight\n  );\n  if (\n    config.maxSize !== undefined &&\n    config.maxSize > 0 &&\n    config.maxSize < (canvas.width * canvas.height) / 1000\n  )\n    mWidth = Math.min(\n      mWidth,\n      Math.floor((config.maxSize * 1000) / canvas.height)\n    );\n  if (!!config.scaleRatio)\n    mWidth = Math.min(mWidth, Math.floor(config.scaleRatio * canvas.width));\n\n  if (config.debug) {\n    console.log(\n      \"browser-image-resizer: original image size = \" +\n        canvas.width +\n        \" px (width) X \" +\n        canvas.height +\n        \" px (height)\"\n    );\n    console.log(\n      \"browser-image-resizer: scaled image size = \" +\n        mWidth +\n        \" px (width) X \" +\n        Math.floor(mWidth / ratio) +\n        \" px (height)\"\n    );\n  }\n  if (mWidth <= 0) {\n    throw new Error(\"Image size is too small.\");\n  }\n\n  return mWidth;\n}\n\nfunction exifApplied(\n  canvas: HTMLCanvasElement,\n  orientation: number,\n  img: HTMLImageElement\n) {\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    return;\n  }\n\n  ctx.save();\n  let width = canvas.width;\n  let styleWidth = canvas.style.width;\n  let height = canvas.height;\n  let styleHeight = canvas.style.height;\n  if (orientation > 4) {\n    canvas.width = height;\n    canvas.style.width = styleHeight;\n    canvas.height = width;\n    canvas.style.height = styleWidth;\n  }\n  switch (orientation) {\n    case 2:\n      ctx.translate(width, 0);\n      ctx.scale(-1, 1);\n      break;\n    case 3:\n      ctx.translate(width, height);\n      ctx.rotate(Math.PI);\n      break;\n    case 4:\n      ctx.translate(0, height);\n      ctx.scale(1, -1);\n      break;\n    case 5:\n      ctx.rotate(0.5 * Math.PI);\n      ctx.scale(1, -1);\n      break;\n    case 6:\n      ctx.rotate(0.5 * Math.PI);\n      ctx.translate(0, -height);\n      break;\n    case 7:\n      ctx.rotate(0.5 * Math.PI);\n      ctx.translate(width, -height);\n      ctx.scale(-1, 1);\n      break;\n    case 8:\n      ctx.rotate(-0.5 * Math.PI);\n      ctx.translate(-width, 0);\n      break;\n  }\n  ctx.drawImage(img, 0, 0);\n  ctx.restore();\n}\n\nfunction scaleCanvasWithAlgorithm(\n  canvas: HTMLCanvasElement,\n  outputWidth: number\n) {\n  const scaledCanvas = document.createElement(\"canvas\");\n  const scale = outputWidth / canvas.width;\n\n  scaledCanvas.width = canvas.width * scale;\n  scaledCanvas.height = canvas.height * scale;\n\n  const srcImgData = canvas\n    .getContext(\"2d\")\n    ?.getImageData(0, 0, canvas.width, canvas.height);\n  if (!srcImgData) {\n    throw new Error(\n      \"Could not reduce image size (Could not get original image data).\"\n    );\n  }\n\n  const destImgData = scaledCanvas\n    .getContext(\"2d\")\n    ?.createImageData(scaledCanvas.width, scaledCanvas.height);\n  if (!destImgData) {\n    throw new Error(\n      \"Could not reduce image size (Could not get resized image data).\"\n    );\n  }\n\n  applyBilinearInterpolation(srcImgData, destImgData, scale);\n\n  scaledCanvas.getContext(\"2d\")?.putImageData(destImgData, 0, 0);\n\n  return scaledCanvas;\n}\n\nfunction getHalfScaleCanvas(canvas: HTMLCanvasElement) {\n  let halfCanvas = document.createElement(\"canvas\");\n  halfCanvas.width = canvas.width / 2;\n  halfCanvas.height = canvas.height / 2;\n\n  const ctx = halfCanvas.getContext(\"2d\");\n  if (!ctx) {\n    throw new Error(\"Could not reduce image size (<canvas> error).\");\n  }\n  ctx.drawImage(canvas, 0, 0, halfCanvas.width, halfCanvas.height);\n\n  return halfCanvas;\n}\n\nfunction applyBilinearInterpolation(\n  srcCanvasData: ImageData,\n  destCanvasData: ImageData,\n  scale: number\n) {\n  function inner(\n    f00: number,\n    f10: number,\n    f01: number,\n    f11: number,\n    x: number,\n    y: number\n  ) {\n    let un_x = 1.0 - x;\n    let un_y = 1.0 - y;\n    return f00 * un_x * un_y + f10 * x * un_y + f01 * un_x * y + f11 * x * y;\n  }\n  let i, j;\n  let iyv, iy0, iy1, ixv, ix0, ix1;\n  let idxD, idxS00, idxS10, idxS01, idxS11;\n  let dx, dy;\n  let r, g, b, a;\n  for (i = 0; i < destCanvasData.height; ++i) {\n    iyv = i / scale;\n    iy0 = Math.floor(iyv);\n    // Math.ceil can go over bounds\n    iy1 =\n      Math.ceil(iyv) > srcCanvasData.height - 1\n        ? srcCanvasData.height - 1\n        : Math.ceil(iyv);\n    for (j = 0; j < destCanvasData.width; ++j) {\n      ixv = j / scale;\n      ix0 = Math.floor(ixv);\n      // Math.ceil can go over bounds\n      ix1 =\n        Math.ceil(ixv) > srcCanvasData.width - 1\n          ? srcCanvasData.width - 1\n          : Math.ceil(ixv);\n      idxD = (j + destCanvasData.width * i) * 4;\n      // matrix to vector indices\n      idxS00 = (ix0 + srcCanvasData.width * iy0) * 4;\n      idxS10 = (ix1 + srcCanvasData.width * iy0) * 4;\n      idxS01 = (ix0 + srcCanvasData.width * iy1) * 4;\n      idxS11 = (ix1 + srcCanvasData.width * iy1) * 4;\n      // overall coordinates to unit square\n      dx = ixv - ix0;\n      dy = iyv - iy0;\n      // I let the r, g, b, a on purpose for debugging\n      r = inner(\n        srcCanvasData.data[idxS00],\n        srcCanvasData.data[idxS10],\n        srcCanvasData.data[idxS01],\n        srcCanvasData.data[idxS11],\n        dx,\n        dy\n      );\n      destCanvasData.data[idxD] = r;\n\n      g = inner(\n        srcCanvasData.data[idxS00 + 1],\n        srcCanvasData.data[idxS10 + 1],\n        srcCanvasData.data[idxS01 + 1],\n        srcCanvasData.data[idxS11 + 1],\n        dx,\n        dy\n      );\n      destCanvasData.data[idxD + 1] = g;\n\n      b = inner(\n        srcCanvasData.data[idxS00 + 2],\n        srcCanvasData.data[idxS10 + 2],\n        srcCanvasData.data[idxS01 + 2],\n        srcCanvasData.data[idxS11 + 2],\n        dx,\n        dy\n      );\n      destCanvasData.data[idxD + 2] = b;\n\n      a = inner(\n        srcCanvasData.data[idxS00 + 3],\n        srcCanvasData.data[idxS10 + 3],\n        srcCanvasData.data[idxS01 + 3],\n        srcCanvasData.data[idxS11 + 3],\n        dx,\n        dy\n      );\n      destCanvasData.data[idxD + 3] = a;\n    }\n  }\n}\n","import { ImageObject } from \"../../xlsform-simple-schema/functions/schema-creation/MediaSchemas\";\nimport { AccessibilityCloudImage } from \"./AccessibilityCloudImage\";\nimport { readAndCompressImage } from \"./ImageResizer\";\n\nconst imageResizeConfig = {\n  quality: 0.8,\n  maxWidth: 1600,\n  maxHeight: 1600,\n  autoRotate: true,\n  debug: true,\n  mimeType: \"image/jpeg\",\n};\n\nconst uncachedBaseUrl =\n  process.env.REACT_APP_ACCESSIBILITY_CLOUD_UNCACHED_BASE_URL || \"\";\nconst baseUrl = process.env.REACT_APP_ACCESSIBILITY_CLOUD_BASE_URL || \"\";\nconst appToken = process.env.REACT_APP_ACCESSIBILITY_CLOUD_APP_TOKEN;\n\nexport function getImageSourceUrl(\n  image: AccessibilityCloudImage,\n  size: number\n) {\n  return `${\n    process.env.REACT_APP_ACCESSIBILITY_CLOUD_BASE_URL || \"\"\n  }/images/scale/${image.remotePath}?fitw=${size}&fith=${size}`;\n}\n\nexport function getAccessibilityCloudImageUrl(\n  context: string,\n  objectId: string,\n  appToken: string,\n  useCache: boolean = true\n): string {\n  return `${\n    useCache ? baseUrl : uncachedBaseUrl\n  }/images.json?context=${context}&surveyResultId=${objectId}&appToken=${appToken}`;\n}\n\n/** @returns a Schema.org JSON-LD object for a given remotely stored image. */\nexport function createImageObjectFromRemoteImage(\n  image: AccessibilityCloudImage\n): ImageObject {\n  return {\n    \"@type\": \"https://schema.org/ImageObject\",\n    contentSize: String(image.contentSize),\n    contentUrl: getImageSourceUrl(image, 1600),\n    encodingFormat: \"image/jpeg\",\n    height: `${image.dimensions.height}px`,\n    width: `${image.dimensions.width}px`,\n    thumbnail: {\n      \"@type\": \"https://schema.org/ImageObject\",\n      contentUrl: getImageSourceUrl(image, 256),\n      encodingFormat: \"image/jpeg\",\n      height: `256px`,\n      width: `256px`,\n    },\n  };\n}\n\n/** @returns a Schema.org JSON-LD object for a given local File object. */\nexport function createImageObjectFromFile(file: File): ImageObject {\n  return {\n    \"@type\": \"https://schema.org/ImageObject\",\n    contentSize: String(file.size),\n    contentUrl: URL.createObjectURL(file),\n    encodingFormat: \"image/jpeg\",\n  };\n}\n\n/**\n * Uploads a photo to accessibility.cloud, returning accessibility.cloud's internal JSON\n * representation of the image.\n */\nexport async function uploadPhoto(\n  /** The survey result's ID to attach the image to. */\n  surveyResultId: string,\n  /** the image's local File object. */\n  file: File\n): Promise<AccessibilityCloudImage> {\n  const url = `${uncachedBaseUrl}/image-upload/survey-result/image?surveyResultId=${surveyResultId}&appToken=${appToken}`;\n  const resizedImage = await readAndCompressImage(file, imageResizeConfig);\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"image/jpeg\",\n    },\n    body: resizedImage,\n  });\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.error?.reason || json.error);\n  }\n\n  if (!json.success) {\n    const message = `Sorry, your upload failed: ${String(json.error)}`;\n    throw new Error(message);\n  }\n  if (!json.result) {\n    const message = \"Sorry, your upload failed: Empty server response.\";\n    throw new Error(message);\n  }\n\n  return json.result;\n}\n","import {\n  Button,\n  Card,\n  ControlGroup,\n  Elevation,\n  FileInput,\n  FormGroup,\n  InputGroup,\n  Spinner,\n} from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { uuid as getUUID } from \"uuidv4\";\nimport {\n  createImageObjectFromFile,\n  createImageObjectFromRemoteImage,\n  uploadPhoto,\n} from \"../../../lib/images/uploadPhoto\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { AppToaster } from \"../../../toaster\";\nimport { ImageObject } from \"../../../xlsform-simple-schema/functions/schema-creation/MediaSchemas\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  labelElement: React.ReactNode;\n  value: ImageObject;\n  defaultValue: unknown;\n};\n\n/** Displays the uploaded image, with an editable caption and a 'remove' button. */\nfunction ImageCard({\n  contentUrl,\n  uuid,\n  onChangeCaption,\n  onRemoveImage,\n}: {\n  contentUrl: string;\n  uuid: string;\n  onChangeCaption: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onRemoveImage: () => void;\n}) {\n  return (\n    <Card interactive={false} elevation={Elevation.ONE}>\n      {/* eslint-disable-next-line jsx-a11y/img-redundant-alt*/}\n      <img\n        src={contentUrl}\n        alt=\"The image you uploaded\"\n        style={{\n          maxWidth: \"100%\",\n          maxHeight: \"calc(40vh)\",\n          boxShadow: \"0 0 1px rgba(0, 0, 0, 0.5)\",\n          marginBottom: \"16px\",\n        }}\n      />\n      <ControlGroup fill={true}>\n        <FormGroup\n          label={`Please describe what is on this image.`}\n          labelFor={`imagecaption-${uuid}`}\n          style={{ display: \"flex\" }}\n        >\n          <InputGroup\n            id={`imagecaption-${uuid}`}\n            placeholder=\"\"\n            large={true}\n            onChange={onChangeCaption}\n            pattern=\"[\\w\\d_-]+\"\n          />\n        </FormGroup>\n      </ControlGroup>\n      <ControlGroup style={{}}>\n        <Button\n          intent=\"danger\"\n          icon=\"trash\"\n          outlined={true}\n          onClick={onRemoveImage}\n          large={true}\n        >\n          Remove image\n        </Button>\n      </ControlGroup>\n    </Card>\n  );\n}\n\nfunction showUploadingState(uuid: string) {\n  AppToaster.show(\n    {\n      message: <>Uploading image</>,\n      icon: (\n        <ControlGroup style={{ alignSelf: \"center\", marginLeft: \"8px\" }}>\n          <Spinner size={Spinner.SIZE_SMALL} />\n        </ControlGroup>\n      ),\n      timeout: 0,\n    },\n    uuid\n  );\n}\n\nfunction showPersistentErrorToast(message: string, uuid: string) {\n  AppToaster.show({ message, intent: \"danger\", timeout: 0 }, uuid);\n}\n\nexport default function FileUploadField(props: Props) {\n  const { value, schemaKey, relevant, readonly } = props;\n\n  const context = React.useContext(ODKSurveyContext);\n  const { onChangeAnswer } = context;\n  const [uuid] = React.useState(getUUID());\n\n  const onChangeCaption = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const caption = event.currentTarget.value;\n      onChangeAnswer({ ...value, caption }, props);\n    },\n    [onChangeAnswer, props, value]\n  );\n\n  const onRemoveImage = React.useCallback(() => {\n    onChangeAnswer(undefined, props);\n  }, [onChangeAnswer, props]);\n\n  const onInputChange = React.useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const file = event.currentTarget.files?.[0];\n      if (!file) {\n        onRemoveImage();\n        return;\n      }\n\n      showUploadingState(uuid);\n\n      onChangeAnswer(createImageObjectFromFile(file), props);\n\n      uploadPhoto(uuid, file)\n        .then((response) => {\n          onChangeAnswer(createImageObjectFromRemoteImage(response), props);\n          AppToaster.show(\n            { message: \"Upload successful!\", intent: \"success\", timeout: 5000 },\n            uuid\n          );\n        })\n        .catch((reason) => {\n          debugger;\n          const message = `Sorry, your upload failed: ${reason}`;\n          console.error(message);\n          showPersistentErrorToast(message, uuid);\n          onRemoveImage();\n        });\n    },\n    [uuid, onChangeAnswer, props, onRemoveImage]\n  );\n\n  const image = value && (\n    <ImageCard\n      {...{\n        contentUrl: value.contentUrl,\n        onChangeCaption,\n        onRemoveImage,\n        uuid,\n      }}\n    />\n  );\n\n  return (\n    <>\n      {!value && (\n        <FileInput\n          id={schemaKey}\n          disabled={relevant === false || readonly}\n          large={true}\n          onInputChange={onInputChange}\n          inputProps={{ multiple: false, accept: \"image/jpeg, image/png\" }}\n        />\n      )}\n\n      {image}\n    </>\n  );\n}\n","import SimpleSchema, { SchemaDefinition } from \"simpl-schema\";\n\n/**\n * The geographic coordinates of a place or event.\n * @see https://schema.org/GeoCoordinates\n */\nexport interface SchemaOrgPointGeometry {\n  \"@type\": \"https://schema.org/GeoCoordinates\";\n  latitude: number;\n  longitude: number;\n}\n\nexport function assertSchemaOrgPointGeometry(\n  point: unknown\n): asserts point is SchemaOrgPointGeometry | undefined {\n  if (point === undefined) {\n    return;\n  }\n  const schema = new SimpleSchema(getSchemaOrgPointGeometrySchema(\"point\"));\n  schema.validate({ point });\n}\n\n/**\n * A line string as Schema.org type.\n *\n * @see https://schema.org/GeoShape\n */\n\nexport interface SchemaOrgLineStringGeometry {\n  \"@type\": \"https://schema.org/GeoShape\";\n  line: string;\n}\n\n/**\n * A polygon string as Schema.org type.\n *\n * @see https://schema.org/GeoShape\n */\nexport interface SchemaOrgPolygonGeometry {\n  \"@type\": \"https://schema.org/GeoShape\";\n  polygon: string;\n}\n\n/** @returns a SimpleSchema definition for a Schema.org point geometry. */\nexport const getSchemaOrgPointGeometrySchema = (\n  key: string\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n  },\n  [`${key}.@type`]: {\n    type: String,\n    allowedValues: [\"https://schema.org/GeoCoordinates\"],\n    defaultValue: \"https://schema.org/GeoCoordinates\",\n  },\n  [`${key}.latitude`]: {\n    type: Number,\n  },\n  [`${key}.longitude`]: {\n    type: Number,\n  },\n});\n\n/** @returns a SimpleSchema definition for a Schema.org line string geometry. */\nexport const getSchemaOrgLineStringGeometrySchema = (\n  key: string\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n  },\n  [`${key}.@type`]: {\n    type: String,\n    allowedValues: [\"https://schema.org/GeoShape\"],\n    defaultValue: \"https://schema.org/GeoShape\",\n  },\n  [`${key}.line`]: {\n    type: String,\n  },\n});\n\n/** @returns a SimpleSchema definition for a Schema.org polygon geometry. */\nexport const getSchemaOrgPolygonGeometrySchema = (\n  key: string\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n  },\n  [`${key}.@type`]: {\n    type: String,\n    allowedValues: [\"https://schema.org/GeoShape\"],\n    defaultValue: \"https://schema.org/GeoShape\",\n  },\n  [`${key}.polygon`]: {\n    type: String,\n  },\n});\n\nexport type SchemaoOrgGeometry =\n  | SchemaOrgPointGeometry\n  | SchemaOrgLineStringGeometry\n  | SchemaOrgPolygonGeometry;\n","import { Colors, ControlGroup, NumericInput } from \"@blueprintjs/core\";\nimport { throttle } from \"lodash\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport * as React from \"react\";\nimport ReactMapGL, { GeolocateControl, ViewportProps } from \"react-map-gl\";\nimport styled from \"styled-components\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MapboxWorker from \"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\";\nimport { alpha } from \"../../../lib/colors\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport {\n  assertSchemaOrgPointGeometry,\n  SchemaOrgPointGeometry,\n} from \"../../../xlsform-simple-schema/functions/schema-creation/geometry/SchemaOrgGeometry\";\nimport { useDarkMode } from \"../../core/BlueprintDarkModeContainer\";\nimport { FieldProps } from \"../FieldProps\";\n\n(mapboxgl as any).workerClass = MapboxWorker;\nif (!process.env.REACT_APP_MAPBOX_ACCESS_TOKEN) {\n  throw new Error(\n    `Please define the REACT_APP_MAPBOX_ACCESS_TOKEN environment variable.`\n  );\n}\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n\nconst FieldContainer = styled.section`\n  .mapboxgl-ctrl-group.geolocateControl {\n    display: inline-block;\n    margin: 8px;\n  }\n\n  > footer {\n    width: 100%;\n    margin-top: 8px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    label {\n      margin: 0.5rem;\n    }\n    input {\n      width: 8rem !important;\n    }\n  }\n`;\n\nconst MapContainer = styled.section`\n  width: 100%;\n  height: 500px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  overflow: hidden;\n  position: relative;\n`;\n\nconst CenteredPoint = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 15px;\n  height: 15px;\n  border: 3px solid white;\n  border-radius: 10px;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2), 0 0 1px rgba(0, 0, 0, 0.4);\n  background-color: ${Colors.FOREST3};\n`;\n\nfunction getPointForCoordinates(\n  coordinates: [number, number]\n): SchemaOrgPointGeometry {\n  // return {\n  //   type: \"Point\",\n  //   coordinates: [Number(coordinates[0].toFixed(6)), Number(coordinates[1].toFixed(6))],\n  // };\n  return {\n    \"@type\": \"https://schema.org/GeoCoordinates\",\n    longitude: Number(coordinates[0].toFixed(6)),\n    latitude: Number(coordinates[1].toFixed(6)),\n  };\n}\n\nfunction getLatitudeFromValue(value: SchemaOrgPointGeometry) {\n  return value.latitude;\n}\n\nfunction getLongitudeFromValue(value: SchemaOrgPointGeometry) {\n  return value.longitude;\n}\n\ntype Props = FieldProps & {\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  labelElement: React.ReactNode;\n  value: unknown;\n  defaultValue: unknown;\n};\n\nfunction GeoPointField(props: Props) {\n  const { value } = props;\n  assertSchemaOrgPointGeometry(value);\n\n  const context = React.useContext(ODKSurveyContext);\n  const { onChangeAnswer } = context;\n\n  const [viewport, setViewport] = React.useState<\n    Partial<ViewportProps> & { width: number; height: number }\n  >({\n    width: 100,\n    height: 100,\n    latitude: (value && getLatitudeFromValue(value)) || 37.7577,\n    longitude: (value && getLongitudeFromValue(value)) || -122.4376,\n    zoom: 10,\n  });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onChangeAnswerDebounced = React.useCallback(\n    throttle((value: unknown, props: FieldProps) => {\n      onChangeAnswer(value, props);\n    }, 500),\n    [onChangeAnswer]\n  );\n\n  const setViewportCallback = React.useCallback(\n    (viewState, interactionState) => {\n      setViewport({ ...viewport, ...viewState });\n      if (!viewport.longitude || !viewport.latitude) {\n        return;\n      }\n      const newPoint = getPointForCoordinates([\n        viewport.longitude,\n        viewport.latitude,\n      ]);\n      onChangeAnswerDebounced(newPoint, props);\n    },\n    [viewport, onChangeAnswerDebounced, props]\n  );\n\n  const changeLatitude = React.useCallback(\n    (newLatitudeNumber: number, newLatitudeString: string) => {\n      if (!viewport.longitude || !viewport.latitude) {\n        return;\n      }\n      setViewport({ ...viewport, latitude: newLatitudeNumber });\n      const newPoint = getPointForCoordinates([\n        viewport.longitude,\n        newLatitudeNumber,\n      ]);\n      onChangeAnswer(newPoint, props);\n    },\n    [viewport, onChangeAnswer, props]\n  );\n\n  const changeLongitude = React.useCallback(\n    (newLongitudeNumber: number, newLongitudeString: string) => {\n      if (!viewport.longitude || !viewport.latitude) {\n        return;\n      }\n      setViewport({ ...viewport, longitude: newLongitudeNumber });\n      const newPoint = getPointForCoordinates([\n        newLongitudeNumber,\n        viewport.latitude,\n      ]);\n      onChangeAnswer(newPoint, props);\n    },\n    [viewport, onChangeAnswer, props]\n  );\n\n  const isDarkMode = useDarkMode();\n  const latitude = value && getLatitudeFromValue(value);\n  const longitude = value && getLongitudeFromValue(value);\n  const inputs = (\n    <FieldContainer>\n      <MapContainer>\n        <ReactMapGL\n          longitude={longitude}\n          latitude={latitude}\n          {...viewport}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\n          width=\"100%\"\n          height=\"100%\"\n          onViewportChange={setViewportCallback}\n          mapStyle={\n            isDarkMode\n              ? \"mapbox://styles/mapbox/streets-dark-v10\"\n              : \"mapbox://styles/mapbox/streets-v10\"\n          }\n        >\n          <GeolocateControl\n            style={{\n              margin: \"8px\",\n              boxShadow: `0 2px 2px ${alpha(\n                Colors.DARK_GRAY4,\n                0.2\n              )}, 0 2px 10px ${alpha(Colors.DARK_GRAY4, 0.3)}`,\n            }}\n            className=\"geolocateControl\"\n            positionOptions={{ enableHighAccuracy: true }}\n            trackUserLocation={false}\n            showUserLocation={true}\n          />\n        </ReactMapGL>\n        <CenteredPoint />\n      </MapContainer>\n\n      {context.debug && (\n        <ControlGroup style={{ alignItems: \"center\", margin: \"8px 0\" }}>\n          <ControlGroup vertical={true}>\n            <label htmlFor={`${props.schemaKey}-latitude`}>{\"Latitude\"}</label>\n            <NumericInput\n              style={{ width: \"8em\" }}\n              stepSize={0.001}\n              minorStepSize={0.0001}\n              majorStepSize={0.01}\n              min={-90}\n              max={90}\n              value={latitude}\n              asyncControl={true}\n              disabled={props.readonly}\n              id={`${props.schemaKey}-latitude`}\n              onValueChange={changeLatitude}\n            />\n          </ControlGroup>\n\n          <ControlGroup vertical={true} style={{ marginLeft: \"16px\" }}>\n            <label htmlFor={`${props.schemaKey}-longitude`}>\n              {\"Longitude\"}\n            </label>\n            <NumericInput\n              style={{ width: \"8em\" }}\n              stepSize={0.001}\n              minorStepSize={0.0001}\n              majorStepSize={0.01}\n              min={-180}\n              max={180}\n              asyncControl={true}\n              value={longitude}\n              disabled={props.readonly}\n              id={`${props.schemaKey}-longitude`}\n              onValueChange={changeLongitude}\n            />\n          </ControlGroup>\n        </ControlGroup>\n      )}\n    </FieldContainer>\n  );\n\n  return inputs;\n}\n\nexport default GeoPointField;\n","import { Callout, Code, NumericInput } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  labelElement: React.ReactNode;\n  value: unknown;\n  defaultValue: unknown;\n};\n\n/** An input field for a decimal or integer number. */\nexport default function NumberField(props: Props) {\n  const { value, schemaKey, relevant, readonly } = props;\n  const { onChangeAnswer } = React.useContext(ODKSurveyContext);\n  const onChange = React.useCallback(\n    (valueAsNumber: number) => {\n      onChangeAnswer(valueAsNumber, props);\n    },\n    [props, onChangeAnswer]\n  );\n\n  if (\n    value !== undefined &&\n    typeof value !== \"string\" &&\n    typeof value !== \"number\"\n  ) {\n    return (\n      <Callout intent=\"warning\">\n        <h4>\n          Value must be a <Code>number</Code> for this field to work.\n        </h4>\n      </Callout>\n    );\n  }\n\n  return (\n    <NumericInput\n      id={schemaKey}\n      disabled={relevant === false || readonly}\n      name={schemaKey}\n      large={true}\n      allowNumericCharactersOnly={false}\n      placeholder=\"Enter a number…\"\n      value={value}\n      onValueChange={onChange}\n      defaultValue={\n        typeof props.defaultValue === \"number\" ||\n        typeof props.defaultValue === \"string\"\n          ? props.defaultValue\n          : undefined\n      }\n    />\n  );\n}\n","import {\n  Callout,\n  Code,\n  ControlGroup,\n  H4,\n  Radio,\n  RadioGroup,\n} from \"@blueprintjs/core\";\nimport { FLEX_EXPANDER } from \"@blueprintjs/core/lib/esm/common/classes\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { getNodeAbsolutePathString } from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport getAllowedChoiceValues from \"../../../xlsform-simple-schema/functions/schema-creation/getAllowedChoiceValues\";\nimport { FieldTypeButtonGroup } from \"../FieldPopoverButton/FieldTypeButtonGroup\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  value: unknown;\n  defaultValue: unknown;\n};\n\nexport default function RadioGroupField(props: Props) {\n  const { value, onInputChange, node, relevant, readonly } = props;\n  const context = React.useContext(ODKSurveyContext);\n  const { language, xlsForm, evaluationContext } = context;\n\n  if (\n    value !== undefined &&\n    typeof value !== \"string\" &&\n    typeof value !== \"boolean\"\n  ) {\n    return (\n      <Callout intent=\"warning\">\n        <h4>\n          Value must be a <Code>string</Code> for this field to work\n        </h4>\n      </Callout>\n    );\n  }\n\n  if (\n    language === undefined ||\n    xlsForm === undefined ||\n    context === undefined ||\n    evaluationContext === undefined\n  ) {\n    return null;\n  }\n\n  if (context.debug && node.typeParameters.length === 0) {\n    return (\n      <Callout intent=\"warning\">\n        <ControlGroup fill={true}>\n          <H4>No choice list set.</H4>\n          <div className={FLEX_EXPANDER} />\n          <FieldTypeButtonGroup node={node} showType={false} />\n        </ControlGroup>\n      </Callout>\n    );\n  }\n\n  const choiceLists = node.typeParameters.map(\n    (choiceListName) => context.xlsForm?.choicesByName[choiceListName]\n  );\n  const key = getNodeAbsolutePathString(node, evaluationContext.survey, \".\");\n  let allowedValues = getAllowedChoiceValues({\n    node,\n    xlsForm,\n    context: evaluationContext,\n    key,\n  });\n  if (!(allowedValues instanceof Array)) {\n    allowedValues = allowedValues();\n  }\n  const allowedValuesSet = new Set(allowedValues);\n\n  return (\n    <RadioGroup\n      onChange={onInputChange}\n      selectedValue={\n        value !== undefined && allowedValuesSet.has(String(value))\n          ? String(value)\n          : undefined\n      }\n      inline={true}\n      disabled={relevant === false || readonly}\n    >\n      {choiceLists.flatMap(\n        (choiceList) =>\n          choiceList &&\n          Object.keys(choiceList)\n            .flatMap((choiceName) => {\n              if (!allowedValuesSet.has(choiceName)) {\n                return null;\n              }\n              const choiceRow =\n                choiceName === undefined ? undefined : choiceList?.[choiceName];\n              const definedLabel = choiceRow?.label?.[language];\n              const shownLabel =\n                definedLabel === \"undefined\" ? choiceRow?.name : definedLabel;\n              return (\n                <Radio\n                  key={choiceRow?.name}\n                  label={shownLabel}\n                  value={choiceRow?.name}\n                  inline={true}\n                  large={true}\n                />\n              );\n            })\n            .filter(Boolean)\n      )}\n    </RadioGroup>\n  );\n}\n","import { Callout, Code, InputGroup } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { FieldProps } from \"../FieldProps\";\n\ntype Props = FieldProps & {\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  labelElement: React.ReactNode;\n  value: unknown;\n  defaultValue: unknown;\n};\n\nexport default function TextField(props: Props) {\n  const { value, schemaKey, relevant, readonly } = props;\n\n  if (\n    value !== undefined &&\n    typeof value !== \"string\" &&\n    typeof value !== \"number\"\n  ) {\n    return (\n      <Callout intent=\"warning\">\n        <h4>\n          Value must be a <Code>string</Code> or <Code>number</Code> for this\n          field to work.\n        </h4>\n      </Callout>\n    );\n  }\n\n  return (\n    <InputGroup\n      id={schemaKey}\n      disabled={relevant === false || readonly}\n      name={schemaKey}\n      placeholder=\"\"\n      large={true}\n      onChange={props.onInputChange}\n      defaultValue={\n        typeof props.defaultValue === \"string\" ? props.defaultValue : undefined\n      }\n    />\n  );\n}\n","import { Callout, FormGroup } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport ErrorBoundary from \"../../../components/core/ErrorBoundary\";\nimport { ODKNodeContext } from \"../../../lib/ODKNodeContext\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { internalFieldTypes } from \"../../../xlsform-simple-schema/field-types/internalFieldTypes\";\nimport FieldPopoverButton from \"../FieldPopoverButton/FieldPopoverButton\";\nimport { FieldProps } from \"../FieldProps\";\nimport BooleanField from \"./BooleanField\";\nimport CalculateField from \"./CalculateField\";\nimport CheckboxGroupField from \"./CheckboxGroupField\";\nimport DateField from \"./DateField\";\nimport { EditableFieldHint } from \"./EditableFieldHint\";\nimport { EditableFieldLabel } from \"./EditableFieldLabel\";\nimport FileUploadField from \"./FileUploadField\";\nimport GeoPointField from \"./GeoPointField\";\nimport NumberField from \"./NumberField\";\nimport RadioGroupField from \"./RadioGroupField\";\nimport TextField from \"./TextField\";\n\ntype AutoFieldProps = FieldProps & {\n  value: any;\n  defaultValue: unknown;\n  onInputChange: (event: React.FormEvent<HTMLInputElement>) => void;\n  labelElement: JSX.Element;\n};\n\nexport function AutoField(props: AutoFieldProps) {\n  const { node } = props;\n\n  const FieldComponentMap: Record<\n    string,\n    React.FunctionComponent<AutoFieldProps>\n  > = {\n    integer: NumberField,\n    decimal: NumberField,\n    range: NumberField,\n    text: TextField,\n    select_one: RadioGroupField,\n    select_one_from_file: RadioGroupField,\n    select_multiple: CheckboxGroupField,\n    select_multiple_from_file: CheckboxGroupField,\n    rank: TextField,\n    note: TextField,\n    geopoint: GeoPointField,\n    geotrace: TextField,\n    geoshape: TextField,\n    date: DateField,\n    time: DateField,\n    datetime: DateField,\n    image: FileUploadField,\n    audio: FileUploadField,\n    video: FileUploadField,\n    file: FileUploadField,\n    barcode: TextField,\n    calculate: CalculateField,\n    acknowledge: BooleanField,\n    hidden: TextField,\n    \"xml-external\": TextField,\n    start: DateField,\n    end: DateField,\n    today: DateField,\n    deviceid: TextField,\n    simserial: TextField,\n    subscriberid: TextField,\n    phonenumber: TextField,\n    username: TextField,\n    email: TextField,\n    audit: TextField,\n  };\n\n  const FieldComponent = FieldComponentMap[node.type] || TextField;\n\n  return <FieldComponent {...props} />;\n}\n\nexport default function AnyValueField(props: FieldProps) {\n  const { node } = props;\n  const isBoolean = props.node.type === \"acknowledge\";\n  const context = React.useContext(ODKSurveyContext);\n  const { language, debug, evaluationContext, onChangeAnswer } = context;\n\n  const onInputChange = React.useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      const target = event.currentTarget;\n      const values: Record<string, unknown> = {\n        checkbox: target.checked,\n        date: target.valueAsDate,\n        number: target.valueAsNumber,\n        text: target.value,\n        radio: target.value,\n      };\n      const value = values[target.type];\n      onChangeAnswer(value, props);\n    },\n    [onChangeAnswer, props]\n  );\n\n  if (!language || !evaluationContext) {\n    return null;\n  }\n\n  const isInternalField = internalFieldTypes.includes(node.type);\n  if (isInternalField && !context.debug) {\n    return null;\n  }\n  const detailsButton = (\n    <FieldPopoverButton {...{ ...props }} editable={true} />\n  );\n\n  const labelElement = (\n    <EditableFieldLabel {...{ ...props, debug, isEditable: !isInternalField }}>\n      {debug && detailsButton}\n    </EditableFieldLabel>\n  );\n\n  const nodeEvaluationResults = context.evaluationContext?.evaluationResults.get(\n    node\n  );\n\n  const autoFieldProps = {\n    ...props,\n    labelElement,\n    onInputChange,\n    value: nodeEvaluationResults?.get(\"calculation\")?.result,\n    defaultValue: node.row.default,\n  };\n\n  let input = <AutoField {...autoFieldProps} />;\n\n  if (node.type === \"note\") {\n    return (\n      <Callout intent=\"primary\" style={{ marginBottom: \"16px\" }}>\n        {labelElement}\n      </Callout>\n    );\n  }\n\n  return (\n    <ODKNodeContext.Provider value={{ node, nodeEvaluationResults }}>\n      <FormGroup\n        label={!debug && isBoolean ? undefined : labelElement}\n        labelFor={node.row.name}\n      >\n        <ErrorBoundary>\n          {input}\n          <EditableFieldHint {...{ node, debug }} />\n        </ErrorBoundary>\n      </FormGroup>\n    </ODKNodeContext.Provider>\n  );\n}\n","import {\n  ControlGroup,\n  EditableText,\n  H1,\n  H2,\n  H3,\n  H4,\n  H5,\n} from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { ODKSurveyContext } from \"../../../lib/ODKSurveyContext\";\nimport { getNodeAbsolutePath } from \"../../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport { isNodeRelevant } from \"../../../xlsform-simple-schema/types/ODKNode\";\nimport FieldPopoverButton from \"../FieldPopoverButton/FieldPopoverButton\";\nimport { FieldProps } from \"../FieldProps\";\nimport { SurveyField } from \"../SurveyField\";\nimport { EditableFieldHint } from \"./EditableFieldHint\";\n\nexport default function FieldGroup(props: FieldProps) {\n  const { onChangeCell } = React.useContext(ODKSurveyContext);\n  const { schema, schemaKey, node } = props;\n  const isComplexType = [\n    \"image\",\n    \"audio\",\n    \"video\",\n    \"geopoint\",\n    \"geotrace\",\n    \"geoshape\",\n  ].includes(node.type);\n  const subKeys = isComplexType ? [] : schema.objectKeys(schemaKey);\n  const context = React.useContext(ODKSurveyContext);\n  const { debug } = context;\n\n  const labelString = schema.get(schemaKey, \"label\");\n  const path =\n    context.evaluationContext &&\n    getNodeAbsolutePath(node, context.evaluationContext.survey).join(\"/\");\n\n  const [editedLabelString, setEditedLabelString] = React.useState<string>();\n\n  const onChangeLabel = React.useCallback(\n    (text: string) => {\n      if (text === labelString || (labelString === undefined && text === \"\")) {\n        return;\n      }\n      onChangeCell(\"survey\", node.rowIndex, \"label\", text, node);\n      setEditedLabelString(undefined);\n    },\n    [node, onChangeCell, labelString]\n  );\n\n  const labelInput = node !== context.evaluationContext?.survey && (\n    <EditableText\n      multiline={true}\n      onChange={setEditedLabelString}\n      onConfirm={onChangeLabel}\n      confirmOnEnterKey={true}\n      placeholder={`Enter a title for \\`${node.row.name}\\`in ${context.languageName}…`}\n      value={editedLabelString === undefined ? labelString : editedLabelString}\n      minWidth={100}\n    />\n  );\n\n  const HeadingClass = [H1, H2, H3, H4, H5][node.indentationLevel] || H5;\n\n  const isRelevant = isNodeRelevant(node, context.evaluationContext);\n  if (!isRelevant && !debug) {\n    return null;\n  }\n  return (\n    <ControlGroup\n      vertical={true}\n      style={{ padding: `${6 / (node.indentationLevel + 1)}rem 0` }}\n    >\n      <ControlGroup\n        fill={false}\n        style={{\n          alignItems: \"baseline\",\n        }}\n      >\n        <HeadingClass\n          style={{\n            flex: 1,\n          }}\n          id={path}\n        >\n          {debug ? <>{labelInput}</> : labelString}\n        </HeadingClass>\n        {debug && node !== context.evaluationContext?.survey && (\n          <FieldPopoverButton {...{ ...props }} editable={true} />\n        )}\n      </ControlGroup>\n      <EditableFieldHint {...{ node, debug }} />\n      {subKeys.map((subkey) => (\n        <SurveyField\n          key={subkey}\n          schemaKey={[schemaKey, subkey].join(\".\")}\n          relevant={props.relevant}\n          readonly={props.readonly}\n        />\n      ))}\n    </ControlGroup>\n  );\n}\n","import { Callout } from \"@blueprintjs/core\";\nimport * as React from \"react\";\nimport { FieldProps } from \"../FieldProps\";\n\n/** Displays a 'begin repeat' group of fields. */\nexport default function RepeatField(props: FieldProps) {\n  return (\n    <Callout intent={\"warning\"}>\n      <h4>Object arrays are not implemented yet.</h4>\n    </Callout>\n  );\n}\n","import {\n  Callout,\n  Classes,\n  Code,\n  Colors,\n  H4,\n  MenuDivider,\n} from \"@blueprintjs/core\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { alpha } from \"../../lib/colors\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\nimport { findNodeByPathRelativeToScope } from \"../../xlsform-simple-schema/functions/odk-formulas/evaluation/XPath\";\nimport AddFieldOrGroupMenuItem from \"./AddFieldMenuItem\";\nimport { useNodeActionMenuItems } from \"./FieldPopoverButton/NodeActionMenuItems\";\nimport { FieldProps } from \"./FieldProps\";\nimport AnyValueField from \"./fields/AnyValueField\";\nimport FieldGroup from \"./fields/FieldGroup\";\nimport RepeatField from \"./fields/RepeatField\";\n\nconst Stripe = styled.div`\n  &:after {\n    content: \"\";\n    position: absolute;\n    left: 0px;\n    width: 1px;\n    bottom: 0;\n    top: 0;\n    background-color: transparent;\n  }\n`;\n\nconst CornerButton = styled.div`\n  position: absolute;\n  left: 0px;\n  height: 44px;\n  width: 44px;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nconst TopCornerButton = styled(CornerButton)`\n  top: 0;\n  &:hover {\n    background: linear-gradient(\n      135deg,\n      ${alpha(Colors.BLUE3, 0.3)},\n      ${alpha(Colors.BLUE3, 0.0)} 50%\n    );\n  }\n`;\n\nconst BottomCornerButton = styled(CornerButton)`\n  bottom: 0;\n  &:hover {\n    background: linear-gradient(\n      45deg,\n      ${alpha(Colors.BLUE3, 0.3)},\n      ${alpha(Colors.BLUE3, 0.0)} 50%\n    );\n  }\n`;\n\nconst Hoverable = styled.div`\n  padding: 16px 16px 8px;\n  margin: 0;\n  position: relative;\n\n  &:not(:hover):not(:focus-within) {\n    ${Stripe} {\n      background: none;\n    }\n  }\n  &:hover,\n  :focus-within {\n    background: ${alpha(Colors.BLUE3, 0.03)};\n\n    ${Stripe} {\n      &:after {\n        background: ${alpha(Colors.BLUE3, 0.1)};\n      }\n    }\n  }\n`;\n\nexport function SurveyField(props: {\n  schemaKey: string;\n  relevant?: boolean;\n  readonly?: boolean;\n}) {\n  const { schemaKey } = props;\n  const { schema, evaluationContext: context, debug } = React.useContext(\n    ODKSurveyContext\n  );\n\n  const schemaKeyPath = [\".\", ...schemaKey.replace(/\\.\\$/g, \"\").split(\".\")];\n\n  const node =\n    context?.survey &&\n    findNodeByPathRelativeToScope(schemaKeyPath, context.survey);\n\n  const { nodeActionMenuItems, nodeActionDialogs } = useNodeActionMenuItems(\n    node instanceof Array ? undefined : node\n  );\n\n  if (!context || !schema) {\n    return null;\n  }\n\n  if (node instanceof Array) {\n    if (!debug) {\n      return null;\n    }\n    return (\n      <Callout intent=\"warning\">\n        <H4>\n          Found multiple nodes with path <Code>{schemaKeyPath.join(\"/\")}</Code>.\n          This should not happen.\n        </H4>\n      </Callout>\n    );\n  }\n\n  if (!node) {\n    if (!debug) {\n      return null;\n    }\n    return (\n      <Callout intent=\"warning\">\n        <H4>\n          No node found for{\" \"}\n          <Code>{schemaKeyPath[schemaKeyPath.length - 1]}</Code>\n        </H4>\n        {/* <p></p> */}\n      </Callout>\n    );\n  }\n\n  let relevant = props.relevant;\n  if (typeof relevant !== \"boolean\" || relevant === true) {\n    const evaluationResult = context.evaluationResults\n      .get(node)\n      ?.get(\"relevant\");\n\n    if (typeof evaluationResult?.result === \"boolean\") {\n      relevant = evaluationResult.result;\n    } else if (evaluationResult?.result === null) {\n      relevant = false;\n    } else {\n      relevant = true;\n    }\n  }\n\n  let readonly = false;\n  if (typeof props.readonly !== \"undefined\" || props.readonly === true) {\n    const evaluationResult = context.evaluationResults\n      .get(node)\n      ?.get(\"readonly\");\n    readonly =\n      typeof evaluationResult?.result === \"boolean\"\n        ? evaluationResult.result\n        : props.readonly;\n  }\n  // TODO: Add warning for evaluation failure\n\n  const fieldProps: FieldProps = {\n    schema,\n    node,\n    schemaKey,\n    relevant,\n    readonly,\n  };\n\n  if (!debug && !relevant) {\n    return null;\n  }\n\n  let field;\n\n  switch (node.type) {\n    case undefined:\n    case \"\":\n      field = <FieldGroup {...fieldProps} />;\n      break;\n    case \"begin_group\":\n      field = <FieldGroup {...fieldProps} />;\n      break;\n    case \"begin_repeat\":\n      field = <RepeatField {...fieldProps} />;\n      break;\n    default:\n      field = <AnyValueField {...fieldProps} />;\n      break;\n  }\n\n  if (debug && node !== context.survey) {\n    return (\n      <>\n        {nodeActionDialogs}\n        {/* <ContextMenu2 content={nodeActionMenu}> */}\n        <Hoverable>\n          <Stripe />\n\n          <Popover2\n            content={\n              <ul className={Classes.LIST_UNSTYLED}>\n                <AddFieldOrGroupMenuItem\n                  icon=\"arrow-up\"\n                  node={node}\n                  position=\"before\"\n                  group={false}\n                />\n                <AddFieldOrGroupMenuItem\n                  icon=\"arrow-up\"\n                  node={node}\n                  position=\"before\"\n                  group={true}\n                />\n                <MenuDivider />\n                {nodeActionMenuItems}\n              </ul>\n            }\n            lazy={true}\n            interactionKind=\"click\"\n            placement=\"left\"\n            renderTarget={({ isOpen, ref, ...targetProps }) => (\n              <TopCornerButton {...targetProps} ref={ref} />\n            )}\n            hoverOpenDelay={0}\n            hoverCloseDelay={0}\n          />\n\n          <Popover2\n            content={\n              <ul className={Classes.LIST_UNSTYLED}>\n                {nodeActionMenuItems}\n                <MenuDivider />\n                <AddFieldOrGroupMenuItem\n                  icon=\"arrow-down\"\n                  node={node}\n                  position=\"after\"\n                  group={false}\n                />\n                <AddFieldOrGroupMenuItem\n                  icon=\"arrow-down\"\n                  node={node}\n                  position=\"after\"\n                  group={true}\n                />\n              </ul>\n            }\n            lazy={true}\n            interactionKind=\"click\"\n            placement=\"left\"\n            renderTarget={({ isOpen, ref, ...targetProps }) => (\n              <BottomCornerButton {...targetProps} ref={ref} />\n            )}\n            hoverOpenDelay={0}\n            hoverCloseDelay={0}\n          />\n\n          {field}\n        </Hoverable>\n        {/* </ContextMenu2> */}\n      </>\n    );\n  }\n\n  return field;\n}\n","import * as React from \"react\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\nimport { XLSForm } from \"../../xlsform-simple-schema\";\nimport NoSurveyFieldsState from \"./NoSurveyFieldsState\";\nimport { SurveyField } from \"./SurveyField\";\n\nfunction PaddedContainer(\n  props: React.HTMLAttributes<HTMLDivElement> & {\n    horizontal: number;\n    vertical: number;\n  }\n) {\n  return (\n    <div\n      {...{ props }}\n      style={{\n        margin: `${props.horizontal}rem ${props.vertical}rem`,\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default function XLSFormSurvey(props: {\n  xlsForm: XLSForm;\n  language: string;\n  debug: boolean;\n  className?: string;\n}) {\n  const { languageCode, debug } = React.useContext(ODKSurveyContext);\n\n  // const fieldSets = schema\n  //   ?.objectKeys()\n  //   .map((k) => <FieldSetForKey key={k} schemaKey={k} />);\n  const isSurveyEmpty = props.xlsForm.flatNodes.length === 0;\n  const noSurveyFieldsState = <NoSurveyFieldsState />;\n\n  return (\n    <PaddedContainer\n      horizontal={2}\n      vertical={2}\n      className={props.className}\n      style={{\n        maxWidth: debug ? \"60rem\" : \"50rem\",\n        padding: \"4rem\",\n        margin: \"auto\",\n      }}\n      lang={languageCode}\n    >\n      {isSurveyEmpty ? (\n        noSurveyFieldsState\n      ) : (\n        <SurveyField key={\"data\"} schemaKey={\"data\"} />\n      )}\n    </PaddedContainer>\n  );\n}\n","import { Callout, Classes } from \"@blueprintjs/core\";\nimport {\n  Column,\n  ColumnHeaderCell,\n  EditableCell,\n  IColumnHeaderRenderer,\n  Table,\n} from \"@blueprintjs/table\";\nimport { uniq } from \"lodash\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ODKSurveyContext } from \"../../lib/ODKSurveyContext\";\nimport { WorksheetName, XLSForm } from \"../../xlsform-simple-schema\";\nimport { localizableColumnNames } from \"../../xlsform-simple-schema/functions/loadSurveyFromXLSX\";\nimport OverflowScrollContainer from \"../OverflowScrollContainer\";\n\ntype Props = {\n  xlsForm: XLSForm;\n  language: string;\n  debug: boolean;\n  worksheetName: WorksheetName;\n  style?: React.CSSProperties;\n};\n\nconst FlexTable = styled(Table)`\n  flex: 1;\n  width: 33.33333vw;\n`;\n\n/**\n * Displays a single XLSForm worksheet as a table - like in Excel.\n */\nexport default function XLSFormWorksheet(props: Props) {\n  const { language, xlsForm, worksheetName } = props;\n  const context = React.useContext(ODKSurveyContext);\n  const { onChangeCell } = context;\n  const worksheet = xlsForm.worksheets[props.worksheetName];\n\n  const numRows = worksheet?.rows.length;\n  const columnNames = React.useMemo(\n    () =>\n      uniq(worksheet?.columnNamesNormalized.map((n) => n.replace(/::.*$/, \"\"))),\n    [worksheet]\n  );\n\n  const onConfirmCellEdit = React.useCallback(\n    (\n      value: string,\n      rowIndex?: number | undefined,\n      columnIndex?: number | undefined\n    ) => {\n      if (columnIndex === undefined || rowIndex === undefined) {\n        return;\n      }\n\n      const row = worksheet?.rows[rowIndex];\n      if (!row) {\n        throw new Error(\"Tried to change a row that doesn’t exist\");\n      }\n      const columnName = columnNames[columnIndex];\n      const oldValue = row[columnName];\n      if (oldValue === value) {\n        return;\n      }\n      onChangeCell(\n        worksheetName,\n        rowIndex,\n        columnName,\n        value,\n        xlsForm.flatNodes[rowIndex]\n      );\n    },\n    [\n      columnNames,\n      onChangeCell,\n      worksheet?.rows,\n      worksheetName,\n      xlsForm.flatNodes,\n    ]\n  );\n\n  const columnNameRenderer = React.useMemo(\n    () => (name: string, index?: number) => {\n      if (localizableColumnNames.includes(name)) {\n        return (\n          <>\n            {name}\n            <span className={Classes.TEXT_MUTED}>::{language}</span>\n          </>\n        );\n      }\n      return <>{name}</>;\n    },\n    [language]\n  );\n\n  const columnHeaderCellRenderer: IColumnHeaderRenderer = React.useMemo(() => {\n    return (columnIndex: number) => {\n      return (\n        <ColumnHeaderCell\n          nameRenderer={columnNameRenderer}\n          name={columnNames[columnIndex]}\n        />\n      );\n    };\n  }, [columnNameRenderer, columnNames]);\n\n  const cellRenderer = React.useMemo(() => {\n    return (rowIndex: number, columnIndex: number) => {\n      const row = worksheet?.rows[rowIndex];\n      if (!row) {\n        return <></>;\n      }\n      const columnName = columnNames[columnIndex];\n      const value = row[columnName];\n      const node =\n        worksheetName === \"survey\" ? xlsForm.flatNodes[rowIndex] : undefined;\n      const key = [worksheetName, rowIndex, columnName].join(\"-\");\n      if (value !== undefined && typeof value !== \"string\") {\n        if (localizableColumnNames.includes(columnName)) {\n          return (\n            <EditableCell\n              {...{ rowIndex, columnIndex }}\n              onConfirm={onConfirmCellEdit}\n              value={value[language]}\n              key={key}\n            />\n          );\n        } else {\n          return (\n            <EditableCell\n              {...{ rowIndex, columnIndex }}\n              onConfirm={onConfirmCellEdit}\n              value={JSON.stringify(value)}\n              key={key}\n            />\n          );\n        }\n      }\n\n      return (\n        <EditableCell\n          {...{ rowIndex, columnIndex }}\n          onConfirm={onConfirmCellEdit}\n          value={value}\n          key={key}\n          style={\n            [\"type\", \"name\"].includes(columnName)\n              ? { paddingLeft: `${4 + (node?.indentationLevel || 0) * 8}px` }\n              : {}\n          }\n        >\n          {value}\n        </EditableCell>\n      );\n    };\n  }, [\n    worksheet?.rows,\n    columnNames,\n    worksheetName,\n    xlsForm.flatNodes,\n    onConfirmCellEdit,\n    language,\n  ]);\n\n  if (!worksheet) {\n    return (\n      <OverflowScrollContainer style={{ ...props.style }}>\n        <Callout intent=\"warning\">\n          No {props.worksheetName} sheet defined\n        </Callout>\n      </OverflowScrollContainer>\n    );\n  }\n\n  return (\n    <FlexTable\n      numRows={numRows}\n      enableRowResizing={false}\n      // numFrozenColumns={worksheetName === \"survey\" ? 2 : 0}\n    >\n      {columnNames.map((columnName) => (\n        <Column\n          key={columnName}\n          name={columnName}\n          cellRenderer={cellRenderer}\n          columnHeaderCellRenderer={columnHeaderCellRenderer}\n        />\n      ))}\n    </FlexTable>\n  );\n}\n","import { Tab, Tabs } from \"@blueprintjs/core\";\nimport { CSSProperties, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { XLSForm } from \"../../xlsform-simple-schema\";\nimport XLSFormWorksheet from \"./XLSFormWorksheet\";\n\ntype Props = {\n  xlsForm: XLSForm;\n  language: string;\n  debug: boolean;\n  style?: CSSProperties;\n};\n\nconst Container = styled.div`\n  /* background-color: #d5e0e7; */\n  .bp3-tabs {\n    display: flex;\n    flex-direction: column-reverse;\n    flex: 1;\n    overflow: hidden;\n    .bp3-tab-list {\n      padding: 0px 16px 0 16px;\n      .bp3-tab-indicator-wrapper {\n        background: #f6f7f7;\n        @media (prefers-color-scheme: dark) {\n          background: #30404d;\n        }\n        .bp3-tab-indicator {\n          /* bottom: unset; */\n          border-bottom-left-radius: 4px;\n          border-bottom-right-radius: 4px;\n          box-shadow: 0 0 0 1px rgba(16, 22, 26, 0.1),\n            0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2);\n        }\n      }\n      [role=\"tab\"] {\n        padding: 4px 16px 4px;\n        margin-bottom: 8px;\n        border-bottom-left-radius: 4px;\n        border-bottom-right-radius: 4px;\n      }\n    }\n    .bp3-tab-panel {\n      margin: 0;\n      overflow: auto;\n      flex: 1;\n      &[aria-hidden=\"false\"] {\n        box-shadow: 0 0 0 1px rgba(159, 183, 194, 0.1),\n          0 2px 4px rgba(159, 183, 194, 0.2), 0 4px 8px rgba(159, 183, 194, 0.1);\n        @media (prefers-color-scheme: dark) {\n          box-shadow: 0 0 0 1px rgba(12, 20, 24, 0.1),\n            0 2px 4px rgba(12, 20, 24, 0.2), 0 4px 8px rgba(12, 20, 24, 0.1);\n        }\n        display: flex;\n      }\n    }\n  }\n`;\n\n/**\n * Displays a XLSForm workbook as a table - like in Excel.\n */\nexport default function XLSFormWorkbook(props: Props) {\n  const [worksheetName, setWorksheetName] = useState<\n    keyof XLSForm[\"worksheets\"]\n  >(\"survey\");\n  const handleTabChange = useCallback((id: keyof XLSForm[\"worksheets\"]) => {\n    setWorksheetName(id);\n  }, []);\n\n  return (\n    <Container style={props.style}>\n      <Tabs\n        id=\"TabsExample\"\n        onChange={handleTabChange}\n        selectedTabId={worksheetName}\n        renderActiveTabPanelOnly={false}\n      >\n        <Tab\n          id=\"survey\"\n          title=\"Survey\"\n          panel={\n            <XLSFormWorksheet {...{ ...props, worksheetName: \"survey\" }} />\n          }\n        />\n        <Tab\n          id=\"choices\"\n          title=\"Choices\"\n          panel={\n            <XLSFormWorksheet {...{ ...props, worksheetName: \"choices\" }} />\n          }\n        />\n        <Tab\n          id=\"settings\"\n          title=\"Settings\"\n          panel={\n            <XLSFormWorksheet {...{ ...props, worksheetName: \"settings\" }} />\n          }\n        />\n        {/* <Tabs.Expander /> */}\n        {/* <input className=\"bp3-input\" type=\"text\" placeholder=\"Search...\" /> */}\n      </Tabs>\n    </Container>\n  );\n}\n","import { Button, ButtonGroup, Navbar } from \"@blueprintjs/core\";\nimport React from \"react\";\n\nexport type ViewOption = \"table\" | \"debug\" | \"json\" | \"graph\";\nconst defaultViewOptions: Record<ViewOption, boolean> = {\n  table: false,\n  debug: true,\n  json: false,\n  graph: false,\n};\n\n/** Custom React hook returning app's main view options and a button to configure these options. */\nexport default function useViewOptionsButton() {\n  const [viewOptions, setViewOptions] = React.useState<\n    Record<ViewOption, boolean>\n  >(defaultViewOptions);\n\n  const toggleDebug = React.useCallback(() => {\n    setViewOptions({ ...viewOptions, debug: !viewOptions.debug });\n  }, [viewOptions]);\n\n  const toggleTable = React.useCallback(() => {\n    setViewOptions({ ...viewOptions, table: !viewOptions.table });\n  }, [viewOptions]);\n\n  const toggleTree = React.useCallback(() => {\n    setViewOptions({ ...viewOptions, json: !viewOptions.json });\n  }, [viewOptions]);\n\n  const toggleGraph = React.useCallback(() => {\n    setViewOptions({ ...viewOptions, graph: !viewOptions.graph });\n  }, [viewOptions]);\n\n  const viewMenuButton = (\n    <>\n      <ButtonGroup>\n        <Button\n          icon=\"join-table\"\n          text=\"Excel\"\n          active={viewOptions.table}\n          onClick={toggleTable}\n        />\n        <Button\n          icon=\"diagram-tree\"\n          text=\"JSON\"\n          active={viewOptions.json}\n          onClick={toggleTree}\n        />\n      </ButtonGroup>\n\n      <Navbar.Divider />\n\n      <Button\n        icon=\"graph\"\n        text=\"Vocabulary\"\n        active={viewOptions.graph}\n        onClick={toggleGraph}\n      />\n\n      <Navbar.Divider />\n\n      <ButtonGroup>\n        <Button\n          icon=\"settings\"\n          text=\"Develop\"\n          active={viewOptions.debug}\n          onClick={toggleDebug}\n        />\n        <Button\n          icon=\"presentation\"\n          text=\"Preview\"\n          active={!viewOptions.debug}\n          onClick={toggleDebug}\n        />\n      </ButtonGroup>\n    </>\n  );\n\n  return { viewMenuButton, viewOptions };\n}\n","import { ODKNode } from \"../../types/ODKNode\";\nimport evaluateODKFormula from \"../odk-formulas/evaluation/evaluateODKFormula\";\nimport ODKFormulaEvaluationContext from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\n\n/**\n * @returns a function that returns `true` if a given node is relevant in a context, or `false` if\n * it’s not.\n */\n\nexport function getNodeOptionalFunction(\n  node: ODKNode,\n  context: ODKFormulaEvaluationContext\n) {\n  return function isNodeIrrelevantOrNotRequired() {\n    const isRelevant =\n      node.row.relevant === undefined ||\n      node.row.relevant === \"\" ||\n      evaluateODKFormula(node.row.relevant, context, node);\n    if (!isRelevant) {\n      return true;\n    }\n    const isRequired =\n      node.row.required === undefined ||\n      node.row.required === \"\" ||\n      evaluateODKFormula(node.row.required, context, node);\n    return !isRequired;\n  };\n}\n","import { ODKFormulaError } from \"../../types/Errors\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport evaluateExpression from \"../odk-formulas/evaluation/evaluateExpression\";\nimport ODKFormulaEvaluationContext from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport { NameExpression, TokenType } from \"../odk-formulas/pratt-parser-base\";\n\n/**\n * Allows to use `${...}` field references inside labels and texts. Each occurence of such a\n * reference is replaced by the value of the referenced field.\n *\n * @example\n * // Assuming there is a text input field called `user_name` with an answer value of 'Jon'...\n * getStringInterpolationFunctionOrString(\n *   'Hello ${user_name}!',\n *   context,\n *   node\n * ) // returns 'Hello Jon!'\n *\n * @returns The given input string, but with each occurrence of a field reference replaced with the value of its referenced field.\n */\nexport function getStringInterpolationFunctionOrString(\n  /** The string in which the field references should be replaced. */\n  inputString: string,\n  /** The evaluation context in which the referenced fields can be found. */\n  context: ODKFormulaEvaluationContext,\n  /** The node to which the string belongs. */\n  node: ODKNode\n) {\n  const hasInterpolation = !!inputString.match(/\\${([^}]+)}/);\n  if (!hasInterpolation) {\n    return inputString;\n  }\n  return function getInterpolatedString(): string {\n    return inputString.replaceAll(\n      /\\${([^}]+)}/g,\n      (match, name, offset): string => {\n        try {\n          const text = match;\n          const result = evaluateExpression(\n            new NameExpression(\n              [{ type: TokenType.NAME, text, index: offset }],\n              name,\n              match\n            ),\n            context,\n            node\n          );\n          return String(result);\n        } catch (e) {\n          if (e instanceof ODKFormulaError || e.isODKFormulaError) {\n            return e.toMarkdown();\n          }\n          throw e;\n        }\n      }\n    );\n  };\n}\n","import SimpleSchema, { SchemaDefinition } from \"simpl-schema\";\n\n/**\n * @returns a `SimpleSchema` definition that validates a Schema.org `QuantitativeValue` JSON-LD\n * object.\n *\n * Inspired by https://schema.org/QuantitativeValue.\n */\n\nexport const getQuantitativeValueSchema = (\n  key: string,\n  rootDefinition?: SchemaDefinition<unknown>\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n    ...rootDefinition,\n  },\n  [`${key}.maxValue`]: {\n    type: Number,\n    optional: true,\n  },\n  [`${key}.minValue`]: {\n    type: Number,\n    optional: true,\n  },\n  [`${key}.unitCode`]: {\n    type: Text,\n    optional: true,\n  },\n  [`${key}.unitText`]: {\n    type: Text,\n    optional: true,\n  },\n  [`${key}.value`]: {\n    type: SimpleSchema.oneOf(Number, String, Boolean),\n  },\n});\n\nexport interface IQuantitativeValue {\n  maxValue?: number;\n  minValue?: number;\n  unitCode?: string;\n  unitText?: string;\n  value: number | string | boolean;\n}\n","import SimpleSchema, { SchemaDefinition } from \"simpl-schema\";\nimport {\n  getQuantitativeValueSchema,\n  IQuantitativeValue,\n} from \"./getQuantitativeValueSchema\";\n\n/**\n * A Schema.org `MediaObject` JSON-LD object.\n *\n * @see https://schema.org/MediaObject\n */\n\nexport interface IMediaObject {\n  /** The bitrate of the media object. */\n  bitrate?: string;\n  /** File size in (mega/kilo) bytes. */\n  contentSize?: string;\n  /** Actual bytes of the media object, for example the image file or video file. */\n  contentUrl: string;\n  /** The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format. */\n  duration?: string;\n  /** A URL pointing to a player for a specific video. In general, this is the information in the src element of an embed tag and should not be the same as the content of the loc tag. */\n  embedUrl?: string;\n  /** Media type typically expressed using a MIME format (see IANA site and MDN reference) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.). */\n  encodingFormat: string;\n  /** the time offset of the end of a clip within a larger file. */\n  endTime?: Date;\n  /** the time offset of the start of a clip within a larger file. */\n  startTime?: Date;\n  /** Date when this media object was uploaded to this site. */\n  uploadDate?: Date;\n  /** The height of the item. */\n  height?: string | IQuantitativeValue;\n  /** The width of the item. */\n  width?: string | IQuantitativeValue;\n}\n\ntype MediaObject = IMediaObject & {\n  \"@type\": \"https://schema.org/MediaObject\";\n};\n\n/**\n * A Schema.org `MediaObject` JSON-LD object, as `SimpleSchema` definition.\n *\n * @see https://schema.org/MediaObject\n */\n\nexport const getMediaObjectSchema = (\n  key: string,\n  rootDefinition?: Partial<SchemaDefinition<unknown>>\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n    ...rootDefinition,\n  },\n  [`${key}.@type`]: {\n    type: String,\n    allowedValues: [\"https://schema.org/MediaObject\"],\n    defaultValue: \"https://schema.org/MediaObject\",\n  },\n  [`${key}.bitrate`]: {\n    type: String,\n    label: \"The bitrate of the media object.\",\n    optional: true,\n  },\n  [`${key}.contentSize`]: {\n    type: String,\n    label: \"File size in (mega/kilo) bytes.\",\n    optional: true,\n  },\n  [`${key}.contentUrl`]: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    label:\n      \"Actual bytes of the media object, for example the image file or video file.\",\n  },\n  [`${key}.duration`]: {\n    type: String,\n    label:\n      \"The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format.\",\n    optional: true,\n  },\n  [`${key}.embedUrl`]: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    label:\n      \"A URL pointing to a player for a specific video. In general, this is the information in the src element of an embed tag and should not be the same as the content of the loc tag.\",\n    optional: true,\n  },\n  [`${key}.encodingFormat`]: {\n    type: String,\n    label:\n      \"Media type typically expressed using a MIME format (see IANA site and MDN reference) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).\",\n  },\n  [`${key}.endTime`]: {\n    type: Date,\n    label: \"the time offset of the end of a clip within a larger file.\",\n    optional: true,\n  },\n  [`${key}.startTime`]: {\n    type: Date,\n    label: \"the time offset of the start of a clip within a larger file.\",\n    optional: true,\n  },\n  [`${key}.uploadDate`]: {\n    type: Date,\n    label: \"Date when this media object was uploaded to this site.\",\n    optional: true,\n  },\n  ...getQuantitativeValueSchema(`${key}.height`, {\n    type: SimpleSchema.oneOf(String, Object),\n    label: \"The height of the item.\",\n    optional: true,\n  }),\n  ...getQuantitativeValueSchema(`${key}.width`, {\n    type: SimpleSchema.oneOf(String, Object),\n    label: \"The width of the item.\",\n    optional: true,\n  }),\n});\n\n/**\n * A Schema.org `AudioObject` JSON-LD object.\n *\n * @see https://schema.org/AudioObject\n */\nexport type AudioObject = IMediaObject & {\n  \"@type\": \"https://schema.org/AudioObject\";\n  transcript?: string;\n  caption?: string | MediaObject;\n};\n\n/**\n * A Schema.org `AudioObject` JSON-LD object, as `SimpleSchema` definition.\n *\n * @see https://schema.org/AudioObject\n */\nexport const getAudioObjectSchema = (\n  key: string,\n  rootDefinition?: Partial<SchemaDefinition<unknown>>\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n    ...rootDefinition,\n  },\n  [`${key}.@type`]: {\n    type: String,\n    allowedValues: [\"https://schema.org/AudioObject\"],\n    defaultValue: \"https://schema.org/AudioObject\",\n  },\n  ...getMediaObjectSchema(key),\n  [`${key}.transcript`]: {\n    type: String,\n    optional: true,\n  },\n  ...getMediaObjectSchema(`${key}.caption`, {\n    type: SimpleSchema.oneOf(String, Object),\n    label:\n      \"The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the encodingFormat.\",\n    optional: true,\n  }),\n});\n\n/**\n * A Schema.org `ImageObject` JSON-LD object.\n *\n * @see https://schema.org/ImageObject\n */\nexport type ImageObject = IMediaObject & {\n  \"@type\": \"https://schema.org/ImageObject\";\n  exifData?: Record<string, unknown>;\n  representativeOfPage?: boolean;\n  caption?: string | MediaObject;\n  thumbnail?: string | ImageObject;\n};\n\n/**\n * A Schema.org `ImageObject` JSON-LD object, as `SimpleSchema` definition.\n *\n * @see https://schema.org/ImageObject\n */\nexport const getImageObjectSchema = (\n  key: string,\n  withThumbnail = true,\n  rootDefinition?: Partial<SchemaDefinition<unknown>>\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n    ...rootDefinition,\n  },\n  [`${key}.@type`]: {\n    type: String,\n    allowedValues: [\"https://schema.org/ImageObject\"],\n    defaultValue: \"https://schema.org/ImageObject\",\n  },\n  ...getMediaObjectSchema(key),\n  [`${key}.exifData`]: {\n    type: Object,\n    label: \"EXIF data for this object.\",\n    blackbox: true,\n    optional: true,\n  },\n  [`${key}.representativeOfPage`]: {\n    type: Boolean,\n    label:\n      \"Indicates whether this image is representative of the content of the page.\",\n    optional: true,\n  },\n  ...getMediaObjectSchema(`${key}.caption`, {\n    label:\n      \"The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the encodingFormat.\",\n    optional: true,\n  }),\n  ...(withThumbnail\n    ? getImageObjectSchema(`${key}.thumbnail`, false, {\n        label: \"Thumbnail image for an image or video.\",\n        optional: true,\n      })\n    : {}),\n});\n\n/**\n * A Schema.org `VideoObject` JSON-LD object.\n *\n * @see https://schema.org/VideoObject\n */\nexport type VideoObject = IMediaObject & {\n  \"@type\": \"https://schema.org/VideoObject\";\n  exifData?: Record<string, unknown>;\n  representativeOfPage?: boolean;\n  caption?: string | MediaObject;\n  transcript?: string;\n  videoFrameSize?: string;\n  videoQuality?: string;\n  thumbnail?: string | ImageObject;\n};\n\n/**\n * A Schema.org `VideoObject` JSON-LD object, as `SimpleSchema` definition.\n *\n * @see https://schema.org/VideoObject\n */\nexport const getVideoObjectSchema = (\n  key: string,\n  rootDefinition?: Partial<SchemaDefinition<unknown>>\n): Record<string, SchemaDefinition<unknown>> => ({\n  [key]: {\n    type: Object,\n    ...rootDefinition,\n  },\n  [`${key}.@type`]: {\n    type: String,\n    allowedValues: [\"https://schema.org/VideoObject\"],\n  },\n  ...getMediaObjectSchema(key),\n  [`${key}.caption`]: {\n    type: getMediaObjectSchema(`${key}.caption`),\n    label:\n      \" or Text\tThe caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the encodingFormat.\",\n    optional: true,\n  },\n  [`${key}.transcript`]: {\n    type: String,\n    label:\n      \"If this MediaObject is an AudioObject or VideoObject, the transcript of that object.\",\n    optional: true,\n  },\n  [`${key}.videoFrameSize`]: {\n    type: String,\n    label: \"The frame size of the video.\",\n    optional: true,\n  },\n  [`${key}.videoQuality`]: {\n    type: String,\n    optional: true,\n  },\n  ...getImageObjectSchema(`${key}.thumbnail`, true, {\n    label: \"Thumbnail image for an image or video.\",\n    optional: true,\n  }),\n});\n","import SimpleSchema from \"simpl-schema\";\nimport { NodeToDefinitionFunction } from \"./createLeafNodeSchemaDefinition\";\nimport {\n  getSchemaOrgLineStringGeometrySchema,\n  getSchemaOrgPointGeometrySchema,\n  getSchemaOrgPolygonGeometrySchema,\n} from \"./geometry/SchemaOrgGeometry\";\nimport getAllowedChoiceValues from \"./getAllowedChoiceValues\";\nimport {\n  getAudioObjectSchema,\n  getImageObjectSchema,\n  getMediaObjectSchema,\n  getVideoObjectSchema,\n} from \"./MediaSchemas\";\n\n/**\n * Map of survey question types to functions that generate a `SimpleSchema` definition.\n */\nexport const questionTypesToSchemaGenerators: Record<\n  string,\n  NodeToDefinitionFunction<unknown> | undefined\n> = {\n  \"\": () => ({}),\n  integer: (o) => ({ [o.key]: { type: SimpleSchema.Integer } }),\n  decimal: (o) => ({ [o.key]: { type: Number } }),\n  range: (o) => ({ [o.key]: { type: Number } }),\n  text: (o) => ({ [o.key]: { type: String } }),\n  select_one: (o) => ({\n    [o.key]: { type: String, allowedValues: getAllowedChoiceValues(o) },\n  }),\n  select_multiple: (o) => ({\n    [o.key]: { type: Array },\n    [o.key + \".$\"]: { type: String, allowedValues: getAllowedChoiceValues(o) },\n  }),\n  select_one_from_file: (o) => ({ [o.key]: { type: String } }),\n  select_multiple_from_file: (o) => ({\n    [o.key]: { type: Array },\n    [o.key + \".$\"]: { type: String },\n  }),\n  rank: (o) => ({ [o.key]: { type: String } }),\n  note: (o) => ({ [o.key]: { type: String } }),\n  geopoint: (o) => getSchemaOrgPointGeometrySchema(o.key),\n  geotrace: (o) => getSchemaOrgLineStringGeometrySchema(o.key),\n  geoshape: (o) => getSchemaOrgPolygonGeometrySchema(o.key),\n  date: (o) => ({ [o.key]: { type: Date } }),\n  time: (o) => ({ [o.key]: { type: Date } }),\n  datetime: (o) => ({ [o.key]: { type: Date } }),\n  image: (o) => getImageObjectSchema(o.key),\n  audio: (o) => getAudioObjectSchema(o.key),\n  video: (o) => getVideoObjectSchema(o.key),\n  file: (o) => getMediaObjectSchema(o.key),\n  barcode: (o) => ({ [o.key]: { type: String } }),\n  calculate: (o) => ({ [o.key]: { type: String } }),\n  acknowledge: (o) => ({ [o.key]: { type: Boolean } }),\n  hidden: (o) => ({ [o.key]: { type: String } }),\n  \"xml-external\": (o) => ({ [o.key]: { type: String } }),\n  start: (o) => ({ [o.key]: { type: Date } }),\n  end: (o) => ({ [o.key]: { type: Date } }),\n  today: (o) => ({ [o.key]: { type: Date } }),\n  deviceid: (o) => ({ [o.key]: { type: String } }),\n  simserial: (o) => ({ [o.key]: { type: String } }),\n  subscriberid: (o) => ({ [o.key]: { type: String } }),\n  phonenumber: (o) => ({ [o.key]: { type: String } }),\n  username: (o) => ({ [o.key]: { type: String } }),\n  email: (o) => ({\n    [o.key]: { type: String, regEx: SimpleSchema.RegEx.EmailWithTLD },\n  }),\n  audit: (o) => ({ [o.key]: { type: String } }),\n};\n","import { SchemaDefinition } from \"simpl-schema\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport ODKFormulaEvaluationContext from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport createLeafNodeSchemaDefinition from \"./createLeafNodeSchemaDefinition\";\nimport { getNodeOptionalFunction } from \"./getNodeOptionalFunction\";\nimport { getStringInterpolationFunctionOrString } from \"./getStringInterpolationFunctionOrString\";\n\n/**\n * @returns a `SimpleSchema` definition of a nested tree of `ODKNode`s that you can use to validate\n * survey results at runtime.\n */\nexport default function createRecursiveNodeSchemaDefinition(options: {\n  node: ODKNode;\n  language: string;\n  xlsForm: XLSForm;\n  context: ODKFormulaEvaluationContext;\n  key: string;\n}): Record<string, SchemaDefinition<unknown>> {\n  const { node, language, xlsForm, context, key } = options;\n  let schemaDefinitions: Record<string, SchemaDefinition<unknown>>;\n  const labelString = node.row.label?.[language] || \"\";\n  const definition: Pick<SchemaDefinition<unknown>, \"label\" | \"optional\"> = {\n    label: getStringInterpolationFunctionOrString(labelString, context, node),\n    optional: getNodeOptionalFunction(node, context),\n  };\n  if (node.row?.type.match(/^begin_repeat$/)) {\n    // We're in a repeated section\n    const childrenSchemaDefinitions = node.children.map((child) =>\n      createRecursiveNodeSchemaDefinition({\n        ...options,\n        node: child,\n        key: key + \".$.\" + child.row.name,\n      })\n    );\n    schemaDefinitions = Object.assign(\n      { [key]: { ...definition, type: Array } },\n      ...childrenSchemaDefinitions\n    );\n  } else if (\n    node.row.type.match(/^begin_group$/) ||\n    node === xlsForm.rootSurveyGroup\n  ) {\n    // We're in a group section or in the root (a special case that has children, but is not of `begin_group` type)\n    const childrenSchemaDefinitions = node.children.map((child) => {\n      if (!child.row) {\n        debugger;\n      }\n      return createRecursiveNodeSchemaDefinition({\n        ...options,\n        node: child,\n        key: key + \".\" + child.row.name,\n      });\n    });\n\n    schemaDefinitions = Object.assign(\n      { [key]: { ...definition, type: Object } },\n      ...childrenSchemaDefinitions\n    );\n  } else {\n    schemaDefinitions = createLeafNodeSchemaDefinition(\n      node,\n      language,\n      xlsForm,\n      context,\n      key\n    );\n  }\n\n  // console.log(`Schema for key \\`${key}\\`:`, schemaDefinitions);\n  return schemaDefinitions;\n}\n","import { SchemaDefinition } from \"simpl-schema\";\nimport { ODKNode } from \"../../types/ODKNode\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport ODKFormulaEvaluationContext from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport { getNodeOptionalFunction } from \"./getNodeOptionalFunction\";\nimport { getStringInterpolationFunctionOrString } from \"./getStringInterpolationFunctionOrString\";\nimport { questionTypesToSchemaGenerators } from \"./questionTypesToSchemaGenerators\";\n\nexport type NodeToDefinitionFunctionOptions = {\n  key: string;\n  node: ODKNode;\n  xlsForm: XLSForm;\n  context: ODKFormulaEvaluationContext;\n};\n\nexport type NodeToDefinitionFunction<T> = (\n  options: NodeToDefinitionFunctionOptions\n) => Record<string, SchemaDefinition<T>>;\n\n/**\n * @returns a `SimpleSchema` definition of a field node. Use this to validate a survey result at\n * runtime.\n */\nexport default function createLeafNodeSchemaDefinition(\n  node: ODKNode,\n  language: string,\n  xlsForm: XLSForm,\n  context: ODKFormulaEvaluationContext,\n  key: string\n): Record<string, SchemaDefinition<unknown>> {\n  const { row } = node;\n\n  if (!row) {\n    throw new Error(\"Node needs an associated row for creating a schema.\");\n  }\n\n  const labelString = row.label?.[language] || \"\";\n  const defaults = {\n    type: String,\n    label: getStringInterpolationFunctionOrString(labelString, context, node),\n    optional: getNodeOptionalFunction(node, context),\n  };\n\n  const schemaGeneratorFunction = questionTypesToSchemaGenerators[node.type];\n  if (!schemaGeneratorFunction) {\n    throw new Error(\n      `Could not find schema generator for node type ${JSON.stringify(row)}`\n    );\n  }\n\n  const schema = schemaGeneratorFunction({ key, node, xlsForm, context });\n  const firstField = schema[Object.keys(schema)[0]];\n  Object.assign(firstField, defaults, { ...firstField });\n\n  return schema;\n}\n","import {\n  Colors,\n  FocusStyleManager,\n  HotkeysProvider,\n  HotkeysTarget2,\n} from \"@blueprintjs/core\";\nimport * as RDFLib from \"rdflib\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport { AppEmptyState } from \"./components/AppEmptyState\";\nimport { AppNavBar } from \"./components/AppNavBar\";\nimport BlueprintDarkModeContainer, {\n  useDarkMode,\n} from \"./components/core/BlueprintDarkModeContainer\";\nimport composeContexts, {\n  ContextAndValue,\n} from \"./components/core/composeContexts\";\nimport useChangeHooks from \"./components/hooks/useChangeHooks\";\nimport { useGlobalHotkeys } from \"./components/hooks/useGlobalHotkeys\";\nimport OverflowScrollContainer from \"./components/OverflowScrollContainer\";\nimport { RDFGraphContext } from \"./components/rdf/RDFGraphContext\";\nimport RDFModelTree from \"./components/rdf/RDFModelTree\";\nimport ResultCodeTree from \"./components/result-code/ResultCodeTree\";\nimport { ODKNodeDragAndDropContext } from \"./components/survey/useNodeDragAndDrop\";\nimport XLSFormSurvey from \"./components/survey/XLSFormSurvey\";\nimport XLSFormWorkbook from \"./components/table/XLSFormWorkbook\";\nimport useViewOptionsButton from \"./components/useViewOptionsButton\";\nimport { alpha } from \"./lib/colors\";\nimport { ODKSurveyContext } from \"./lib/ODKSurveyContext\";\nimport loadSchemaOrgGraph from \"./lib/rdf/loadSchemaOrgGraph\";\nimport { UndoContext } from \"./lib/undo/UndoContext\";\nimport useUndoHistory from \"./lib/undo/useUndoHistory\";\nimport { createSurveySchemaFromXLSForm } from \"./xlsform-simple-schema/functions/schema-creation/createSurveySchemaFromXLSForm\";\nimport { XLSForm } from \"./xlsform-simple-schema/index\";\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nconst StyledXLSFormSurvey = styled(XLSFormSurvey)`\n  max-width: 800px;\n  margin: auto;\n\n  font-size: 20px;\n  .bp3-small {\n    font-size: 16px;\n  }\n\n  .bp3-large {\n    font-size: 20px;\n  }\n\n  .bp3-form-helper-text {\n    font-size: 16px;\n  }\n\n  .bp3-form-group {\n    margin: 0 0 40px;\n  }\n\n  .bp3-control {\n    margin-bottom: 10px;\n  }\n`;\n\nconst AppBody = styled.div`\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n`;\n\nfunction App() {\n  const [language, setLanguage] = React.useState<string>(\"English (en)\");\n  const undoContext = useUndoHistory<XLSForm>();\n  const xlsForm = undoContext.document;\n  const { viewMenuButton, viewOptions } = useViewOptionsButton();\n  const isDarkMode = useDarkMode();\n  const hotkeys = useGlobalHotkeys(undoContext);\n  const setXLSFormWithPatches = undoContext.setDocumentWithPatches;\n\n  const rdfStore = React.useMemo(() => {\n    const store = RDFLib.graph();\n    loadSchemaOrgGraph(store);\n    return store;\n  }, []);\n\n  const changeHooks = useChangeHooks({\n    language,\n    xlsForm,\n    setXLSFormWithPatches,\n    debug: viewOptions.debug,\n  });\n\n  // Allow debugging from the console\n  (window as any).xlsForm = xlsForm;\n  (window as any).setXLSFormWithPatches = setXLSFormWithPatches;\n\n  const { evaluationContext } = changeHooks;\n  const [, languageName, languageCode] =\n    language?.match(/^(.*) \\((\\w+)\\)$/) || [];\n\n  const surveySimpleSchema = React.useMemo(() => {\n    if (xlsForm && language && evaluationContext) {\n      return createSurveySchemaFromXLSForm(\n        xlsForm,\n        evaluationContext,\n        language\n      );\n    }\n    return undefined;\n  }, [xlsForm, language, evaluationContext]);\n\n  const navbar = xlsForm && (\n    <AppNavBar\n      {...{\n        setXLSFormWithPatches,\n        setLanguage,\n        xlsForm,\n        viewMenuButton,\n        language,\n      }}\n    />\n  );\n\n  // First visible state when there is no data loaded yet.\n  const appEmptyState = !xlsForm && (\n    <OverflowScrollContainer>\n      <AppEmptyState {...{ setXLSFormWithPatches, setLanguage }} />\n    </OverflowScrollContainer>\n  );\n\n  // The panel showing an Excel workbook view of the XLSForm data\n  const excelPanel = xlsForm && language && viewOptions.table && (\n    <XLSFormWorkbook\n      xlsForm={xlsForm}\n      language={language}\n      debug={viewOptions.debug}\n      style={{ flex: 1, display: \"flex\" }}\n    />\n  );\n\n  // The panel showing the survey itself\n  const surveyPanel = xlsForm && language && (\n    <OverflowScrollContainer\n      style={{\n        boxShadow: isDarkMode\n          ? `0 0px 2px ${alpha(Colors.DARK_GRAY5, 0.8)}, 0 0px 20px ${alpha(\n              Colors.DARK_GRAY1,\n              0.3\n            )}`\n          : `0 0px 10px ${alpha(Colors.DARK_GRAY5, 0.3)}`,\n        zIndex: 1,\n      }}\n    >\n      <StyledXLSFormSurvey\n        xlsForm={xlsForm}\n        language={language}\n        debug={viewOptions.debug}\n      />\n    </OverflowScrollContainer>\n  );\n\n  // The panel showing the output/result data of the survey\n  const treePanel = xlsForm && language && viewOptions.json && (\n    <OverflowScrollContainer\n      className={\"bp3-code-block\"}\n      style={{ padding: \"1rem\", margin: \"0\", whiteSpace: \"pre\" }}\n    >\n      <ResultCodeTree {...{ xlsForm }} />\n    </OverflowScrollContainer>\n  );\n\n  // The panel showing the Linked Data vocabulary graph\n  const modelPanel = viewOptions.graph && (\n    <OverflowScrollContainer style={{ padding: \"1rem\", margin: \"0\" }}>\n      <RDFModelTree />\n    </OverflowScrollContainer>\n  );\n\n  const contexts: ContextAndValue<any>[] = [\n    [RDFGraphContext, rdfStore],\n    [UndoContext, undoContext],\n    [ODKNodeDragAndDropContext, { onDropNode: changeHooks.onMoveNode }],\n    [\n      ODKSurveyContext,\n      {\n        schema: surveySimpleSchema,\n        language,\n        languageCode,\n        languageName,\n        debug: viewOptions.debug,\n        xlsForm,\n        ...changeHooks,\n      },\n    ],\n  ];\n\n  const navbarAndBody = (\n    <>\n      {navbar}\n\n      <AppBody>\n        {appEmptyState}\n        {excelPanel}\n        {surveyPanel}\n        {treePanel}\n        {modelPanel}\n      </AppBody>\n    </>\n  );\n\n  return (\n    <HotkeysProvider>\n      <HotkeysTarget2 hotkeys={hotkeys}>\n        {({ handleKeyDown, handleKeyUp }) => (\n          <BlueprintDarkModeContainer\n            style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}\n            onKeyDown={handleKeyDown}\n            onKeyUp={handleKeyUp}\n          >\n            {composeContexts(contexts, navbarAndBody)}\n          </BlueprintDarkModeContainer>\n        )}\n      </HotkeysTarget2>\n    </HotkeysProvider>\n  );\n}\n\nexport default App;\n","import { Patch } from \"immer/dist/internal\";\nimport * as React from \"react\";\nimport { UndoContextType } from \"./createUndoHistoryContext\";\nimport { UndoHistory, UndoHistoryItem } from \"./types\";\nexport type { Patch } from \"immer/dist/internal\";\n\nexport default function useUndoHistory<T>(): UndoContextType<T> {\n  const [undoHistory, setUndoHistory] = React.useState<UndoHistory<T>>({\n    commands: [],\n    index: -1,\n  });\n\n  const setDocumentWithPatches = React.useCallback(\n    (\n      description: string,\n      nextState: T | undefined,\n      patches: Patch[],\n      inversePatches: Patch[]\n    ) => {\n      const newCommand: UndoHistoryItem<T> = {\n        description,\n        document: nextState,\n        patches,\n        inversePatches,\n      };\n      setUndoHistory((undoHistory) => {\n        const { commands, index } = undoHistory;\n        return {\n          commands: [...commands.slice(0, index + 1), newCommand],\n          index: index + 1,\n        };\n      });\n    },\n    []\n  );\n\n  const undo = React.useCallback(\n    () =>\n      setUndoHistory((undoHistory) => ({\n        ...undoHistory,\n        index: Math.max(undoHistory.index - 1, 0),\n      })),\n    []\n  );\n\n  const redo = React.useCallback(\n    () =>\n      setUndoHistory((undoHistory) => ({\n        ...undoHistory,\n        index: Math.min(undoHistory.index + 1, undoHistory.commands.length - 1),\n      })),\n    []\n  );\n\n  const document = React.useMemo(\n    () => undoHistory.commands[undoHistory.index]?.document,\n    [undoHistory.commands, undoHistory.index]\n  );\n\n  const gotoIndex = React.useCallback(\n    (index: number) =>\n      setUndoHistory((undoHistory) => ({\n        ...undoHistory,\n        index,\n      })),\n    []\n  );\n\n  return {\n    setDocumentWithPatches,\n    undoHistory,\n    undo,\n    redo,\n    gotoIndex,\n    document,\n  };\n}\n","import React from \"react\";\nimport { UndoContextType } from \"../../lib/undo/createUndoHistoryContext\";\nimport { XLSForm } from \"../../xlsform-simple-schema/types/XLSForm\";\n\nexport function useGlobalHotkeys(undoContext: UndoContextType<XLSForm>) {\n  return React.useMemo(\n    () => [\n      {\n        combo: \"mod+z\",\n        global: true,\n        label: \"Undo\",\n        onKeyDown: undoContext.undo,\n        allowInInput: false,\n        preventDefault: true,\n      },\n      {\n        global: true,\n        combo: \"mod+shift+z\",\n        label: \"Redo\",\n        onKeyDown: undoContext.redo,\n        allowInInput: false,\n        preventDefault: true,\n      },\n    ],\n    [undoContext.redo, undoContext.undo]\n  );\n}\n","import { parse, Store } from \"rdflib\";\nimport schemaOrgTurtleFileString from \"./schemaOrgTurtleFileString\";\n\nexport default function loadSchemaOrgGraph(rdfStore: Store) {\n  try {\n    parse(\n      schemaOrgTurtleFileString,\n      rdfStore,\n      \"https://schema.org\",\n      \"text/turtle\"\n    );\n  } catch (err) {\n    console.log(\"Error while loading schema.org .ttl file:\", err);\n    throw err;\n  }\n}\n","/**\n * Copied from https://github.com/schemaorg/schemaorg/blob/main/data/schema.ttl\n * License below.\n *\n * TODO: Download this at runtime instead of hardcoding.\n */\n/*\n\nApache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nconst schemaOrgTurtleFileString = `\n@prefix ns1: <http://www.w3.org/2004/02/skos/core#> .\n@prefix ns2: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix schema: <https://schema.org/> .\n\nschema:3DModel a rdfs:Class ;\n    rdfs:label \"3DModel\" ;\n    rdfs:comment \"\"\"A 3D model represents some kind of 3D content, which may have [[encoding]]s in one or more [[MediaObject]]s. Many 3D formats are available (e.g. see [Wikipedia](https://en.wikipedia.org/wiki/Category:3D_graphics_file_formats)); specific encoding formats can be represented using the [[encodingFormat]] property applied to the relevant [[MediaObject]]. For the\ncase of a single file published after Zip compression, the convention of appending '+zip' to the [[encodingFormat]] can be used. Geospatial, AR/VR, artistic/animation, gaming, engineering and scientific content can all be represented using [[3DModel]].\"\"\" ;\n    rdfs:subClassOf schema:MediaObject ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2140> .\n\nschema:AMRadioChannel a rdfs:Class ;\n    rdfs:label \"AMRadioChannel\" ;\n    rdfs:comment \"A radio channel that uses AM.\" ;\n    rdfs:subClassOf schema:RadioChannel ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1004> .\n\nschema:APIReference a rdfs:Class ;\n    rdfs:label \"APIReference\" ;\n    rdfs:comment \"Reference documentation for application programming interfaces (APIs).\" ;\n    rdfs:subClassOf schema:TechArticle .\n\nschema:AboutPage a rdfs:Class ;\n    rdfs:label \"AboutPage\" ;\n    rdfs:comment \"Web page type: About page.\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:AcceptAction a rdfs:Class ;\n    rdfs:label \"AcceptAction\" ;\n    rdfs:comment \"The act of committing to/adopting an object.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[RejectAction]]: The antonym of AcceptAction.\" ;\n    rdfs:subClassOf schema:AllocateAction .\n\nschema:Accommodation a rdfs:Class ;\n    rdfs:label \"Accommodation\" ;\n    rdfs:comment \"\"\"An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.\nFor more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:Place ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:AccountingService a rdfs:Class ;\n    rdfs:label \"AccountingService\" ;\n    rdfs:comment \"\"\"Accountancy business.\\\\n\\\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\\\\\\\(s).\n      \"\"\" ;\n    rdfs:subClassOf schema:FinancialService .\n\nschema:AchieveAction a rdfs:Class ;\n    rdfs:label \"AchieveAction\" ;\n    rdfs:comment \"The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:Action a rdfs:Class ;\n    rdfs:label \"Action\" ;\n    rdfs:comment \"An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.\\\\n\\\\nSee also [blog post](http://blog.schema.org/2014/04/announcing-schemaorg-actions.html) and [Actions overview document](https://schema.org/docs/actions.html).\" ;\n    rdfs:subClassOf schema:Thing ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass> .\n\nschema:ActionAccessSpecification a rdfs:Class ;\n    rdfs:label \"ActionAccessSpecification\" ;\n    rdfs:comment \"A set of requirements that a must be fulfilled in order to perform an Action.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:ActionStatusType a rdfs:Class ;\n    rdfs:label \"ActionStatusType\" ;\n    rdfs:comment \"The status of an Action.\" ;\n    rdfs:subClassOf schema:StatusEnumeration .\n\nschema:ActivateAction a rdfs:Class ;\n    rdfs:label \"ActivateAction\" ;\n    rdfs:comment \"The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).\" ;\n    rdfs:subClassOf schema:ControlAction .\n\nschema:AddAction a rdfs:Class ;\n    rdfs:label \"AddAction\" ;\n    rdfs:comment \"The act of editing by adding an object to a collection.\" ;\n    rdfs:subClassOf schema:UpdateAction .\n\nschema:AdministrativeArea a rdfs:Class ;\n    rdfs:label \"AdministrativeArea\" ;\n    rdfs:comment \"A geographical region, typically under the jurisdiction of a particular government.\" ;\n    rdfs:subClassOf schema:Place .\n\nschema:AdultEntertainment a rdfs:Class ;\n    rdfs:label \"AdultEntertainment\" ;\n    rdfs:comment \"An adult entertainment establishment.\" ;\n    rdfs:subClassOf schema:EntertainmentBusiness .\n\nschema:AdvertiserContentArticle a rdfs:Class ;\n    rdfs:label \"AdvertiserContentArticle\" ;\n    rdfs:comment \"An [[Article]] that an external entity has paid to place or to produce to its specifications. Includes [advertorials](https://en.wikipedia.org/wiki/Advertorial), sponsored content, native advertising and other paid content.\" ;\n    rdfs:subClassOf schema:Article ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:AggregateOffer a rdfs:Class ;\n    rdfs:label \"AggregateOffer\" ;\n    rdfs:comment \"When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.\\\\n\\\\nNote: AggregateOffers are normally expected to associate multiple offers that all share the same defined [[businessFunction]] value, or default to http://purl.org/goodrelations/v1#Sell if businessFunction is not explicitly defined.\" ;\n    rdfs:subClassOf schema:Offer .\n\nschema:AggregateRating a rdfs:Class ;\n    rdfs:label \"AggregateRating\" ;\n    rdfs:comment \"The average rating based on multiple ratings or reviews.\" ;\n    rdfs:subClassOf schema:Rating .\n\nschema:AgreeAction a rdfs:Class ;\n    rdfs:label \"AgreeAction\" ;\n    rdfs:comment \"The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.\" ;\n    rdfs:subClassOf schema:ReactAction .\n\nschema:Airline a rdfs:Class ;\n    rdfs:label \"Airline\" ;\n    rdfs:comment \"An organization that provides flights for passengers.\" ;\n    rdfs:subClassOf schema:Organization .\n\nschema:Airport a rdfs:Class ;\n    rdfs:label \"Airport\" ;\n    rdfs:comment \"An airport.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:AlignmentObject a rdfs:Class ;\n    rdfs:label \"AlignmentObject\" ;\n    rdfs:comment \"\"\"An intangible item that describes an alignment between a learning resource and a node in an educational framework.\n\nShould not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.\"\"\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass> .\n\nschema:AllocateAction a rdfs:Class ;\n    rdfs:label \"AllocateAction\" ;\n    rdfs:comment \"The act of organizing tasks/objects/events by associating resources to it.\" ;\n    rdfs:subClassOf schema:OrganizeAction .\n\nschema:AmpStory a rdfs:Class ;\n    rdfs:label \"AmpStory\" ;\n    rdfs:comment \"A creative work with a visual storytelling format intended to be viewed online, particularly on mobile devices.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2646> .\n\nschema:AmusementPark a rdfs:Class ;\n    rdfs:label \"AmusementPark\" ;\n    rdfs:comment \"An amusement park.\" ;\n    rdfs:subClassOf schema:EntertainmentBusiness .\n\nschema:AnalysisNewsArticle a rdfs:Class ;\n    rdfs:label \"AnalysisNewsArticle\" ;\n    rdfs:comment \"An AnalysisNewsArticle is a [[NewsArticle]] that, while based on factual reporting, incorporates the expertise of the author/producer, offering interpretations and conclusions.\" ;\n    rdfs:subClassOf schema:NewsArticle ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:AnatomicalStructure a rdfs:Class ;\n    rdfs:label \"AnatomicalStructure\" ;\n    rdfs:comment \"Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:AnatomicalSystem a rdfs:Class ;\n    rdfs:label \"AnatomicalSystem\" ;\n    rdfs:comment \"An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can includes circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:AnimalShelter a rdfs:Class ;\n    rdfs:label \"AnimalShelter\" ;\n    rdfs:comment \"Animal shelter.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:Answer a rdfs:Class ;\n    rdfs:label \"Answer\" ;\n    rdfs:comment \"An answer offered to a question; perhaps correct, perhaps opinionated or wrong.\" ;\n    rdfs:subClassOf schema:Comment ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange> .\n\nschema:Apartment a rdfs:Class ;\n    rdfs:label \"Apartment\" ;\n    rdfs:comment \"An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href=\\\\\"http://en.wikipedia.org/wiki/Apartment\\\\\">http://en.wikipedia.org/wiki/Apartment</a>).\" ;\n    rdfs:subClassOf schema:Accommodation ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:ApartmentComplex a rdfs:Class ;\n    rdfs:label \"ApartmentComplex\" ;\n    rdfs:comment \"Residence type: Apartment complex.\" ;\n    rdfs:subClassOf schema:Residence .\n\nschema:AppendAction a rdfs:Class ;\n    rdfs:label \"AppendAction\" ;\n    rdfs:comment \"The act of inserting at the end if an ordered collection.\" ;\n    rdfs:subClassOf schema:InsertAction .\n\nschema:ApplyAction a rdfs:Class ;\n    rdfs:label \"ApplyAction\" ;\n    rdfs:comment \"The act of registering to an organization/service without the guarantee to receive it.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[RegisterAction]]: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.\" ;\n    rdfs:subClassOf schema:OrganizeAction .\n\nschema:ApprovedIndication a rdfs:Class ;\n    rdfs:label \"ApprovedIndication\" ;\n    rdfs:comment \"An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.\" ;\n    rdfs:subClassOf schema:MedicalIndication ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Aquarium a rdfs:Class ;\n    rdfs:label \"Aquarium\" ;\n    rdfs:comment \"Aquarium.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:ArchiveComponent a rdfs:Class ;\n    rdfs:label \"ArchiveComponent\"@en ;\n    rdfs:comment \"An intangible type to be applied to any archive content, carrying with it a set of properties required to describe archival items and collections.\"@en ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1758> .\n\nschema:ArchiveOrganization a rdfs:Class ;\n    rdfs:label \"ArchiveOrganization\"@en ;\n    rdfs:comment \"An organization with archival holdings. An organization which keeps and preserves archival material and typically makes it accessible to the public.\"@en ;\n    rdfs:subClassOf schema:LocalBusiness ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1758> .\n\nschema:ArriveAction a rdfs:Class ;\n    rdfs:label \"ArriveAction\" ;\n    rdfs:comment \"The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.\" ;\n    rdfs:subClassOf schema:MoveAction .\n\nschema:ArtGallery a rdfs:Class ;\n    rdfs:label \"ArtGallery\" ;\n    rdfs:comment \"An art gallery.\" ;\n    rdfs:subClassOf schema:EntertainmentBusiness .\n\nschema:Artery a rdfs:Class ;\n    rdfs:label \"Artery\" ;\n    rdfs:comment \"A type of blood vessel that specifically carries blood away from the heart.\" ;\n    rdfs:subClassOf schema:Vessel ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/51114001> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Article a rdfs:Class ;\n    rdfs:label \"Article\" ;\n    rdfs:comment \"An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.\\\\n\\\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> .\n\nschema:AskAction a rdfs:Class ;\n    rdfs:label \"AskAction\" ;\n    rdfs:comment \"The act of posing a question / favor to someone.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[ReplyAction]]: Appears generally as a response to AskAction.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:AskPublicNewsArticle a rdfs:Class ;\n    rdfs:label \"AskPublicNewsArticle\" ;\n    rdfs:comment \"A [[NewsArticle]] expressing an open call by a [[NewsMediaOrganization]] asking the public for input, insights, clarifications, anecdotes, documentation, etc., on an issue, for reporting purposes.\" ;\n    rdfs:subClassOf schema:NewsArticle ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:AssessAction a rdfs:Class ;\n    rdfs:label \"AssessAction\" ;\n    rdfs:comment \"The act of forming one's opinion, reaction or sentiment.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:AssignAction a rdfs:Class ;\n    rdfs:label \"AssignAction\" ;\n    rdfs:comment \"The act of allocating an action/event/task to some destination (someone or something).\" ;\n    rdfs:subClassOf schema:AllocateAction .\n\nschema:Atlas a rdfs:Class ;\n    rdfs:label \"Atlas\" ;\n    rdfs:comment \"A collection or bound volume of maps, charts, plates or tables, physical or in media form illustrating any subject.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:source <http://www.productontology.org/id/Atlas> .\n\nschema:Attorney a rdfs:Class ;\n    rdfs:label \"Attorney\" ;\n    rdfs:comment \"Professional service: Attorney. \\\\n\\\\nThis type is deprecated - [[LegalService]] is more inclusive and less ambiguous.\" ;\n    rdfs:subClassOf schema:LegalService .\n\nschema:Audience a rdfs:Class ;\n    rdfs:label \"Audience\" ;\n    rdfs:comment \"Intended audience for an item, i.e. the group for whom the item was created.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:AudioObject a rdfs:Class ;\n    rdfs:label \"AudioObject\" ;\n    rdfs:comment \"An audio file.\" ;\n    rdfs:subClassOf schema:MediaObject ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> .\n\nschema:Audiobook a rdfs:Class ;\n    rdfs:label \"Audiobook\" ;\n    rdfs:comment \"An audiobook.\" ;\n    rdfs:subClassOf schema:AudioObject,\n        schema:Book ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:AuthorizeAction a rdfs:Class ;\n    rdfs:label \"AuthorizeAction\" ;\n    rdfs:comment \"The act of granting permission to an object.\" ;\n    rdfs:subClassOf schema:AllocateAction .\n\nschema:AutoBodyShop a rdfs:Class ;\n    rdfs:label \"AutoBodyShop\" ;\n    rdfs:comment \"Auto body shop.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:AutoDealer a rdfs:Class ;\n    rdfs:label \"AutoDealer\" ;\n    rdfs:comment \"An car dealership.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:AutoPartsStore a rdfs:Class ;\n    rdfs:label \"AutoPartsStore\" ;\n    rdfs:comment \"An auto parts store.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness,\n        schema:Store .\n\nschema:AutoRental a rdfs:Class ;\n    rdfs:label \"AutoRental\" ;\n    rdfs:comment \"A car rental business.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:AutoRepair a rdfs:Class ;\n    rdfs:label \"AutoRepair\" ;\n    rdfs:comment \"Car repair business.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:AutoWash a rdfs:Class ;\n    rdfs:label \"AutoWash\" ;\n    rdfs:comment \"A car wash business.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:AutomatedTeller a rdfs:Class ;\n    rdfs:label \"AutomatedTeller\" ;\n    rdfs:comment \"ATM/cash machine.\" ;\n    rdfs:subClassOf schema:FinancialService .\n\nschema:AutomotiveBusiness a rdfs:Class ;\n    rdfs:label \"AutomotiveBusiness\" ;\n    rdfs:comment \"Car repair, sales, or parts.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:BackgroundNewsArticle a rdfs:Class ;\n    rdfs:label \"BackgroundNewsArticle\" ;\n    rdfs:comment \"A [[NewsArticle]] providing historical context, definition and detail on a specific topic (aka \\\\\"explainer\\\\\" or \\\\\"backgrounder\\\\\"). For example, an in-depth article or frequently-asked-questions ([FAQ](https://en.wikipedia.org/wiki/FAQ)) document on topics such as Climate Change or the European Union. Other kinds of background material from a non-news setting are often described using [[Book]] or [[Article]], in particular [[ScholarlyArticle]]. See also [[NewsArticle]] for related vocabulary from a learning/education perspective.\" ;\n    rdfs:subClassOf schema:NewsArticle ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:Bakery a rdfs:Class ;\n    rdfs:label \"Bakery\" ;\n    rdfs:comment \"A bakery.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:BankAccount a rdfs:Class ;\n    rdfs:label \"BankAccount\" ;\n    rdfs:comment \"A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.\" ;\n    rdfs:subClassOf schema:FinancialProduct ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:BankOrCreditUnion a rdfs:Class ;\n    rdfs:label \"BankOrCreditUnion\" ;\n    rdfs:comment \"Bank or credit union.\" ;\n    rdfs:subClassOf schema:FinancialService .\n\nschema:BarOrPub a rdfs:Class ;\n    rdfs:label \"BarOrPub\" ;\n    rdfs:comment \"A bar or pub.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:Barcode a rdfs:Class ;\n    rdfs:label \"Barcode\" ;\n    rdfs:comment \"An image of a visual machine-readable code such as a barcode or QR code.\" ;\n    rdfs:subClassOf schema:ImageObject .\n\nschema:Beach a rdfs:Class ;\n    rdfs:label \"Beach\" ;\n    rdfs:comment \"Beach.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:BeautySalon a rdfs:Class ;\n    rdfs:label \"BeautySalon\" ;\n    rdfs:comment \"Beauty salon.\" ;\n    rdfs:subClassOf schema:HealthAndBeautyBusiness .\n\nschema:BedAndBreakfast a rdfs:Class ;\n    rdfs:label \"BedAndBreakfast\" ;\n    rdfs:comment \"\"\"Bed and breakfast.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:LodgingBusiness .\n\nschema:BedDetails a rdfs:Class ;\n    rdfs:label \"BedDetails\" ;\n    rdfs:comment \"An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also [[BedType]] (under development).\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:BedType a rdfs:Class ;\n    rdfs:label \"BedType\" ;\n    rdfs:comment \"A type of bed. This is used for indicating the bed or beds available in an accommodation.\" ;\n    rdfs:subClassOf schema:QualitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1262>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:BefriendAction a rdfs:Class ;\n    rdfs:label \"BefriendAction\" ;\n    rdfs:comment \"The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[FollowAction]]: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:BikeStore a rdfs:Class ;\n    rdfs:label \"BikeStore\" ;\n    rdfs:comment \"A bike store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Blog a rdfs:Class ;\n    rdfs:label \"Blog\" ;\n    rdfs:comment \"A blog.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:BlogPosting a rdfs:Class ;\n    rdfs:label \"BlogPosting\" ;\n    rdfs:comment \"A blog post.\" ;\n    rdfs:subClassOf schema:SocialMediaPosting .\n\nschema:BloodTest a rdfs:Class ;\n    rdfs:label \"BloodTest\" ;\n    rdfs:comment \"A medical test performed on a sample of a patient's blood.\" ;\n    rdfs:subClassOf schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:BoardingPolicyType a rdfs:Class ;\n    rdfs:label \"BoardingPolicyType\" ;\n    rdfs:comment \"A type of boarding policy used by an airline.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:BoatReservation a rdfs:Class ;\n    rdfs:label \"BoatReservation\" ;\n    rdfs:comment \"\"\"A reservation for boat travel.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].\"\"\" ;\n    rdfs:subClassOf schema:Reservation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1755> .\n\nschema:BoatTerminal a rdfs:Class ;\n    rdfs:label \"BoatTerminal\" ;\n    rdfs:comment \"A terminal for boats, ships, and other water vessels.\" ;\n    rdfs:subClassOf schema:CivicStructure ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1755> .\n\nschema:BoatTrip a rdfs:Class ;\n    rdfs:label \"BoatTrip\" ;\n    rdfs:comment \"A trip on a commercial ferry line.\" ;\n    rdfs:subClassOf schema:Trip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1755> .\n\nschema:BodyMeasurementTypeEnumeration a rdfs:Class ;\n    rdfs:label \"BodyMeasurementTypeEnumeration\" ;\n    rdfs:comment \"Enumerates types (or dimensions) of a person's body measurements, for example for fitting of clothes.\" ;\n    rdfs:subClassOf schema:MeasurementTypeEnumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyOfWater a rdfs:Class ;\n    rdfs:label \"BodyOfWater\" ;\n    rdfs:comment \"A body of water, such as a sea, ocean, or lake.\" ;\n    rdfs:subClassOf schema:Landform .\n\nschema:Bone a rdfs:Class ;\n    rdfs:label \"Bone\" ;\n    rdfs:comment \"Rigid connective tissue that comprises up the skeletal structure of the human body.\" ;\n    rdfs:subClassOf schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Book a rdfs:Class ;\n    rdfs:label \"Book\" ;\n    rdfs:comment \"A book.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:BookFormatType a rdfs:Class ;\n    rdfs:label \"BookFormatType\" ;\n    rdfs:comment \"The publication format of the book.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:BookSeries a rdfs:Class ;\n    rdfs:label \"BookSeries\" ;\n    rdfs:comment \"A series of books. Included books can be indicated with the hasPart property.\" ;\n    rdfs:subClassOf schema:CreativeWorkSeries .\n\nschema:BookStore a rdfs:Class ;\n    rdfs:label \"BookStore\" ;\n    rdfs:comment \"A bookstore.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:BookmarkAction a rdfs:Class ;\n    rdfs:label \"BookmarkAction\" ;\n    rdfs:comment \"An agent bookmarks/flags/labels/tags/marks an object.\" ;\n    rdfs:subClassOf schema:OrganizeAction .\n\nschema:Boolean a rdfs:Class,\n        schema:DataType ;\n    rdfs:label \"Boolean\" ;\n    rdfs:comment \"Boolean: True or False.\" .\n\nschema:BorrowAction a rdfs:Class ;\n    rdfs:label \"BorrowAction\" ;\n    rdfs:comment \"The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[LendAction]]: Reciprocal of BorrowAction.\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:BowlingAlley a rdfs:Class ;\n    rdfs:label \"BowlingAlley\" ;\n    rdfs:comment \"A bowling alley.\" ;\n    rdfs:subClassOf schema:SportsActivityLocation .\n\nschema:BrainStructure a rdfs:Class ;\n    rdfs:label \"BrainStructure\" ;\n    rdfs:comment \"Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.\" ;\n    rdfs:subClassOf schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Brand a rdfs:Class ;\n    rdfs:label \"Brand\" ;\n    rdfs:comment \"A brand is a name used by an organization or business person for labeling a product, product group, or similar.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:BreadcrumbList a rdfs:Class ;\n    rdfs:label \"BreadcrumbList\" ;\n    rdfs:comment \"\"\"A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.\\\\n\\\\nThe [[position]] property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an [[itemListOrder]] of [[ItemListOrderAscending]] (lower values listed first), and that the first items in this list correspond to the \"top\" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.\n      \"\"\" ;\n    rdfs:subClassOf schema:ItemList .\n\nschema:Brewery a rdfs:Class ;\n    rdfs:label \"Brewery\" ;\n    rdfs:comment \"Brewery.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:Bridge a rdfs:Class ;\n    rdfs:label \"Bridge\" ;\n    rdfs:comment \"A bridge.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:BroadcastChannel a rdfs:Class ;\n    rdfs:label \"BroadcastChannel\" ;\n    rdfs:comment \"A unique instance of a BroadcastService on a CableOrSatelliteService lineup.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:BroadcastEvent a rdfs:Class ;\n    rdfs:label \"BroadcastEvent\" ;\n    rdfs:comment \"An over the air or online broadcast event.\" ;\n    rdfs:subClassOf schema:PublicationEvent .\n\nschema:BroadcastFrequencySpecification a rdfs:Class ;\n    rdfs:label \"BroadcastFrequencySpecification\" ;\n    rdfs:comment \"The frequency in MHz and the modulation used for a particular BroadcastService.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1004> .\n\nschema:BroadcastService a rdfs:Class ;\n    rdfs:label \"BroadcastService\" ;\n    rdfs:comment \"A delivery service through which content is provided via broadcast over the air or online.\" ;\n    rdfs:subClassOf schema:Service .\n\nschema:BrokerageAccount a rdfs:Class ;\n    rdfs:label \"BrokerageAccount\" ;\n    rdfs:comment \"An account that allows an investor to deposit funds and place investment orders with a licensed broker or brokerage firm.\" ;\n    rdfs:subClassOf schema:InvestmentOrDeposit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:BuddhistTemple a rdfs:Class ;\n    rdfs:label \"BuddhistTemple\" ;\n    rdfs:comment \"A Buddhist temple.\" ;\n    rdfs:subClassOf schema:PlaceOfWorship .\n\nschema:BusOrCoach a rdfs:Class ;\n    rdfs:label \"BusOrCoach\" ;\n    rdfs:comment \"A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Coaches are luxury busses, usually in service for long distance travel.\" ;\n    rdfs:subClassOf schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:BusReservation a rdfs:Class ;\n    rdfs:label \"BusReservation\" ;\n    rdfs:comment \"A reservation for bus travel. \\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:BusStation a rdfs:Class ;\n    rdfs:label \"BusStation\" ;\n    rdfs:comment \"A bus station.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:BusStop a rdfs:Class ;\n    rdfs:label \"BusStop\" ;\n    rdfs:comment \"A bus stop.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:BusTrip a rdfs:Class ;\n    rdfs:label \"BusTrip\" ;\n    rdfs:comment \"A trip on a commercial bus line.\" ;\n    rdfs:subClassOf schema:Trip .\n\nschema:BusinessAudience a rdfs:Class ;\n    rdfs:label \"BusinessAudience\" ;\n    rdfs:comment \"A set of characteristics belonging to businesses, e.g. who compose an item's target audience.\" ;\n    rdfs:subClassOf schema:Audience .\n\nschema:BusinessEntityType a rdfs:Class ;\n    rdfs:label \"BusinessEntityType\" ;\n    rdfs:comment \"\"\"A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.\\\\n\\\\nCommonly used values:\\\\n\\\\n* http://purl.org/goodrelations/v1#Business\\\\\\\\n* http://purl.org/goodrelations/v1#Enduser\\\\\\\\n* http://purl.org/goodrelations/v1#PublicInstitution\\\\\\\\n* http://purl.org/goodrelations/v1#Reseller\n\t  \"\"\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:BusinessEvent a rdfs:Class ;\n    rdfs:label \"BusinessEvent\" ;\n    rdfs:comment \"Event type: Business event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:BusinessFunction a rdfs:Class ;\n    rdfs:label \"BusinessFunction\" ;\n    rdfs:comment \"\"\"The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.\\\\n\\\\nCommonly used values:\\\\n\\\\n* http://purl.org/goodrelations/v1#ConstructionInstallation\\\\\\\\n* http://purl.org/goodrelations/v1#Dispose\\\\\\\\n* http://purl.org/goodrelations/v1#LeaseOut\\\\\\\\n* http://purl.org/goodrelations/v1#Maintain\\\\\\\\n* http://purl.org/goodrelations/v1#ProvideService\\\\\\\\n* http://purl.org/goodrelations/v1#Repair\\\\\\\\n* http://purl.org/goodrelations/v1#Sell\\\\\\\\n* http://purl.org/goodrelations/v1#Buy\n        \"\"\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:BuyAction a rdfs:Class ;\n    rdfs:label \"BuyAction\" ;\n    rdfs:comment \"The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:CDCPMDRecord a rdfs:Class ;\n    rdfs:label \"CDCPMDRecord\" ;\n    rdfs:comment \"\"\"A CDCPMDRecord is a data structure representing a record in a CDC tabular data format\n      used for hospital data reporting. See [documentation](/docs/cdc-covid.html) for details, and the linked CDC materials for authoritative\n      definitions used as the source here.\n      \"\"\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:CableOrSatelliteService a rdfs:Class ;\n    rdfs:label \"CableOrSatelliteService\" ;\n    rdfs:comment \"A service which provides access to media programming like TV or radio. Access may be via cable or satellite.\" ;\n    rdfs:subClassOf schema:Service .\n\nschema:CafeOrCoffeeShop a rdfs:Class ;\n    rdfs:label \"CafeOrCoffeeShop\" ;\n    rdfs:comment \"A cafe or coffee shop.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:Campground a rdfs:Class ;\n    rdfs:label \"Campground\" ;\n    rdfs:comment \"\"\"A camping site, campsite, or [[Campground]] is a place used for overnight stay in the outdoors, typically containing individual [[CampingPitch]] locations. \\\\n\\\\n\nIn British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (Source: Wikipedia see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite)).\\\\n\\\\n\n\nSee also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).\n\"\"\" ;\n    rdfs:subClassOf schema:CivicStructure,\n        schema:LodgingBusiness ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:CampingPitch a rdfs:Class ;\n    rdfs:label \"CampingPitch\" ;\n    rdfs:comment \"\"\"A [[CampingPitch]] is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or [[Campground]].\\\\n\\\\n\nIn British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.\n(Source: Wikipedia see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite)).\\\\n\\\\n\nSee also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).\n\"\"\" ;\n    rdfs:subClassOf schema:Accommodation ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:Canal a rdfs:Class ;\n    rdfs:label \"Canal\" ;\n    rdfs:comment \"A canal, like the Panama Canal.\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:CancelAction a rdfs:Class ;\n    rdfs:label \"CancelAction\" ;\n    rdfs:comment \"The act of asserting that a future event/action is no longer going to happen.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[ConfirmAction]]: The antonym of CancelAction.\" ;\n    rdfs:subClassOf schema:PlanAction .\n\nschema:Car a rdfs:Class ;\n    rdfs:label \"Car\" ;\n    rdfs:comment \"A car is a wheeled, self-powered motor vehicle used for transportation.\" ;\n    rdfs:subClassOf schema:Vehicle ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:CarUsageType a rdfs:Class ;\n    rdfs:label \"CarUsageType\" ;\n    rdfs:comment \"A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:Casino a rdfs:Class ;\n    rdfs:label \"Casino\" ;\n    rdfs:comment \"A casino.\" ;\n    rdfs:subClassOf schema:EntertainmentBusiness .\n\nschema:CategoryCode a rdfs:Class ;\n    rdfs:label \"CategoryCode\" ;\n    rdfs:comment \"A Category Code.\" ;\n    rdfs:subClassOf schema:DefinedTerm ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:CategoryCodeSet a rdfs:Class ;\n    rdfs:label \"CategoryCodeSet\" ;\n    rdfs:comment \"A set of Category Code values.\" ;\n    rdfs:subClassOf schema:DefinedTermSet ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:CatholicChurch a rdfs:Class ;\n    rdfs:label \"CatholicChurch\" ;\n    rdfs:comment \"A Catholic church.\" ;\n    rdfs:subClassOf schema:Church .\n\nschema:Cemetery a rdfs:Class ;\n    rdfs:label \"Cemetery\" ;\n    rdfs:comment \"A graveyard.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:Chapter a rdfs:Class ;\n    rdfs:label \"Chapter\" ;\n    rdfs:comment \"One of the sections into which a book is divided. A chapter usually has a section number or a name.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:CheckAction a rdfs:Class ;\n    rdfs:label \"CheckAction\" ;\n    rdfs:comment \"An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.\" ;\n    rdfs:subClassOf schema:FindAction .\n\nschema:CheckInAction a rdfs:Class ;\n    rdfs:label \"CheckInAction\" ;\n    rdfs:comment \"The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).\\\\n\\\\nRelated actions:\\\\n\\\\n* [[CheckOutAction]]: The antonym of CheckInAction.\\\\\\\\n* [[ArriveAction]]: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.\\\\\\\\n* [[ConfirmAction]]: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the *start* of a previously reserved service rather than its validity/existence.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:CheckOutAction a rdfs:Class ;\n    rdfs:label \"CheckOutAction\" ;\n    rdfs:comment \"The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).\\\\n\\\\nRelated actions:\\\\n\\\\n* [[CheckInAction]]: The antonym of CheckOutAction.\\\\\\\\n* [[DepartAction]]: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.\\\\\\\\n* [[CancelAction]]: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:CheckoutPage a rdfs:Class ;\n    rdfs:label \"CheckoutPage\" ;\n    rdfs:comment \"Web page type: Checkout page.\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:ChildCare a rdfs:Class ;\n    rdfs:label \"ChildCare\" ;\n    rdfs:comment \"A Childcare center.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:ChildrensEvent a rdfs:Class ;\n    rdfs:label \"ChildrensEvent\" ;\n    rdfs:comment \"Event type: Children's event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:ChooseAction a rdfs:Class ;\n    rdfs:label \"ChooseAction\" ;\n    rdfs:comment \"The act of expressing a preference from a set of options or a large or unbounded set of choices/options.\" ;\n    rdfs:subClassOf schema:AssessAction .\n\nschema:Church a rdfs:Class ;\n    rdfs:label \"Church\" ;\n    rdfs:comment \"A church.\" ;\n    rdfs:subClassOf schema:PlaceOfWorship .\n\nschema:City a rdfs:Class ;\n    rdfs:label \"City\" ;\n    rdfs:comment \"A city or town.\" ;\n    rdfs:subClassOf schema:AdministrativeArea .\n\nschema:CityHall a rdfs:Class ;\n    rdfs:label \"CityHall\" ;\n    rdfs:comment \"A city hall.\" ;\n    rdfs:subClassOf schema:GovernmentBuilding .\n\nschema:CivicStructure a rdfs:Class ;\n    rdfs:label \"CivicStructure\" ;\n    rdfs:comment \"A public structure, such as a town hall or concert hall.\" ;\n    rdfs:subClassOf schema:Place .\n\nschema:Claim a rdfs:Class ;\n    rdfs:label \"Claim\" ;\n    rdfs:comment \"\"\"A [[Claim]] in Schema.org represents a specific, factually-oriented claim that could be the [[itemReviewed]] in a [[ClaimReview]]. The content of a claim can be summarized with the [[text]] property. Variations on well known claims can have their common identity indicated via [[sameAs]] links, and summarized with a [[name]]. Ideally, a [[Claim]] description includes enough contextual information to minimize the risk of ambiguity or inclarity. In practice, many claims are better understood in the context in which they appear or the interpretations provided by claim reviews.\n\n  Beyond [[ClaimReview]], the Claim type can be associated with related creative works - for example a [[ScholarlyArticle]] or [[Question]] might be [[about]] some [[Claim]].\n\n  At this time, Schema.org does not define any types of relationship between claims. This is a natural area for future exploration.\n  \"\"\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1828> .\n\nschema:ClaimReview a rdfs:Class ;\n    rdfs:label \"ClaimReview\" ;\n    rdfs:comment \"A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).\" ;\n    rdfs:subClassOf schema:Review ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1061> .\n\nschema:Class a rdfs:Class ;\n    rdfs:label \"Class\" ;\n    rdfs:comment \"A class, also often called a 'Type'; equivalent to rdfs:Class.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    ns2:equivalentClass rdfs:Class ;\n    schema:isPartOf <https://meta.schema.org> .\n\nschema:Clip a rdfs:Class ;\n    rdfs:label \"Clip\" ;\n    rdfs:comment \"A short TV or radio program or a segment/part of a program.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:ClothingStore a rdfs:Class ;\n    rdfs:label \"ClothingStore\" ;\n    rdfs:comment \"A clothing store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Code a rdfs:Class ;\n    rdfs:label \"Code\" ;\n    rdfs:comment \"Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:supersededBy schema:SoftwareSourceCode .\n\nschema:Collection a rdfs:Class ;\n    rdfs:label \"Collection\" ;\n    rdfs:comment \"A collection of items e.g. creative works or products.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:CollectionPage a rdfs:Class ;\n    rdfs:label \"CollectionPage\" ;\n    rdfs:comment \"Web page type: Collection page.\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:CollegeOrUniversity a rdfs:Class ;\n    rdfs:label \"CollegeOrUniversity\" ;\n    rdfs:comment \"A college, university, or other third-level educational institution.\" ;\n    rdfs:subClassOf schema:EducationalOrganization .\n\nschema:ComedyClub a rdfs:Class ;\n    rdfs:label \"ComedyClub\" ;\n    rdfs:comment \"A comedy club.\" ;\n    rdfs:subClassOf schema:EntertainmentBusiness .\n\nschema:ComedyEvent a rdfs:Class ;\n    rdfs:label \"ComedyEvent\" ;\n    rdfs:comment \"Event type: Comedy event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:ComicCoverArt a rdfs:Class ;\n    rdfs:label \"ComicCoverArt\" ;\n    rdfs:comment \"The artwork on the cover of a comic.\" ;\n    rdfs:subClassOf schema:ComicStory,\n        schema:CoverArt ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:ComicIssue a rdfs:Class ;\n    rdfs:label \"ComicIssue\" ;\n    rdfs:comment \"\"\"Individual comic issues are serially published as\n    \tpart of a larger series. For the sake of consistency, even one-shot issues\n    \tbelong to a series comprised of a single issue. All comic issues can be\n    \tuniquely identified by: the combination of the name and volume number of the\n    \tseries to which the issue belongs; the issue number; and the variant\n    \tdescription of the issue (if any).\"\"\" ;\n    rdfs:subClassOf schema:PublicationIssue ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:ComicSeries a rdfs:Class ;\n    rdfs:label \"ComicSeries\" ;\n    rdfs:comment \"\"\"A sequential publication of comic stories under a\n    \tunifying title, for example \"The Amazing Spider-Man\" or \"Groo the\n    \tWanderer\".\"\"\" ;\n    rdfs:subClassOf schema:Periodical ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:ComicStory a rdfs:Class ;\n    rdfs:label \"ComicStory\" ;\n    rdfs:comment \"\"\"The term \"story\" is any indivisible, re-printable\n    \tunit of a comic, including the interior stories, covers, and backmatter. Most\n    \tcomics have at least two stories: a cover (ComicCoverArt) and an interior story.\"\"\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:Comment a rdfs:Class ;\n    rdfs:label \"Comment\" ;\n    rdfs:comment \"A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the [[text]] property, and its topic via [[about]], properties shared with all CreativeWorks.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:CommentAction a rdfs:Class ;\n    rdfs:label \"CommentAction\" ;\n    rdfs:comment \"The act of generating a comment about a subject.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:CommunicateAction a rdfs:Class ;\n    rdfs:label \"CommunicateAction\" ;\n    rdfs:comment \"The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:CompleteDataFeed a rdfs:Class ;\n    rdfs:label \"CompleteDataFeed\" ;\n    rdfs:comment \"\"\"A [[CompleteDataFeed]] is a [[DataFeed]] whose standard representation includes content for every item currently in the feed.\n\nThis is the equivalent of Atom's element as defined in Feed Paging and Archiving [RFC 5005](https://tools.ietf.org/html/rfc5005), For example (and as defined for Atom), when using data from a feed that represents a collection of items that varies over time (e.g. \"Top Twenty Records\") there is no need to have newer entries mixed in alongside older, obsolete entries. By marking this feed as a CompleteDataFeed, old entries can be safely discarded when the feed is refreshed, since we can assume the feed has provided descriptions for all current items.\"\"\" ;\n    rdfs:subClassOf schema:DataFeed ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1397> .\n\nschema:CompoundPriceSpecification a rdfs:Class ;\n    rdfs:label \"CompoundPriceSpecification\" ;\n    rdfs:comment \"A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. \\\\\"electricity\\\\\" or \\\\\"final cleaning\\\\\").\" ;\n    rdfs:subClassOf schema:PriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:ComputerLanguage a rdfs:Class ;\n    rdfs:label \"ComputerLanguage\" ;\n    rdfs:comment \"This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the [[Language]] type.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ComputerStore a rdfs:Class ;\n    rdfs:label \"ComputerStore\" ;\n    rdfs:comment \"A computer store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:ConfirmAction a rdfs:Class ;\n    rdfs:label \"ConfirmAction\" ;\n    rdfs:comment \"The act of notifying someone that a future event/action is going to happen as expected.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[CancelAction]]: The antonym of ConfirmAction.\" ;\n    rdfs:subClassOf schema:InformAction .\n\nschema:Consortium a rdfs:Class ;\n    rdfs:label \"Consortium\" ;\n    rdfs:comment \"A Consortium is a membership [[Organization]] whose members are typically Organizations.\" ;\n    rdfs:subClassOf schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1559> .\n\nschema:ConsumeAction a rdfs:Class ;\n    rdfs:label \"ConsumeAction\" ;\n    rdfs:comment \"The act of ingesting information/resources/food.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:ContactPage a rdfs:Class ;\n    rdfs:label \"ContactPage\" ;\n    rdfs:comment \"Web page type: Contact page.\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:ContactPoint a rdfs:Class ;\n    rdfs:label \"ContactPoint\" ;\n    rdfs:comment \"A contact point&#x2014;for example, a Customer Complaints department.\" ;\n    rdfs:subClassOf schema:StructuredValue .\n\nschema:ContactPointOption a rdfs:Class ;\n    rdfs:label \"ContactPointOption\" ;\n    rdfs:comment \"Enumerated options related to a ContactPoint.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:Continent a rdfs:Class ;\n    rdfs:label \"Continent\" ;\n    rdfs:comment \"One of the continents (for example, Europe or Africa).\" ;\n    rdfs:subClassOf schema:Landform .\n\nschema:ControlAction a rdfs:Class ;\n    rdfs:label \"ControlAction\" ;\n    rdfs:comment \"An agent controls a device or application.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:ConvenienceStore a rdfs:Class ;\n    rdfs:label \"ConvenienceStore\" ;\n    rdfs:comment \"A convenience store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Conversation a rdfs:Class ;\n    rdfs:label \"Conversation\" ;\n    rdfs:comment \"One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:CookAction a rdfs:Class ;\n    rdfs:label \"CookAction\" ;\n    rdfs:comment \"The act of producing/preparing food.\" ;\n    rdfs:subClassOf schema:CreateAction .\n\nschema:Corporation a rdfs:Class ;\n    rdfs:label \"Corporation\" ;\n    rdfs:comment \"Organization: A business corporation.\" ;\n    rdfs:subClassOf schema:Organization ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> .\n\nschema:CorrectionComment a rdfs:Class ;\n    rdfs:label \"CorrectionComment\" ;\n    rdfs:comment \"A [[comment]] that corrects [[CreativeWork]].\" ;\n    rdfs:subClassOf schema:Comment ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1950> .\n\nschema:Country a rdfs:Class ;\n    rdfs:label \"Country\" ;\n    rdfs:comment \"A country.\" ;\n    rdfs:subClassOf schema:AdministrativeArea .\n\nschema:Course a rdfs:Class ;\n    rdfs:label \"Course\" ;\n    rdfs:comment \"A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:LearningResource .\n\nschema:CourseInstance a rdfs:Class ;\n    rdfs:label \"CourseInstance\" ;\n    rdfs:comment \"An instance of a [[Course]] which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:Courthouse a rdfs:Class ;\n    rdfs:label \"Courthouse\" ;\n    rdfs:comment \"A courthouse.\" ;\n    rdfs:subClassOf schema:GovernmentBuilding .\n\nschema:CoverArt a rdfs:Class ;\n    rdfs:label \"CoverArt\" ;\n    rdfs:comment \"The artwork on the outer surface of a CreativeWork.\" ;\n    rdfs:subClassOf schema:VisualArtwork ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:CovidTestingFacility a rdfs:Class ;\n    rdfs:label \"CovidTestingFacility\" ;\n    rdfs:comment \"\"\"A CovidTestingFacility is a [[MedicalClinic]] where testing for the COVID-19 Coronavirus\n      disease is available. If the facility is being made available from an established [[Pharmacy]], [[Hotel]], or other\n      non-medical organization, multiple types can be listed. This makes it easier to re-use existing schema.org information\n      about that place e.g. contact info, address, opening hours. Note that in an emergency, such information may not always be reliable.\n      \"\"\" ;\n    rdfs:subClassOf schema:MedicalClinic ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:CreateAction a rdfs:Class ;\n    rdfs:label \"CreateAction\" ;\n    rdfs:comment \"The act of deliberately creating/producing/generating/building a result out of the agent.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:CreativeWork a rdfs:Class ;\n    rdfs:label \"CreativeWork\" ;\n    rdfs:comment \"The most generic kind of creative work, including books, movies, photographs, software programs, etc.\" ;\n    rdfs:subClassOf schema:Thing ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> .\n\nschema:CreativeWorkSeason a rdfs:Class ;\n    rdfs:label \"CreativeWorkSeason\" ;\n    rdfs:comment \"A media season e.g. tv, radio, video game etc.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:CreativeWorkSeries a rdfs:Class ;\n    rdfs:label \"CreativeWorkSeries\" ;\n    rdfs:comment \"\"\"A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike [[ItemList]] which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).\\\\n\\\\nSpecific subtypes are available for describing [[TVSeries]], [[RadioSeries]], [[MovieSeries]], [[BookSeries]], [[Periodical]] and [[VideoGameSeries]]. In each case, the [[hasPart]] / [[isPartOf]] properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.\\\\n\\\\nIt is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.\n\t  \"\"\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:Series .\n\nschema:CreditCard a rdfs:Class ;\n    rdfs:label \"CreditCard\" ;\n    rdfs:comment \"\"\"A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.\\\\n\\\\nCommonly used values:\\\\n\\\\n* http://purl.org/goodrelations/v1#AmericanExpress\\\\\\\\n* http://purl.org/goodrelations/v1#DinersClub\\\\\\\\n* http://purl.org/goodrelations/v1#Discover\\\\\\\\n* http://purl.org/goodrelations/v1#JCB\\\\\\\\n* http://purl.org/goodrelations/v1#MasterCard\\\\\\\\n* http://purl.org/goodrelations/v1#VISA\n       \"\"\" ;\n    rdfs:subClassOf schema:LoanOrCredit,\n        schema:PaymentCard ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:Crematorium a rdfs:Class ;\n    rdfs:label \"Crematorium\" ;\n    rdfs:comment \"A crematorium.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:CriticReview a rdfs:Class ;\n    rdfs:label \"CriticReview\" ;\n    rdfs:comment \"A [[CriticReview]] is a more specialized form of Review written or published by a source that is recognized for its reviewing activities. These can include online columns, travel and food guides, TV and radio shows, blogs and other independent Web sites. [[CriticReview]]s are typically more in-depth and professionally written. For simpler, casually written user/visitor/viewer/customer reviews, it is more appropriate to use the [[UserReview]] type. Review aggregator sites such as Metacritic already separate out the site's user reviews from selected critic reviews that originate from third-party sources.\" ;\n    rdfs:subClassOf schema:Review ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1589> .\n\nschema:CssSelectorType a rdfs:Class ;\n    rdfs:label \"CssSelectorType\" ;\n    rdfs:comment \"Text representing a CSS selector.\" ;\n    rdfs:subClassOf schema:Text ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1672> .\n\nschema:CurrencyConversionService a rdfs:Class ;\n    rdfs:label \"CurrencyConversionService\" ;\n    rdfs:comment \"A service to convert funds from one currency to another currency.\" ;\n    rdfs:subClassOf schema:FinancialProduct ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:DDxElement a rdfs:Class ;\n    rdfs:label \"DDxElement\" ;\n    rdfs:comment \"An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.\" ;\n    rdfs:subClassOf schema:MedicalIntangible ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DanceEvent a rdfs:Class ;\n    rdfs:label \"DanceEvent\" ;\n    rdfs:comment \"Event type: A social dance.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:DanceGroup a rdfs:Class ;\n    rdfs:label \"DanceGroup\" ;\n    rdfs:comment \"A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.\" ;\n    rdfs:subClassOf schema:PerformingGroup .\n\nschema:DataCatalog a rdfs:Class ;\n    rdfs:label \"DataCatalog\" ;\n    rdfs:comment \"A collection of datasets.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    ns2:equivalentClass <http://www.w3.org/ns/dcat#Catalog> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass> .\n\nschema:DataDownload a rdfs:Class ;\n    rdfs:label \"DataDownload\" ;\n    rdfs:comment \"A dataset in downloadable form.\" ;\n    rdfs:subClassOf schema:MediaObject ;\n    ns2:equivalentClass <http://www.w3.org/ns/dcat#Distribution> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass> .\n\nschema:DataFeed a rdfs:Class ;\n    rdfs:label \"DataFeed\" ;\n    rdfs:comment \"A single feed providing structured information about one or more entities or topics.\" ;\n    rdfs:subClassOf schema:Dataset .\n\nschema:DataFeedItem a rdfs:Class ;\n    rdfs:label \"DataFeedItem\" ;\n    rdfs:comment \"A single item within a larger data feed.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:DataType a rdfs:Class ;\n    rdfs:label \"DataType\" ;\n    rdfs:comment \"The basic data types such as Integers, Strings, etc.\" ;\n    rdfs:subClassOf rdfs:Class .\n\nschema:Dataset a rdfs:Class ;\n    rdfs:label \"Dataset\" ;\n    rdfs:comment \"A body of structured information describing some topic(s) of interest.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    ns2:equivalentClass <http://purl.org/dc/dcmitype/Dataset>,\n        <http://rdfs.org/ns/void#Dataset>,\n        <http://www.w3.org/ns/dcat#Dataset> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass> .\n\nschema:Date a rdfs:Class,\n        schema:DataType ;\n    rdfs:label \"Date\" ;\n    rdfs:comment \"A date value in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).\" .\n\nschema:DateTime a rdfs:Class,\n        schema:DataType ;\n    rdfs:label \"DateTime\" ;\n    rdfs:comment \"A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).\" .\n\nschema:DatedMoneySpecification a rdfs:Class ;\n    rdfs:label \"DatedMoneySpecification\" ;\n    rdfs:comment \"A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. __Note:__ This type has been superseded by [[MonetaryAmount]] use of that type is recommended\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:supersededBy schema:MonetaryAmount .\n\nschema:DayOfWeek a rdfs:Class ;\n    rdfs:label \"DayOfWeek\" ;\n    rdfs:comment \"\"\"The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.\n\nOriginally, URLs from [GoodRelations](http://purl.org/goodrelations/v1) were used (for [[Monday]], [[Tuesday]], [[Wednesday]], [[Thursday]], [[Friday]], [[Saturday]], [[Sunday]] plus a special entry for [[PublicHolidays]]); these have now been integrated directly into schema.org.\n      \"\"\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:DaySpa a rdfs:Class ;\n    rdfs:label \"DaySpa\" ;\n    rdfs:comment \"A day spa.\" ;\n    rdfs:subClassOf schema:HealthAndBeautyBusiness .\n\nschema:DeactivateAction a rdfs:Class ;\n    rdfs:label \"DeactivateAction\" ;\n    rdfs:comment \"The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).\" ;\n    rdfs:subClassOf schema:ControlAction .\n\nschema:DefenceEstablishment a rdfs:Class ;\n    rdfs:label \"DefenceEstablishment\" ;\n    rdfs:comment \"A defence establishment, such as an army or navy base.\" ;\n    rdfs:subClassOf schema:GovernmentBuilding .\n\nschema:DefinedRegion a rdfs:Class ;\n    rdfs:label \"DefinedRegion\" ;\n    rdfs:comment \"\"\"A DefinedRegion is a geographic area defined by potentially arbitrary (rather than political, administrative or natural geographical) criteria. Properties are provided for defining a region by reference to sets of postal codes.\n\nExamples: a delivery destination when shopping. Region where regional pricing is configured.\n\nRequirement 1:\nCountry: US\nStates: \"NY\", \"CA\"\n\nRequirement 2:\nCountry: US\nPostalCode Set: { [94000-94585], [97000, 97999], [13000, 13599]}\n{ [12345, 12345], [78945, 78945], }\nRegion = state, canton, prefecture, autonomous community...\n\"\"\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:DefinedTerm a rdfs:Class ;\n    rdfs:label \"DefinedTerm\" ;\n    rdfs:comment \"A word, name, acronym, phrase, etc. with a formal definition. Often used in the context of category or subject classification, glossaries or dictionaries, product or creative work types, etc. Use the name property for the term being defined, use termCode if the term has an alpha-numeric code allocated, use description to provide the definition of the term.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:DefinedTermSet a rdfs:Class ;\n    rdfs:label \"DefinedTermSet\" ;\n    rdfs:comment \"A set of defined terms for example a set of categories or a classification scheme, a glossary, dictionary or enumeration.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:DeleteAction a rdfs:Class ;\n    rdfs:label \"DeleteAction\" ;\n    rdfs:comment \"The act of editing a recipient by removing one of its objects.\" ;\n    rdfs:subClassOf schema:UpdateAction .\n\nschema:DeliveryChargeSpecification a rdfs:Class ;\n    rdfs:label \"DeliveryChargeSpecification\" ;\n    rdfs:comment \"The price for the delivery of an offer using a particular delivery method.\" ;\n    rdfs:subClassOf schema:PriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:DeliveryEvent a rdfs:Class ;\n    rdfs:label \"DeliveryEvent\" ;\n    rdfs:comment \"An event involving the delivery of an item.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:DeliveryMethod a rdfs:Class ;\n    rdfs:label \"DeliveryMethod\" ;\n    rdfs:comment \"\"\"A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.\\\\n\\\\nCommonly used values:\\\\n\\\\n* http://purl.org/goodrelations/v1#DeliveryModeDirectDownload\\\\\\\\n* http://purl.org/goodrelations/v1#DeliveryModeFreight\\\\\\\\n* http://purl.org/goodrelations/v1#DeliveryModeMail\\\\\\\\n* http://purl.org/goodrelations/v1#DeliveryModeOwnFleet\\\\\\\\n* http://purl.org/goodrelations/v1#DeliveryModePickUp\\\\\\\\n* http://purl.org/goodrelations/v1#DHL\\\\\\\\n* http://purl.org/goodrelations/v1#FederalExpress\\\\\\\\n* http://purl.org/goodrelations/v1#UPS\n        \"\"\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:DeliveryTimeSettings a rdfs:Class ;\n    rdfs:label \"DeliveryTimeSettings\" ;\n    rdfs:comment \"A DeliveryTimeSettings represents re-usable pieces of shipping information, relating to timing. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of a [[OfferShippingDetails]]. Several occurrences can be published, distinguished (and identified/referenced) by their different values for [[transitTimeLabel]].\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:Demand a rdfs:Class ;\n    rdfs:label \"Demand\" ;\n    rdfs:comment \"A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:Dentist a rdfs:Class ;\n    rdfs:label \"Dentist\" ;\n    rdfs:comment \"A dentist.\" ;\n    rdfs:subClassOf schema:LocalBusiness,\n        schema:MedicalBusiness,\n        schema:MedicalOrganization .\n\nschema:DepartAction a rdfs:Class ;\n    rdfs:label \"DepartAction\" ;\n    rdfs:comment \"The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants.\" ;\n    rdfs:subClassOf schema:MoveAction .\n\nschema:DepartmentStore a rdfs:Class ;\n    rdfs:label \"DepartmentStore\" ;\n    rdfs:comment \"A department store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:DepositAccount a rdfs:Class ;\n    rdfs:label \"DepositAccount\" ;\n    rdfs:comment \"A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.\" ;\n    rdfs:subClassOf schema:BankAccount,\n        schema:InvestmentOrDeposit ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:DiagnosticLab a rdfs:Class ;\n    rdfs:label \"DiagnosticLab\" ;\n    rdfs:comment \"A medical laboratory that offers on-site or off-site diagnostic services.\" ;\n    rdfs:subClassOf schema:MedicalOrganization ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DiagnosticProcedure a rdfs:Class ;\n    rdfs:label \"DiagnosticProcedure\" ;\n    rdfs:comment \"A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.\" ;\n    rdfs:subClassOf schema:MedicalProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Diet a rdfs:Class ;\n    rdfs:label \"Diet\" ;\n    rdfs:comment \"A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:LifestyleModification ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DietarySupplement a rdfs:Class ;\n    rdfs:label \"DietarySupplement\" ;\n    rdfs:comment \"A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.\" ;\n    rdfs:subClassOf schema:Substance ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DigitalDocument a rdfs:Class ;\n    rdfs:label \"DigitalDocument\" ;\n    rdfs:comment \"An electronic file or document.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:DigitalDocumentPermission a rdfs:Class ;\n    rdfs:label \"DigitalDocumentPermission\" ;\n    rdfs:comment \"A permission for a particular person or group to access a particular file.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:DigitalDocumentPermissionType a rdfs:Class ;\n    rdfs:label \"DigitalDocumentPermissionType\" ;\n    rdfs:comment \"A type of permission which can be granted for accessing a digital document.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:DisagreeAction a rdfs:Class ;\n    rdfs:label \"DisagreeAction\" ;\n    rdfs:comment \"The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.\" ;\n    rdfs:subClassOf schema:ReactAction .\n\nschema:DiscoverAction a rdfs:Class ;\n    rdfs:label \"DiscoverAction\" ;\n    rdfs:comment \"The act of discovering/finding an object.\" ;\n    rdfs:subClassOf schema:FindAction .\n\nschema:DiscussionForumPosting a rdfs:Class ;\n    rdfs:label \"DiscussionForumPosting\" ;\n    rdfs:comment \"A posting to a discussion forum.\" ;\n    rdfs:subClassOf schema:SocialMediaPosting .\n\nschema:DislikeAction a rdfs:Class ;\n    rdfs:label \"DislikeAction\" ;\n    rdfs:comment \"The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.\" ;\n    rdfs:subClassOf schema:ReactAction .\n\nschema:Distance a rdfs:Class ;\n    rdfs:label \"Distance\" ;\n    rdfs:comment \"Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.\" ;\n    rdfs:subClassOf schema:Quantity .\n\nschema:Distillery a rdfs:Class ;\n    rdfs:label \"Distillery\" ;\n    rdfs:comment \"A distillery.\" ;\n    rdfs:subClassOf schema:FoodEstablishment ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/743> .\n\nschema:DonateAction a rdfs:Class ;\n    rdfs:label \"DonateAction\" ;\n    rdfs:comment \"The act of providing goods, services, or money without compensation, often for philanthropic reasons.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:DoseSchedule a rdfs:Class ;\n    rdfs:label \"DoseSchedule\" ;\n    rdfs:comment \"A specific dosing schedule for a drug or supplement.\" ;\n    rdfs:subClassOf schema:MedicalIntangible ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DownloadAction a rdfs:Class ;\n    rdfs:label \"DownloadAction\" ;\n    rdfs:comment \"The act of downloading an object.\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:DrawAction a rdfs:Class ;\n    rdfs:label \"DrawAction\" ;\n    rdfs:comment \"The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.\" ;\n    rdfs:subClassOf schema:CreateAction .\n\nschema:Drawing a rdfs:Class ;\n    rdfs:label \"Drawing\" ;\n    rdfs:comment \"A picture or diagram made with a pencil, pen, or crayon rather than paint.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1448> .\n\nschema:DrinkAction a rdfs:Class ;\n    rdfs:label \"DrinkAction\" ;\n    rdfs:comment \"The act of swallowing liquids.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:DriveWheelConfigurationValue a rdfs:Class ;\n    rdfs:label \"DriveWheelConfigurationValue\" ;\n    rdfs:comment \"A value indicating which roadwheels will receive torque.\" ;\n    rdfs:subClassOf schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:Drug a rdfs:Class ;\n    rdfs:label \"Drug\" ;\n    rdfs:comment \"A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism. Here the term drug is used interchangeably with the term medicine although clinical knowledge make a clear difference between them.\" ;\n    rdfs:subClassOf schema:Substance ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/410942007> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DrugClass a rdfs:Class ;\n    rdfs:label \"DrugClass\" ;\n    rdfs:comment \"A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DrugCost a rdfs:Class ;\n    rdfs:label \"DrugCost\" ;\n    rdfs:comment \"The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DrugCostCategory a rdfs:Class ;\n    rdfs:label \"DrugCostCategory\" ;\n    rdfs:comment \"Enumerated categories of medical drug costs.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DrugLegalStatus a rdfs:Class ;\n    rdfs:label \"DrugLegalStatus\" ;\n    rdfs:comment \"The legal availability status of a medical drug.\" ;\n    rdfs:subClassOf schema:MedicalIntangible ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DrugPregnancyCategory a rdfs:Class ;\n    rdfs:label \"DrugPregnancyCategory\" ;\n    rdfs:comment \"Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DrugPrescriptionStatus a rdfs:Class ;\n    rdfs:label \"DrugPrescriptionStatus\" ;\n    rdfs:comment \"Indicates whether this drug is available by prescription or over-the-counter.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DrugStrength a rdfs:Class ;\n    rdfs:label \"DrugStrength\" ;\n    rdfs:comment \"A specific strength in which a medical drug is available in a specific country.\" ;\n    rdfs:subClassOf schema:MedicalIntangible ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DryCleaningOrLaundry a rdfs:Class ;\n    rdfs:label \"DryCleaningOrLaundry\" ;\n    rdfs:comment \"A dry-cleaning business.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:Duration a rdfs:Class ;\n    rdfs:label \"Duration\" ;\n    rdfs:comment \"Quantity: Duration (use [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601)).\" ;\n    rdfs:subClassOf schema:Quantity .\n\nschema:EUEnergyEfficiencyEnumeration a rdfs:Class ;\n    rdfs:label \"EUEnergyEfficiencyEnumeration\" ;\n    rdfs:comment \"Enumerates the EU energy efficiency classes A-G as well as A+, A++, and A+++ as defined in EU directive 2017/1369.\" ;\n    rdfs:subClassOf schema:EnergyEfficiencyEnumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EatAction a rdfs:Class ;\n    rdfs:label \"EatAction\" ;\n    rdfs:comment \"The act of swallowing solid objects.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:EducationEvent a rdfs:Class ;\n    rdfs:label \"EducationEvent\" ;\n    rdfs:comment \"Event type: Education event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:EducationalAudience a rdfs:Class ;\n    rdfs:label \"EducationalAudience\" ;\n    rdfs:comment \"An EducationalAudience.\" ;\n    rdfs:subClassOf schema:Audience ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass> .\n\nschema:EducationalOccupationalCredential a rdfs:Class ;\n    rdfs:label \"EducationalOccupationalCredential\" ;\n    rdfs:comment \"An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:EducationalOccupationalProgram a rdfs:Class ;\n    rdfs:label \"EducationalOccupationalProgram\" ;\n    rdfs:comment \"A program offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. This would define a discrete set of opportunities (e.g., job, courses) that together constitute a program with a clear start, end, set of requirements, and transition to a new occupational opportunity (e.g., a job), or sometimes a higher educational opportunity (e.g., an advanced degree).\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:EducationalOrganization a rdfs:Class ;\n    rdfs:label \"EducationalOrganization\" ;\n    rdfs:comment \"An educational organization.\" ;\n    rdfs:subClassOf schema:CivicStructure,\n        schema:Organization .\n\nschema:Electrician a rdfs:Class ;\n    rdfs:label \"Electrician\" ;\n    rdfs:comment \"An electrician.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:ElectronicsStore a rdfs:Class ;\n    rdfs:label \"ElectronicsStore\" ;\n    rdfs:comment \"An electronics store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:ElementarySchool a rdfs:Class ;\n    rdfs:label \"ElementarySchool\" ;\n    rdfs:comment \"An elementary school.\" ;\n    rdfs:subClassOf schema:EducationalOrganization .\n\nschema:EmailMessage a rdfs:Class ;\n    rdfs:label \"EmailMessage\" ;\n    rdfs:comment \"An email message.\" ;\n    rdfs:subClassOf schema:Message .\n\nschema:Embassy a rdfs:Class ;\n    rdfs:label \"Embassy\" ;\n    rdfs:comment \"An embassy.\" ;\n    rdfs:subClassOf schema:GovernmentBuilding .\n\nschema:EmergencyService a rdfs:Class ;\n    rdfs:label \"EmergencyService\" ;\n    rdfs:comment \"An emergency service, such as a fire station or ER.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:EmployeeRole a rdfs:Class ;\n    rdfs:label \"EmployeeRole\" ;\n    rdfs:comment \"A subclass of OrganizationRole used to describe employee relationships.\" ;\n    rdfs:subClassOf schema:OrganizationRole .\n\nschema:EmployerAggregateRating a rdfs:Class ;\n    rdfs:label \"EmployerAggregateRating\" ;\n    rdfs:comment \"An aggregate rating of an Organization related to its role as an employer.\" ;\n    rdfs:subClassOf schema:AggregateRating ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1689> .\n\nschema:EmployerReview a rdfs:Class ;\n    rdfs:label \"EmployerReview\" ;\n    rdfs:comment \"An [[EmployerReview]] is a review of an [[Organization]] regarding its role as an employer, written by a current or former employee of that organization.\" ;\n    rdfs:subClassOf schema:Review ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1589> .\n\nschema:EmploymentAgency a rdfs:Class ;\n    rdfs:label \"EmploymentAgency\" ;\n    rdfs:comment \"An employment agency.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:EndorseAction a rdfs:Class ;\n    rdfs:label \"EndorseAction\" ;\n    rdfs:comment \"An agent approves/certifies/likes/supports/sanction an object.\" ;\n    rdfs:subClassOf schema:ReactAction .\n\nschema:EndorsementRating a rdfs:Class ;\n    rdfs:label \"EndorsementRating\" ;\n    rdfs:comment \"\"\"An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a \"critic's pick\" blog, a\n\"Like\" or \"+1\" on a social network. It can be considered the [[result]] of an [[EndorseAction]] in which the [[object]] of the action is rated positively by\nsome [[agent]]. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the [[Action]].\n\nAn [[EndorsementRating]] may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,\nendorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.\n\"\"\" ;\n    rdfs:subClassOf schema:Rating ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1293> .\n\nschema:Energy a rdfs:Class ;\n    rdfs:label \"Energy\" ;\n    rdfs:comment \"Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.\" ;\n    rdfs:subClassOf schema:Quantity .\n\nschema:EnergyConsumptionDetails a rdfs:Class ;\n    rdfs:label \"EnergyConsumptionDetails\" ;\n    rdfs:comment \"EnergyConsumptionDetails represents information related to the energy efficiency of a product that consumes energy. The information that can be provided is based on international regulations such as for example [EU directive 2017/1369](https://eur-lex.europa.eu/eli/reg/2017/1369/oj) for energy labeling and the [Energy labeling rule](https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/energy-water-use-labeling-consumer) under the Energy Policy and Conservation Act (EPCA) in the US.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EnergyEfficiencyEnumeration a rdfs:Class ;\n    rdfs:label \"EnergyEfficiencyEnumeration\" ;\n    rdfs:comment \"Enumerates energy efficiency levels (also known as \\\\\"classes\\\\\" or \\\\\"ratings\\\\\") and certifications that are part of several international energy efficiency standards.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EnergyStarEnergyEfficiencyEnumeration a rdfs:Class ;\n    rdfs:label \"EnergyStarEnergyEfficiencyEnumeration\" ;\n    rdfs:comment \"Used to indicate whether a product is EnergyStar certified.\" ;\n    rdfs:subClassOf schema:EnergyEfficiencyEnumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EngineSpecification a rdfs:Class ;\n    rdfs:label \"EngineSpecification\" ;\n    rdfs:comment \"Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:EntertainmentBusiness a rdfs:Class ;\n    rdfs:label \"EntertainmentBusiness\" ;\n    rdfs:comment \"A business providing entertainment.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:EntryPoint a rdfs:Class ;\n    rdfs:label \"EntryPoint\" ;\n    rdfs:comment \"An entry point, within some Web-based protocol.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass> .\n\nschema:Enumeration a rdfs:Class ;\n    rdfs:label \"Enumeration\" ;\n    rdfs:comment \"Lists or enumerationsâ€”for example, a list of cuisines or music genres, etc.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:Episode a rdfs:Class ;\n    rdfs:label \"Episode\" ;\n    rdfs:comment \"A media episode (e.g. TV, radio, video game) which can be part of a series or season.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:Event a rdfs:Class ;\n    rdfs:label \"Event\" ;\n    rdfs:comment \"An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the [[offers]] property. Repeated events may be structured as separate Event objects.\" ;\n    rdfs:subClassOf schema:Thing ;\n    ns2:equivalentClass <http://purl.org/dc/dcmitype/Event> .\n\nschema:EventAttendanceModeEnumeration a rdfs:Class ;\n    rdfs:label \"EventAttendanceModeEnumeration\" ;\n    rdfs:comment \"An EventAttendanceModeEnumeration value is one of potentially several modes of organising an event, relating to whether it is online or offline.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:EventReservation a rdfs:Class ;\n    rdfs:label \"EventReservation\" ;\n    rdfs:comment \"A reservation for an event like a concert, sporting event, or lecture.\\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:EventSeries a rdfs:Class ;\n    rdfs:label \"EventSeries\" ;\n    rdfs:comment \"\"\"A series of [[Event]]s. Included events can relate with the series using the [[superEvent]] property.\n\nAn EventSeries is a collection of events that share some unifying characteristic. For example, \"The Olympic Games\" is a series, which\nis repeated regularly. The \"2012 London Olympics\" can be presented both as an [[Event]] in the series \"Olympic Games\", and as an\n[[EventSeries]] that included a number of sporting competitions as Events.\n\nThe nature of the association between the events in an [[EventSeries]] can vary, but typical examples could\ninclude a thematic event series (e.g. topical meetups or classes), or a series of regular events that share a location, attendee group and/or organizers.\n\nEventSeries has been defined as a kind of Event to make it easy for publishers to use it in an Event context without\nworrying about which kinds of series are really event-like enough to call an Event. In general an EventSeries\nmay seem more Event-like when the period of time is compact and when aspects such as location are fixed, but\nit may also sometimes prove useful to describe a longer-term series as an Event.\n   \"\"\" ;\n    rdfs:subClassOf schema:Event,\n        schema:Series ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/447> .\n\nschema:EventStatusType a rdfs:Class ;\n    rdfs:label \"EventStatusType\" ;\n    rdfs:comment \"EventStatusType is an enumeration type whose instances represent several states that an Event may be in.\" ;\n    rdfs:subClassOf schema:StatusEnumeration .\n\nschema:EventVenue a rdfs:Class ;\n    rdfs:label \"EventVenue\" ;\n    rdfs:comment \"An event venue.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:ExchangeRateSpecification a rdfs:Class ;\n    rdfs:label \"ExchangeRateSpecification\" ;\n    rdfs:comment \"A structured value representing exchange rate.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:ExerciseAction a rdfs:Class ;\n    rdfs:label \"ExerciseAction\" ;\n    rdfs:comment \"The act of participating in exertive activity for the purposes of improving health and fitness.\" ;\n    rdfs:subClassOf schema:PlayAction .\n\nschema:ExerciseGym a rdfs:Class ;\n    rdfs:label \"ExerciseGym\" ;\n    rdfs:comment \"A gym.\" ;\n    rdfs:subClassOf schema:SportsActivityLocation .\n\nschema:ExercisePlan a rdfs:Class ;\n    rdfs:label \"ExercisePlan\" ;\n    rdfs:comment \"Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:PhysicalActivity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ExhibitionEvent a rdfs:Class ;\n    rdfs:label \"ExhibitionEvent\" ;\n    rdfs:comment \"Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:FAQPage a rdfs:Class ;\n    rdfs:label \"FAQPage\" ;\n    rdfs:comment \"A [[FAQPage]] is a [[WebPage]] presenting one or more \\\\\"[Frequently asked questions](https://en.wikipedia.org/wiki/FAQ)\\\\\" (see also [[QAPage]]).\" ;\n    rdfs:subClassOf schema:WebPage ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1723> .\n\nschema:FMRadioChannel a rdfs:Class ;\n    rdfs:label \"FMRadioChannel\" ;\n    rdfs:comment \"A radio channel that uses FM.\" ;\n    rdfs:subClassOf schema:RadioChannel ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1004> .\n\nschema:FastFoodRestaurant a rdfs:Class ;\n    rdfs:label \"FastFoodRestaurant\" ;\n    rdfs:comment \"A fast-food restaurant.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:Festival a rdfs:Class ;\n    rdfs:label \"Festival\" ;\n    rdfs:comment \"Event type: Festival.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:FilmAction a rdfs:Class ;\n    rdfs:label \"FilmAction\" ;\n    rdfs:comment \"The act of capturing sound and moving images on film, video, or digitally.\" ;\n    rdfs:subClassOf schema:CreateAction .\n\nschema:FinancialProduct a rdfs:Class ;\n    rdfs:label \"FinancialProduct\" ;\n    rdfs:comment \"A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.\" ;\n    rdfs:subClassOf schema:Service ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:FinancialService a rdfs:Class ;\n    rdfs:label \"FinancialService\" ;\n    rdfs:comment \"Financial services business.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:FindAction a rdfs:Class ;\n    rdfs:label \"FindAction\" ;\n    rdfs:comment \"The act of finding an object.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[SearchAction]]: FindAction is generally lead by a SearchAction, but not necessarily.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:FireStation a rdfs:Class ;\n    rdfs:label \"FireStation\" ;\n    rdfs:comment \"A fire station. With firemen.\" ;\n    rdfs:subClassOf schema:CivicStructure,\n        schema:EmergencyService .\n\nschema:Flight a rdfs:Class ;\n    rdfs:label \"Flight\" ;\n    rdfs:comment \"An airline flight.\" ;\n    rdfs:subClassOf schema:Trip .\n\nschema:FlightReservation a rdfs:Class ;\n    rdfs:label \"FlightReservation\" ;\n    rdfs:comment \"A reservation for air travel.\\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:Float a rdfs:Class ;\n    rdfs:label \"Float\" ;\n    rdfs:comment \"Data type: Floating number.\" ;\n    rdfs:subClassOf schema:Number .\n\nschema:FloorPlan a rdfs:Class ;\n    rdfs:label \"FloorPlan\" ;\n    rdfs:comment \"A FloorPlan is an explicit representation of a collection of similar accommodations, allowing the provision of common information (room counts, sizes, layout diagrams) and offers for rental or sale. In typical use, some [[ApartmentComplex]] has an [[accommodationFloorPlan]] which is a [[FloorPlan]].  A FloorPlan is always in the context of a particular place, either a larger [[ApartmentComplex]] or a single [[Apartment]]. The visual/spatial aspects of a floor plan (i.e. room layout, [see wikipedia](https://en.wikipedia.org/wiki/Floor_plan)) can be indicated using [[image]]. \" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:Florist a rdfs:Class ;\n    rdfs:label \"Florist\" ;\n    rdfs:comment \"A florist.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:FollowAction a rdfs:Class ;\n    rdfs:label \"FollowAction\" ;\n    rdfs:comment \"The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[BefriendAction]]: Unlike BefriendAction, FollowAction implies that the connection is *not* necessarily reciprocal.\\\\\\\\n* [[SubscribeAction]]: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.\\\\\\\\n* [[RegisterAction]]: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.\\\\\\\\n* [[JoinAction]]: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.\\\\\\\\n* [[TrackAction]]: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:FoodEstablishment a rdfs:Class ;\n    rdfs:label \"FoodEstablishment\" ;\n    rdfs:comment \"A food-related business.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:FoodEstablishmentReservation a rdfs:Class ;\n    rdfs:label \"FoodEstablishmentReservation\" ;\n    rdfs:comment \"A reservation to dine at a food-related business.\\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:FoodEvent a rdfs:Class ;\n    rdfs:label \"FoodEvent\" ;\n    rdfs:comment \"Event type: Food event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:FoodService a rdfs:Class ;\n    rdfs:label \"FoodService\" ;\n    rdfs:comment \"A food service, like breakfast, lunch, or dinner.\" ;\n    rdfs:subClassOf schema:Service ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:FundingAgency a rdfs:Class ;\n    rdfs:label \"FundingAgency\" ;\n    rdfs:comment \"\"\"A FundingAgency is an organization that implements one or more [[FundingScheme]]s and manages\n    the granting process (via [[Grant]]s, typically [[MonetaryGrant]]s).\n    A funding agency is not always required for grant funding, e.g. philanthropic giving, corporate sponsorship etc.\n    \nExamples of funding agencies include ERC, REA, NIH, Bill and Melinda Gates Foundation...\n    \"\"\" ;\n    rdfs:subClassOf schema:Project ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/383>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FundInfoCollab> .\n\nschema:FundingScheme a rdfs:Class ;\n    rdfs:label \"FundingScheme\" ;\n    rdfs:comment \"\"\"A FundingScheme combines organizational, project and policy aspects of grant-based funding\n    that sets guidelines, principles and mechanisms to support other kinds of projects and activities.\n    Funding is typically organized via [[Grant]] funding. Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic support fund. For large scale public sector funding, the management and administration of grant awards is often handled by other, dedicated, organizations - [[FundingAgency]]s such as ERC, REA, ...\"\"\" ;\n    rdfs:subClassOf schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/383>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FundInfoCollab> .\n\nschema:FurnitureStore a rdfs:Class ;\n    rdfs:label \"FurnitureStore\" ;\n    rdfs:comment \"A furniture store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Game a rdfs:Class ;\n    rdfs:label \"Game\" ;\n    rdfs:comment \"The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:GamePlayMode a rdfs:Class ;\n    rdfs:label \"GamePlayMode\" ;\n    rdfs:comment \"Indicates whether this game is multi-player, co-op or single-player.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:GameServer a rdfs:Class ;\n    rdfs:label \"GameServer\" ;\n    rdfs:comment \"Server that provides game interaction in a multiplayer game.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:GameServerStatus a rdfs:Class ;\n    rdfs:label \"GameServerStatus\" ;\n    rdfs:comment \"Status of a game server.\" ;\n    rdfs:subClassOf schema:StatusEnumeration .\n\nschema:GardenStore a rdfs:Class ;\n    rdfs:label \"GardenStore\" ;\n    rdfs:comment \"A garden store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:GasStation a rdfs:Class ;\n    rdfs:label \"GasStation\" ;\n    rdfs:comment \"A gas station.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:GatedResidenceCommunity a rdfs:Class ;\n    rdfs:label \"GatedResidenceCommunity\" ;\n    rdfs:comment \"Residence type: Gated community.\" ;\n    rdfs:subClassOf schema:Residence .\n\nschema:GenderType a rdfs:Class ;\n    rdfs:label \"GenderType\" ;\n    rdfs:comment \"An enumeration of genders.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:GeneralContractor a rdfs:Class ;\n    rdfs:label \"GeneralContractor\" ;\n    rdfs:comment \"A general contractor.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:GeoCircle a rdfs:Class ;\n    rdfs:label \"GeoCircle\" ;\n    rdfs:comment \"\"\"A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape\n          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.\n          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.\n       \"\"\" ;\n    rdfs:subClassOf schema:GeoShape .\n\nschema:GeoCoordinates a rdfs:Class ;\n    rdfs:label \"GeoCoordinates\" ;\n    rdfs:comment \"The geographic coordinates of a place or event.\" ;\n    rdfs:subClassOf schema:StructuredValue .\n\nschema:GeoShape a rdfs:Class ;\n    rdfs:label \"GeoShape\" ;\n    rdfs:comment \"The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> .\n\nschema:GeospatialGeometry a rdfs:Class ;\n    rdfs:label \"GeospatialGeometry\" ;\n    rdfs:comment \"(Eventually to be defined as) a supertype of GeoShape designed to accommodate definitions from Geo-Spatial best practices.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1375> .\n\nschema:GiveAction a rdfs:Class ;\n    rdfs:label \"GiveAction\" ;\n    rdfs:comment \"The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[TakeAction]]: Reciprocal of GiveAction.\\\\\\\\n* [[SendAction]]: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:GolfCourse a rdfs:Class ;\n    rdfs:label \"GolfCourse\" ;\n    rdfs:comment \"A golf course.\" ;\n    rdfs:subClassOf schema:SportsActivityLocation .\n\nschema:GovernmentBenefitsType a rdfs:Class ;\n    rdfs:label \"GovernmentBenefitsType\" ;\n    rdfs:comment \"GovernmentBenefitsType enumerates several kinds of government benefits to support the COVID-19 situation. Note that this structure may not capture all benefits offered.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:GovernmentBuilding a rdfs:Class ;\n    rdfs:label \"GovernmentBuilding\" ;\n    rdfs:comment \"A government building.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:GovernmentOffice a rdfs:Class ;\n    rdfs:label \"GovernmentOffice\" ;\n    rdfs:comment \"A government office&#x2014;for example, an IRS or DMV office.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:GovernmentOrganization a rdfs:Class ;\n    rdfs:label \"GovernmentOrganization\" ;\n    rdfs:comment \"A governmental organization or agency.\" ;\n    rdfs:subClassOf schema:Organization .\n\nschema:GovernmentPermit a rdfs:Class ;\n    rdfs:label \"GovernmentPermit\" ;\n    rdfs:comment \"A permit issued by a government agency.\" ;\n    rdfs:subClassOf schema:Permit .\n\nschema:GovernmentService a rdfs:Class ;\n    rdfs:label \"GovernmentService\" ;\n    rdfs:comment \"A service provided by a government organization, e.g. food stamps, veterans benefits, etc.\" ;\n    rdfs:subClassOf schema:Service .\n\nschema:Grant a rdfs:Class ;\n    rdfs:label \"Grant\" ;\n    rdfs:comment \"\"\"A grant, typically financial or otherwise quantifiable, of resources. Typically a [[funder]] sponsors some [[MonetaryAmount]] to an [[Organization]] or [[Person]],\n    sometimes not necessarily via a dedicated or long-lived [[Project]], resulting in one or more outputs, or [[fundedItem]]s. For financial sponsorship, indicate the [[funder]] of a [[MonetaryGrant]]. For non-financial support, indicate [[sponsor]] of [[Grant]]s of resources (e.g. office space).\n\nGrants support  activities directed towards some agreed collective goals, often but not always organized as [[Project]]s. Long-lived projects are sometimes sponsored by a variety of grants over time, but it is also common for a project to be associated with a single grant.\n\nThe amount of a [[Grant]] is represented using [[amount]] as a [[MonetaryAmount]].\n    \"\"\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/383>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FundInfoCollab> .\n\nschema:GroceryStore a rdfs:Class ;\n    rdfs:label \"GroceryStore\" ;\n    rdfs:comment \"A grocery store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Guide a rdfs:Class ;\n    rdfs:label \"Guide\" ;\n    rdfs:comment \"[[Guide]] is a page or article that recommend specific products or services, or aspects of a thing for a user to consider. A [[Guide]] may represent a Buying Guide and detail aspects of products or services for a user to consider. A [[Guide]] may represent a Product Guide and recommend specific products or services. A [[Guide]] may represent a Ranked List and recommend specific products or services with ranking.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2405> .\n\nschema:HVACBusiness a rdfs:Class ;\n    rdfs:label \"HVACBusiness\" ;\n    rdfs:comment \"A business that provide Heating, Ventilation and Air Conditioning services.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:Hackathon a rdfs:Class ;\n    rdfs:label \"Hackathon\" ;\n    rdfs:comment \"A [hackathon](https://en.wikipedia.org/wiki/Hackathon) event.\" ;\n    rdfs:subClassOf schema:Event ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2526> .\n\nschema:HairSalon a rdfs:Class ;\n    rdfs:label \"HairSalon\" ;\n    rdfs:comment \"A hair salon.\" ;\n    rdfs:subClassOf schema:HealthAndBeautyBusiness .\n\nschema:HardwareStore a rdfs:Class ;\n    rdfs:label \"HardwareStore\" ;\n    rdfs:comment \"A hardware store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:HealthAndBeautyBusiness a rdfs:Class ;\n    rdfs:label \"HealthAndBeautyBusiness\" ;\n    rdfs:comment \"Health and beauty.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:HealthAspectEnumeration a rdfs:Class ;\n    rdfs:label \"HealthAspectEnumeration\" ;\n    rdfs:comment \"HealthAspectEnumeration enumerates several aspects of health content online, each of which might be described using [[hasHealthAspect]] and [[HealthTopicContent]].\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:HealthClub a rdfs:Class ;\n    rdfs:label \"HealthClub\" ;\n    rdfs:comment \"A health club.\" ;\n    rdfs:subClassOf schema:HealthAndBeautyBusiness,\n        schema:SportsActivityLocation .\n\nschema:HealthInsurancePlan a rdfs:Class ;\n    rdfs:label \"HealthInsurancePlan\" ;\n    rdfs:comment \"A US-style health insurance plan, including PPOs, EPOs, and HMOs. \" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:HealthPlanCostSharingSpecification a rdfs:Class ;\n    rdfs:label \"HealthPlanCostSharingSpecification\" ;\n    rdfs:comment \"A description of costs to the patient under a given network or formulary.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:HealthPlanFormulary a rdfs:Class ;\n    rdfs:label \"HealthPlanFormulary\" ;\n    rdfs:comment \"For a given health insurance plan, the specification for costs and coverage of prescription drugs. \" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:HealthPlanNetwork a rdfs:Class ;\n    rdfs:label \"HealthPlanNetwork\" ;\n    rdfs:comment \"A US-style health insurance plan network. \" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:HealthTopicContent a rdfs:Class ;\n    rdfs:label \"HealthTopicContent\" ;\n    rdfs:comment \"\"\"[[HealthTopicContent]] is [[WebContent]] that is about some aspect of a health topic, e.g. a condition, its symptoms or treatments. Such content may be comprised of several parts or sections and use different types of media. Multiple instances of [[WebContent]] (and hence [[HealthTopicContent]]) can be related using [[hasPart]] / [[isPartOf]] where there is some kind of content hierarchy, and their content described with [[about]] and [[mentions]] e.g. building upon the existing [[MedicalCondition]] vocabulary.\n  \"\"\" ;\n    rdfs:subClassOf schema:WebContent ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:HighSchool a rdfs:Class ;\n    rdfs:label \"HighSchool\" ;\n    rdfs:comment \"A high school.\" ;\n    rdfs:subClassOf schema:EducationalOrganization .\n\nschema:HinduTemple a rdfs:Class ;\n    rdfs:label \"HinduTemple\" ;\n    rdfs:comment \"A Hindu temple.\" ;\n    rdfs:subClassOf schema:PlaceOfWorship .\n\nschema:HobbyShop a rdfs:Class ;\n    rdfs:label \"HobbyShop\" ;\n    rdfs:comment \"A store that sells materials useful or necessary for various hobbies.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:HomeAndConstructionBusiness a rdfs:Class ;\n    rdfs:label \"HomeAndConstructionBusiness\" ;\n    rdfs:comment \"A construction business.\\\\n\\\\nA HomeAndConstructionBusiness is a [[LocalBusiness]] that provides services around homes and buildings.\\\\n\\\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\\\\\\\(s).\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:HomeGoodsStore a rdfs:Class ;\n    rdfs:label \"HomeGoodsStore\" ;\n    rdfs:comment \"A home goods store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Hospital a rdfs:Class ;\n    rdfs:label \"Hospital\" ;\n    rdfs:comment \"A hospital.\" ;\n    rdfs:subClassOf schema:CivicStructure,\n        schema:EmergencyService,\n        schema:MedicalOrganization .\n\nschema:Hostel a rdfs:Class ;\n    rdfs:label \"Hostel\" ;\n    rdfs:comment \"\"\"A hostel - cheap accommodation, often in shared dormitories.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:LodgingBusiness .\n\nschema:Hotel a rdfs:Class ;\n    rdfs:label \"Hotel\" ;\n    rdfs:comment \"\"\"A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:LodgingBusiness ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:HotelRoom a rdfs:Class ;\n    rdfs:label \"HotelRoom\" ;\n    rdfs:comment \"\"\"A hotel room is a single room in a hotel.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:Room ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:House a rdfs:Class ;\n    rdfs:label \"House\" ;\n    rdfs:comment \"A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href=\\\\\"http://en.wikipedia.org/wiki/House\\\\\">http://en.wikipedia.org/wiki/House</a>).\" ;\n    rdfs:subClassOf schema:Accommodation ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:HousePainter a rdfs:Class ;\n    rdfs:label \"HousePainter\" ;\n    rdfs:comment \"A house painting service.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:HowTo a rdfs:Class ;\n    rdfs:label \"HowTo\" ;\n    rdfs:comment \"Instructions that explain how to achieve a result by performing a sequence of steps.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:HowToDirection a rdfs:Class ;\n    rdfs:label \"HowToDirection\" ;\n    rdfs:comment \"A direction indicating a single action to do in the instructions for how to achieve a result.\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:ListItem .\n\nschema:HowToItem a rdfs:Class ;\n    rdfs:label \"HowToItem\" ;\n    rdfs:comment \"An item used as either a tool or supply when performing the instructions for how to to achieve a result.\" ;\n    rdfs:subClassOf schema:ListItem .\n\nschema:HowToSection a rdfs:Class ;\n    rdfs:label \"HowToSection\" ;\n    rdfs:comment \"A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:ItemList,\n        schema:ListItem .\n\nschema:HowToStep a rdfs:Class ;\n    rdfs:label \"HowToStep\" ;\n    rdfs:comment \"A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:ItemList,\n        schema:ListItem .\n\nschema:HowToSupply a rdfs:Class ;\n    rdfs:label \"HowToSupply\" ;\n    rdfs:comment \"A supply consumed when performing the instructions for how to achieve a result.\" ;\n    rdfs:subClassOf schema:HowToItem .\n\nschema:HowToTip a rdfs:Class ;\n    rdfs:label \"HowToTip\" ;\n    rdfs:comment \"An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:ListItem .\n\nschema:HowToTool a rdfs:Class ;\n    rdfs:label \"HowToTool\" ;\n    rdfs:comment \"A tool used (but not consumed) when performing instructions for how to achieve a result.\" ;\n    rdfs:subClassOf schema:HowToItem .\n\nschema:HyperToc a rdfs:Class ;\n    rdfs:label \"HyperToc\" ;\n    rdfs:comment \"A HyperToc represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. Items in the table of contents are indicated using the [[tocEntry]] property, and typed [[HyperTocEntry]]. For cases where the same larger work is split into multiple files, [[associatedMedia]] can be used on individual [[HyperTocEntry]] items.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2766> .\n\nschema:HyperTocEntry a rdfs:Class ;\n    rdfs:label \"HyperTocEntry\" ;\n    rdfs:comment \"A HyperToEntry is an item within a [[HyperToc]], which represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. The media object itself is indicated using [[associatedMedia]]. Each section of interest within that content can be described with a [[HyperTocEntry]], with associated [[startOffset]] and [[endOffset]]. When several entries are all from the same file, [[associatedMedia]] is used on the overarching [[HyperTocEntry]]; if the content has been split into multiple files, they can be referenced using [[associatedMedia]] on each [[HyperTocEntry]].\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2766> .\n\nschema:IceCreamShop a rdfs:Class ;\n    rdfs:label \"IceCreamShop\" ;\n    rdfs:comment \"An ice cream shop.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:IgnoreAction a rdfs:Class ;\n    rdfs:label \"IgnoreAction\" ;\n    rdfs:comment \"The act of intentionally disregarding the object. An agent ignores an object.\" ;\n    rdfs:subClassOf schema:AssessAction .\n\nschema:ImageGallery a rdfs:Class ;\n    rdfs:label \"ImageGallery\" ;\n    rdfs:comment \"Web page type: Image gallery page.\" ;\n    rdfs:subClassOf schema:MediaGallery .\n\nschema:ImageObject a rdfs:Class ;\n    rdfs:label \"ImageObject\" ;\n    rdfs:comment \"An image file.\" ;\n    rdfs:subClassOf schema:MediaObject ;\n    ns2:equivalentClass <http://purl.org/dc/dcmitype/Image> .\n\nschema:ImagingTest a rdfs:Class ;\n    rdfs:label \"ImagingTest\" ;\n    rdfs:comment \"Any medical imaging modality typically used for diagnostic purposes.\" ;\n    rdfs:subClassOf schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:IndividualProduct a rdfs:Class ;\n    rdfs:label \"IndividualProduct\" ;\n    rdfs:comment \"A single, identifiable product instance (e.g. a laptop with a particular serial number).\" ;\n    rdfs:subClassOf schema:Product ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:InfectiousAgentClass a rdfs:Class ;\n    rdfs:label \"InfectiousAgentClass\" ;\n    rdfs:comment \"Classes of agents or pathogens that transmit infectious diseases. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:InfectiousDisease a rdfs:Class ;\n    rdfs:label \"InfectiousDisease\" ;\n    rdfs:comment \"An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.\" ;\n    rdfs:subClassOf schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:InformAction a rdfs:Class ;\n    rdfs:label \"InformAction\" ;\n    rdfs:comment \"The act of notifying someone of information pertinent to them, with no expectation of a response.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:InsertAction a rdfs:Class ;\n    rdfs:label \"InsertAction\" ;\n    rdfs:comment \"The act of adding at a specific location in an ordered collection.\" ;\n    rdfs:subClassOf schema:AddAction .\n\nschema:InstallAction a rdfs:Class ;\n    rdfs:label \"InstallAction\" ;\n    rdfs:comment \"The act of installing an application.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:InsuranceAgency a rdfs:Class ;\n    rdfs:label \"InsuranceAgency\" ;\n    rdfs:comment \"An Insurance agency.\" ;\n    rdfs:subClassOf schema:FinancialService .\n\nschema:Intangible a rdfs:Class ;\n    rdfs:label \"Intangible\" ;\n    rdfs:comment \"A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.\" ;\n    rdfs:subClassOf schema:Thing .\n\nschema:Integer a rdfs:Class ;\n    rdfs:label \"Integer\" ;\n    rdfs:comment \"Data type: Integer.\" ;\n    rdfs:subClassOf schema:Number .\n\nschema:InteractAction a rdfs:Class ;\n    rdfs:label \"InteractAction\" ;\n    rdfs:comment \"The act of interacting with another person or organization.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:InteractionCounter a rdfs:Class ;\n    rdfs:label \"InteractionCounter\" ;\n    rdfs:comment \"A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.\" ;\n    rdfs:subClassOf schema:StructuredValue .\n\nschema:InternetCafe a rdfs:Class ;\n    rdfs:label \"InternetCafe\" ;\n    rdfs:comment \"An internet cafe.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:InvestmentFund a rdfs:Class ;\n    rdfs:label \"InvestmentFund\" ;\n    rdfs:comment \"A company or fund that gathers capital from a number of investors to create a pool of money that is then re-invested into stocks, bonds and other assets.\" ;\n    rdfs:subClassOf schema:InvestmentOrDeposit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:InvestmentOrDeposit a rdfs:Class ;\n    rdfs:label \"InvestmentOrDeposit\" ;\n    rdfs:comment \"A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.\" ;\n    rdfs:subClassOf schema:FinancialProduct ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:InviteAction a rdfs:Class ;\n    rdfs:label \"InviteAction\" ;\n    rdfs:comment \"The act of asking someone to attend an event. Reciprocal of RsvpAction.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:Invoice a rdfs:Class ;\n    rdfs:label \"Invoice\" ;\n    rdfs:comment \"A statement of the money due for goods or services; a bill.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ItemAvailability a rdfs:Class ;\n    rdfs:label \"ItemAvailability\" ;\n    rdfs:comment \"A list of possible product availability options.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:ItemList a rdfs:Class ;\n    rdfs:label \"ItemList\" ;\n    rdfs:comment \"A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ItemListOrderType a rdfs:Class ;\n    rdfs:label \"ItemListOrderType\" ;\n    rdfs:comment \"Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:ItemPage a rdfs:Class ;\n    rdfs:label \"ItemPage\" ;\n    rdfs:comment \"A page devoted to a single item, such as a particular product or hotel.\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:JewelryStore a rdfs:Class ;\n    rdfs:label \"JewelryStore\" ;\n    rdfs:comment \"A jewelry store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:JobPosting a rdfs:Class ;\n    rdfs:label \"JobPosting\" ;\n    rdfs:comment \"A listing that describes a job opening in a certain organization.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:JoinAction a rdfs:Class ;\n    rdfs:label \"JoinAction\" ;\n    rdfs:comment \"An agent joins an event/group with participants/friends at a location.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[RegisterAction]]: Unlike RegisterAction, JoinAction refers to joining a group/team of people.\\\\\\\\n* [[SubscribeAction]]: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.\\\\\\\\n* [[FollowAction]]: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:Joint a rdfs:Class ;\n    rdfs:label \"Joint\" ;\n    rdfs:comment \"The anatomical location at which two or more bones make contact.\" ;\n    rdfs:subClassOf schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:LakeBodyOfWater a rdfs:Class ;\n    rdfs:label \"LakeBodyOfWater\" ;\n    rdfs:comment \"A lake (for example, Lake Pontrachain).\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:Landform a rdfs:Class ;\n    rdfs:label \"Landform\" ;\n    rdfs:comment \"A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.\" ;\n    rdfs:subClassOf schema:Place .\n\nschema:LandmarksOrHistoricalBuildings a rdfs:Class ;\n    rdfs:label \"LandmarksOrHistoricalBuildings\" ;\n    rdfs:comment \"An historical landmark or building.\" ;\n    rdfs:subClassOf schema:Place .\n\nschema:Language a rdfs:Class ;\n    rdfs:label \"Language\" ;\n    rdfs:comment \"Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) can be used via the [[alternateName]] property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using [[ComputerLanguage]].\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:LearningResource a rdfs:Class ;\n    rdfs:label \"LearningResource\" ;\n    rdfs:comment \"\"\"The LearningResource type can be used to indicate [[CreativeWork]]s (whether physical or digital) that have a particular and explicit orientation towards learning, education, skill acquisition, and other educational purposes.\n\n[[LearningResource]] is expected to be used as an addition to a primary type such as [[Book]], [[VideoObject]], [[Product]] etc.\n\n[[EducationEvent]] serves a similar purpose for event-like things (e.g. a [[Trip]]). A [[LearningResource]] may be created as a result of an [[EducationEvent]], for example by recording one.\"\"\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1401> .\n\nschema:LeaveAction a rdfs:Class ;\n    rdfs:label \"LeaveAction\" ;\n    rdfs:comment \"An agent leaves an event / group with participants/friends at a location.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[JoinAction]]: The antonym of LeaveAction.\\\\\\\\n* [[UnRegisterAction]]: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:LegalForceStatus a rdfs:Class ;\n    rdfs:label \"LegalForceStatus\" ;\n    rdfs:comment \"A list of possible statuses for the legal force of a legislation.\" ;\n    rdfs:subClassOf schema:StatusEnumeration ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#InForce> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:LegalService a rdfs:Class ;\n    rdfs:label \"LegalService\" ;\n    rdfs:comment \"A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.\\\\n\\\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\\\\\\\(s).\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:LegalValueLevel a rdfs:Class ;\n    rdfs:label \"LegalValueLevel\" ;\n    rdfs:comment \"A list of possible levels for the legal validity of a legislation.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    ns1:closeMatch <http://data.europa.eu/eli/ontology#LegalValue> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:Legislation a rdfs:Class ;\n    rdfs:label \"Legislation\" ;\n    rdfs:comment \"A legal document such as an act, decree, bill, etc. (enforceable or not) or a component of a legal act (like an article).\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    ns1:closeMatch <http://data.europa.eu/eli/ontology#LegalExpression>,\n        <http://data.europa.eu/eli/ontology#LegalResource> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:LegislationObject a rdfs:Class ;\n    rdfs:label \"LegislationObject\" ;\n    rdfs:comment \"A specific object or file containing a Legislation. Note that the same Legislation can be published in multiple files. For example, a digitally signed PDF, a plain PDF and an HTML version.\" ;\n    rdfs:subClassOf schema:Legislation,\n        schema:MediaObject ;\n    ns1:closeMatch <http://data.europa.eu/eli/ontology#Format> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:LegislativeBuilding a rdfs:Class ;\n    rdfs:label \"LegislativeBuilding\" ;\n    rdfs:comment \"A legislative building&#x2014;for example, the state capitol.\" ;\n    rdfs:subClassOf schema:GovernmentBuilding .\n\nschema:LendAction a rdfs:Class ;\n    rdfs:label \"LendAction\" ;\n    rdfs:comment \"The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[BorrowAction]]: Reciprocal of LendAction.\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:Library a rdfs:Class ;\n    rdfs:label \"Library\" ;\n    rdfs:comment \"A library.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:LibrarySystem a rdfs:Class ;\n    rdfs:label \"LibrarySystem\" ;\n    rdfs:comment \"A [[LibrarySystem]] is a collaborative system amongst several libraries.\" ;\n    rdfs:subClassOf schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1495> .\n\nschema:LifestyleModification a rdfs:Class ;\n    rdfs:label \"LifestyleModification\" ;\n    rdfs:comment \"A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Ligament a rdfs:Class ;\n    rdfs:label \"Ligament\" ;\n    rdfs:comment \"A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.\" ;\n    rdfs:subClassOf schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:LikeAction a rdfs:Class ;\n    rdfs:label \"LikeAction\" ;\n    rdfs:comment \"The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.\" ;\n    rdfs:subClassOf schema:ReactAction .\n\nschema:LinkRole a rdfs:Class ;\n    rdfs:label \"LinkRole\" ;\n    rdfs:comment \"A Role that represents a Web link e.g. as expressed via the 'url' property. Its linkRelationship property can indicate URL-based and plain textual link types e.g. those in IANA link registry or others such as 'amphtml'. This structure provides a placeholder where details from HTML's link element can be represented outside of HTML, e.g. in JSON-LD feeds.\" ;\n    rdfs:subClassOf schema:Role ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1045> .\n\nschema:LiquorStore a rdfs:Class ;\n    rdfs:label \"LiquorStore\" ;\n    rdfs:comment \"A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:ListItem a rdfs:Class ;\n    rdfs:label \"ListItem\" ;\n    rdfs:comment \"An list item, e.g. a step in a checklist or how-to description.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ListenAction a rdfs:Class ;\n    rdfs:label \"ListenAction\" ;\n    rdfs:comment \"The act of consuming audio content.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:LiteraryEvent a rdfs:Class ;\n    rdfs:label \"LiteraryEvent\" ;\n    rdfs:comment \"Event type: Literary event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:LiveBlogPosting a rdfs:Class ;\n    rdfs:label \"LiveBlogPosting\" ;\n    rdfs:comment \"A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates.\" ;\n    rdfs:subClassOf schema:BlogPosting .\n\nschema:LoanOrCredit a rdfs:Class ;\n    rdfs:label \"LoanOrCredit\" ;\n    rdfs:comment \"A financial product for the loaning of an amount of money, or line of credit, under agreed terms and charges.\" ;\n    rdfs:subClassOf schema:FinancialProduct ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:LocalBusiness a rdfs:Class ;\n    rdfs:label \"LocalBusiness\" ;\n    rdfs:comment \"A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.\" ;\n    rdfs:subClassOf schema:Organization,\n        schema:Place ;\n    ns1:closeMatch <http://www.w3.org/ns/regorg#RegisteredOrganization> .\n\nschema:LocationFeatureSpecification a rdfs:Class ;\n    rdfs:label \"LocationFeatureSpecification\" ;\n    rdfs:comment \"Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.\" ;\n    rdfs:subClassOf schema:PropertyValue ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:Locksmith a rdfs:Class ;\n    rdfs:label \"Locksmith\" ;\n    rdfs:comment \"A locksmith.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:LodgingBusiness a rdfs:Class ;\n    rdfs:label \"LodgingBusiness\" ;\n    rdfs:comment \"A lodging business, such as a motel, hotel, or inn.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:LodgingReservation a rdfs:Class ;\n    rdfs:label \"LodgingReservation\" ;\n    rdfs:comment \"A reservation for lodging at a hotel, motel, inn, etc.\\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:LoseAction a rdfs:Class ;\n    rdfs:label \"LoseAction\" ;\n    rdfs:comment \"The act of being defeated in a competitive activity.\" ;\n    rdfs:subClassOf schema:AchieveAction .\n\nschema:LymphaticVessel a rdfs:Class ;\n    rdfs:label \"LymphaticVessel\" ;\n    rdfs:comment \"A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.\" ;\n    rdfs:subClassOf schema:Vessel ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Manuscript a rdfs:Class ;\n    rdfs:label \"Manuscript\" ;\n    rdfs:comment \"A book, document, or piece of music written by hand rather than typed or printed.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1448> .\n\nschema:Map a rdfs:Class ;\n    rdfs:label \"Map\" ;\n    rdfs:comment \"A map.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MapCategoryType a rdfs:Class ;\n    rdfs:label \"MapCategoryType\" ;\n    rdfs:comment \"An enumeration of several kinds of Map.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:MarryAction a rdfs:Class ;\n    rdfs:label \"MarryAction\" ;\n    rdfs:comment \"The act of marrying a person.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:Mass a rdfs:Class ;\n    rdfs:label \"Mass\" ;\n    rdfs:comment \"Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.\" ;\n    rdfs:subClassOf schema:Quantity .\n\nschema:MathSolver a rdfs:Class ;\n    rdfs:label \"MathSolver\" ;\n    rdfs:comment \"A math solver which is capable of solving a subset of mathematical problems.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2740> .\n\nschema:MaximumDoseSchedule a rdfs:Class ;\n    rdfs:label \"MaximumDoseSchedule\" ;\n    rdfs:comment \"The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.\" ;\n    rdfs:subClassOf schema:DoseSchedule ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MeasurementTypeEnumeration a rdfs:Class ;\n    rdfs:label \"MeasurementTypeEnumeration\" ;\n    rdfs:comment \"Enumeration of common measurement types (or dimensions), for example \\\\\"chest\\\\\" for a person, \\\\\"inseam\\\\\" for pants, \\\\\"gauge\\\\\" for screws, or \\\\\"wheel\\\\\" for bicycles.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:MediaGallery a rdfs:Class ;\n    rdfs:label \"MediaGallery\" ;\n    rdfs:comment \"Web page type: Media gallery page. A mixed-media page that can contains media such as images, videos, and other multimedia.\" ;\n    rdfs:subClassOf schema:CollectionPage .\n\nschema:MediaManipulationRatingEnumeration a rdfs:Class ;\n    rdfs:label \"MediaManipulationRatingEnumeration\" ;\n    rdfs:comment \" Codes for use with the [[mediaAuthenticityCategory]] property, indicating the authenticity of a media object (in the context of how it was published or shared). In general these codes are not mutually exclusive, although some combinations (such as 'original' versus 'transformed', 'edited' and 'staged') would be contradictory if applied in the same [[MediaReview]]. Note that the application of these codes is with regard to a piece of media shared or published in a particular context.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:MediaObject a rdfs:Class ;\n    rdfs:label \"MediaObject\" ;\n    rdfs:comment \"A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MediaReview a rdfs:Class ;\n    rdfs:label \"MediaReview\" ;\n    rdfs:comment \"\"\"A [[MediaReview]] is a more specialized form of Review dedicated to the evaluation of media content online, typically in the context of fact-checking and misinformation.\n    For more general reviews of media in the broader sense, use [[UserReview]], [[CriticReview]] or other [[Review]] types. This definition is\n    a work in progress. While the [[MediaManipulationRatingEnumeration]] list reflects significant community review amongst fact-checkers and others working\n    to combat misinformation, the specific structures for representing media objects, their versions and publication context, is still evolving. Similarly, best practices for the relationship between [[MediaReview]] and [[ClaimReview]] markup has not yet been finalized.\"\"\" ;\n    rdfs:subClassOf schema:Review ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:MediaSubscription a rdfs:Class ;\n    rdfs:label \"MediaSubscription\" ;\n    rdfs:comment \"A subscription which allows a user to access media including audio, video, books, etc.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:MedicalAudience a rdfs:Class ;\n    rdfs:label \"MedicalAudience\" ;\n    rdfs:comment \"Target audiences for medical web pages.\" ;\n    rdfs:subClassOf schema:Audience,\n        schema:PeopleAudience ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalAudienceType a rdfs:Class ;\n    rdfs:label \"MedicalAudienceType\" ;\n    rdfs:comment \"Target audiences types for medical web pages. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalBusiness a rdfs:Class ;\n    rdfs:label \"MedicalBusiness\" ;\n    rdfs:comment \"A particular physical or virtual business of an organization for medical purposes. Examples of MedicalBusiness include differents business run by health professionals.\" ;\n    rdfs:subClassOf schema:LocalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalCause a rdfs:Class ;\n    rdfs:label \"MedicalCause\" ;\n    rdfs:comment \"The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalClinic a rdfs:Class ;\n    rdfs:label \"MedicalClinic\" ;\n    rdfs:comment \"A facility, often associated with a hospital or medical school, that is devoted to the specific diagnosis and/or healthcare. Previously limited to outpatients but with evolution it may be open to inpatients as well.\" ;\n    rdfs:subClassOf schema:MedicalBusiness,\n        schema:MedicalOrganization ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalCode a rdfs:Class ;\n    rdfs:label \"MedicalCode\" ;\n    rdfs:comment \"A code for a medical entity.\" ;\n    rdfs:subClassOf schema:CategoryCode,\n        schema:MedicalIntangible ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalCondition a rdfs:Class ;\n    rdfs:label \"MedicalCondition\" ;\n    rdfs:comment \"Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalConditionStage a rdfs:Class ;\n    rdfs:label \"MedicalConditionStage\" ;\n    rdfs:comment \"A stage of a medical condition, such as 'Stage IIIa'.\" ;\n    rdfs:subClassOf schema:MedicalIntangible ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalContraindication a rdfs:Class ;\n    rdfs:label \"MedicalContraindication\" ;\n    rdfs:comment \"A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but that these risks may be outweighed by other considerations or mitigated by other measures).\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalDevice a rdfs:Class ;\n    rdfs:label \"MedicalDevice\" ;\n    rdfs:comment \"Any object used in a medical capacity, such as to diagnose or treat a patient.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/63653004> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalDevicePurpose a rdfs:Class ;\n    rdfs:label \"MedicalDevicePurpose\" ;\n    rdfs:comment \"Categories of medical devices, organized by the purpose or intended use of the device.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalEntity a rdfs:Class ;\n    rdfs:label \"MedicalEntity\" ;\n    rdfs:comment \"The most generic type of entity related to health and the practice of medicine.\" ;\n    rdfs:subClassOf schema:Thing ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalEnumeration a rdfs:Class ;\n    rdfs:label \"MedicalEnumeration\" ;\n    rdfs:comment \"Enumerations related to health and the practice of medicine: A concept that is used to attribute a quality to another concept, as a qualifier, a collection of items or a listing of all of the elements of a set in medicine practice.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalEvidenceLevel a rdfs:Class ;\n    rdfs:label \"MedicalEvidenceLevel\" ;\n    rdfs:comment \"Level of evidence for a medical guideline. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalGuideline a rdfs:Class ;\n    rdfs:label \"MedicalGuideline\" ;\n    rdfs:comment \"Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalGuidelineContraindication a rdfs:Class ;\n    rdfs:label \"MedicalGuidelineContraindication\" ;\n    rdfs:comment \"A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.\" ;\n    rdfs:subClassOf schema:MedicalGuideline ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalGuidelineRecommendation a rdfs:Class ;\n    rdfs:label \"MedicalGuidelineRecommendation\" ;\n    rdfs:comment \"A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.\" ;\n    rdfs:subClassOf schema:MedicalGuideline ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalImagingTechnique a rdfs:Class ;\n    rdfs:label \"MedicalImagingTechnique\" ;\n    rdfs:comment \"Any medical imaging modality typically used for diagnostic purposes. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalIndication a rdfs:Class ;\n    rdfs:label \"MedicalIndication\" ;\n    rdfs:comment \"A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalIntangible a rdfs:Class ;\n    rdfs:label \"MedicalIntangible\" ;\n    rdfs:comment \"A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalObservationalStudy a rdfs:Class ;\n    rdfs:label \"MedicalObservationalStudy\" ;\n    rdfs:comment \"An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.\" ;\n    rdfs:subClassOf schema:MedicalStudy ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalObservationalStudyDesign a rdfs:Class ;\n    rdfs:label \"MedicalObservationalStudyDesign\" ;\n    rdfs:comment \"Design models for observational medical studies. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalOrganization a rdfs:Class ;\n    rdfs:label \"MedicalOrganization\" ;\n    rdfs:comment \"A medical organization (physical or not), such as hospital, institution or clinic.\" ;\n    rdfs:subClassOf schema:Organization .\n\nschema:MedicalProcedure a rdfs:Class ;\n    rdfs:label \"MedicalProcedure\" ;\n    rdfs:comment \"A process of care used in either a diagnostic, therapeutic, preventive or palliative capacity that relies on invasive (surgical), non-invasive, or other techniques.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/50731006> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalProcedureType a rdfs:Class ;\n    rdfs:label \"MedicalProcedureType\" ;\n    rdfs:comment \"An enumeration that describes different types of medical procedures.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalRiskCalculator a rdfs:Class ;\n    rdfs:label \"MedicalRiskCalculator\" ;\n    rdfs:comment \"A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.\" ;\n    rdfs:subClassOf schema:MedicalRiskEstimator ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalRiskEstimator a rdfs:Class ;\n    rdfs:label \"MedicalRiskEstimator\" ;\n    rdfs:comment \"Any rule set or interactive tool for estimating the risk of developing a complication or condition.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalRiskFactor a rdfs:Class ;\n    rdfs:label \"MedicalRiskFactor\" ;\n    rdfs:comment \"A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalRiskScore a rdfs:Class ;\n    rdfs:label \"MedicalRiskScore\" ;\n    rdfs:comment \"A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.\" ;\n    rdfs:subClassOf schema:MedicalRiskEstimator ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalScholarlyArticle a rdfs:Class ;\n    rdfs:label \"MedicalScholarlyArticle\" ;\n    rdfs:comment \"A scholarly article in the medical domain.\" ;\n    rdfs:subClassOf schema:ScholarlyArticle ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalSign a rdfs:Class ;\n    rdfs:label \"MedicalSign\" ;\n    rdfs:comment \"Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.\" ;\n    rdfs:subClassOf schema:MedicalSignOrSymptom ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalSignOrSymptom a rdfs:Class ;\n    rdfs:label \"MedicalSignOrSymptom\" ;\n    rdfs:comment \"Any feature associated or not with a medical condition. In medicine a symptom is generally subjective while a sign is objective.\" ;\n    rdfs:subClassOf schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalSpecialty a rdfs:Class ;\n    rdfs:label \"MedicalSpecialty\" ;\n    rdfs:comment \"Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration,\n        schema:Specialty ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalStudy a rdfs:Class ;\n    rdfs:label \"MedicalStudy\" ;\n    rdfs:comment \"A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalStudyStatus a rdfs:Class ;\n    rdfs:label \"MedicalStudyStatus\" ;\n    rdfs:comment \"The status of a medical study. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalSymptom a rdfs:Class ;\n    rdfs:label \"MedicalSymptom\" ;\n    rdfs:comment \"Any complaint sensed and expressed by the patient (therefore defined as subjective)  like stomachache, lower-back pain, or fatigue.\" ;\n    rdfs:subClassOf schema:MedicalSignOrSymptom ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalTest a rdfs:Class ;\n    rdfs:label \"MedicalTest\" ;\n    rdfs:comment \"Any medical test, typically performed for diagnostic purposes.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalTestPanel a rdfs:Class ;\n    rdfs:label \"MedicalTestPanel\" ;\n    rdfs:comment \"Any collection of tests commonly ordered together.\" ;\n    rdfs:subClassOf schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalTherapy a rdfs:Class ;\n    rdfs:label \"MedicalTherapy\" ;\n    rdfs:comment \"Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.\" ;\n    rdfs:subClassOf schema:TherapeuticProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalTrial a rdfs:Class ;\n    rdfs:label \"MedicalTrial\" ;\n    rdfs:comment \"A medical trial is a type of medical study that uses scientific process used to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.\" ;\n    rdfs:subClassOf schema:MedicalStudy ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicalTrialDesign a rdfs:Class ;\n    rdfs:label \"MedicalTrialDesign\" ;\n    rdfs:comment \"Design models for medical trials. Enumerated type.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_WikiDoc> .\n\nschema:MedicalWebPage a rdfs:Class ;\n    rdfs:label \"MedicalWebPage\" ;\n    rdfs:comment \"A web page that provides medical information.\" ;\n    rdfs:subClassOf schema:WebPage ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MedicineSystem a rdfs:Class ;\n    rdfs:label \"MedicineSystem\" ;\n    rdfs:comment \"Systems of medical practice.\" ;\n    rdfs:subClassOf schema:MedicalEnumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MeetingRoom a rdfs:Class ;\n    rdfs:label \"MeetingRoom\" ;\n    rdfs:comment \"\"\"A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Conference_hall\">http://en.wikipedia.org/wiki/Conference_hall</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:Room ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:MensClothingStore a rdfs:Class ;\n    rdfs:label \"MensClothingStore\" ;\n    rdfs:comment \"A men's clothing store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Menu a rdfs:Class ;\n    rdfs:label \"Menu\" ;\n    rdfs:comment \"A structured representation of food or drink items available from a FoodEstablishment.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MenuItem a rdfs:Class ;\n    rdfs:label \"MenuItem\" ;\n    rdfs:comment \"A food or drink item listed in a menu or menu section.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:MenuSection a rdfs:Class ;\n    rdfs:label \"MenuSection\" ;\n    rdfs:comment \"A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MerchantReturnEnumeration a rdfs:Class ;\n    rdfs:label \"MerchantReturnEnumeration\" ;\n    rdfs:comment \"MerchantReturnEnumeration enumerates several kinds of product return policy. Note that this structure may not capture all aspects of the policy.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:MerchantReturnPolicy a rdfs:Class ;\n    rdfs:label \"MerchantReturnPolicy\" ;\n    rdfs:comment \"A MerchantReturnPolicy provides information about product return policies associated with an [[Organization]] or [[Product]].\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:Message a rdfs:Class ;\n    rdfs:label \"Message\" ;\n    rdfs:comment \"A single message from a sender to one or more organizations or people.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MiddleSchool a rdfs:Class ;\n    rdfs:label \"MiddleSchool\" ;\n    rdfs:comment \"A middle school (typically for children aged around 11-14, although this varies somewhat).\" ;\n    rdfs:subClassOf schema:EducationalOrganization .\n\nschema:MobileApplication a rdfs:Class ;\n    rdfs:label \"MobileApplication\" ;\n    rdfs:comment \"A software application designed specifically to work well on a mobile device such as a telephone.\" ;\n    rdfs:subClassOf schema:SoftwareApplication .\n\nschema:MobilePhoneStore a rdfs:Class ;\n    rdfs:label \"MobilePhoneStore\" ;\n    rdfs:comment \"A store that sells mobile phones and related accessories.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:MonetaryAmount a rdfs:Class ;\n    rdfs:label \"MonetaryAmount\" ;\n    rdfs:comment \"A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between Â£1,000 and Â£1,000,000 GBP, or the value of a salary, etc. It is recommended to use [[PriceSpecification]] Types to describe the price of an Offer, Invoice, etc.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:MonetaryAmountDistribution a rdfs:Class ;\n    rdfs:label \"MonetaryAmountDistribution\" ;\n    rdfs:comment \"A statistical distribution of monetary amounts.\" ;\n    rdfs:subClassOf schema:QuantitativeValueDistribution ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:MonetaryGrant a rdfs:Class ;\n    rdfs:label \"MonetaryGrant\" ;\n    rdfs:comment \"A monetary grant.\" ;\n    rdfs:subClassOf schema:Grant ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/383>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FundInfoCollab> .\n\nschema:MoneyTransfer a rdfs:Class ;\n    rdfs:label \"MoneyTransfer\" ;\n    rdfs:comment \"The act of transferring money from one place to another place. This may occur electronically or physically.\" ;\n    rdfs:subClassOf schema:TransferAction ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:MortgageLoan a rdfs:Class ;\n    rdfs:label \"MortgageLoan\" ;\n    rdfs:comment \"A loan in which property or real estate is used as collateral. (A loan securitized against some real estate).\" ;\n    rdfs:subClassOf schema:LoanOrCredit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:Mosque a rdfs:Class ;\n    rdfs:label \"Mosque\" ;\n    rdfs:comment \"A mosque.\" ;\n    rdfs:subClassOf schema:PlaceOfWorship .\n\nschema:Motel a rdfs:Class ;\n    rdfs:label \"Motel\" ;\n    rdfs:comment \"\"\"A motel.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:LodgingBusiness .\n\nschema:Motorcycle a rdfs:Class ;\n    rdfs:label \"Motorcycle\" ;\n    rdfs:comment \"A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.\" ;\n    rdfs:subClassOf schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:MotorcycleDealer a rdfs:Class ;\n    rdfs:label \"MotorcycleDealer\" ;\n    rdfs:comment \"A motorcycle dealer.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:MotorcycleRepair a rdfs:Class ;\n    rdfs:label \"MotorcycleRepair\" ;\n    rdfs:comment \"A motorcycle repair shop.\" ;\n    rdfs:subClassOf schema:AutomotiveBusiness .\n\nschema:MotorizedBicycle a rdfs:Class ;\n    rdfs:label \"MotorizedBicycle\" ;\n    rdfs:comment \"A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.\" ;\n    rdfs:subClassOf schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:Mountain a rdfs:Class ;\n    rdfs:label \"Mountain\" ;\n    rdfs:comment \"A mountain, like Mount Whitney or Mount Everest.\" ;\n    rdfs:subClassOf schema:Landform .\n\nschema:MoveAction a rdfs:Class ;\n    rdfs:label \"MoveAction\" ;\n    rdfs:comment \"The act of an agent relocating to a place.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[TransferAction]]: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:Movie a rdfs:Class ;\n    rdfs:label \"Movie\" ;\n    rdfs:comment \"A movie.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MovieClip a rdfs:Class ;\n    rdfs:label \"MovieClip\" ;\n    rdfs:comment \"A short segment/part of a movie.\" ;\n    rdfs:subClassOf schema:Clip .\n\nschema:MovieRentalStore a rdfs:Class ;\n    rdfs:label \"MovieRentalStore\" ;\n    rdfs:comment \"A movie rental store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:MovieSeries a rdfs:Class ;\n    rdfs:label \"MovieSeries\" ;\n    rdfs:comment \"A series of movies. Included movies can be indicated with the hasPart property.\" ;\n    rdfs:subClassOf schema:CreativeWorkSeries .\n\nschema:MovieTheater a rdfs:Class ;\n    rdfs:label \"MovieTheater\" ;\n    rdfs:comment \"A movie theater.\" ;\n    rdfs:subClassOf schema:CivicStructure,\n        schema:EntertainmentBusiness .\n\nschema:MovingCompany a rdfs:Class ;\n    rdfs:label \"MovingCompany\" ;\n    rdfs:comment \"A moving company.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:Muscle a rdfs:Class ;\n    rdfs:label \"Muscle\" ;\n    rdfs:comment \"A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.\" ;\n    rdfs:subClassOf schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Museum a rdfs:Class ;\n    rdfs:label \"Museum\" ;\n    rdfs:comment \"A museum.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:MusicAlbum a rdfs:Class ;\n    rdfs:label \"MusicAlbum\" ;\n    rdfs:comment \"A collection of music tracks.\" ;\n    rdfs:subClassOf schema:MusicPlaylist .\n\nschema:MusicAlbumProductionType a rdfs:Class ;\n    rdfs:label \"MusicAlbumProductionType\" ;\n    rdfs:comment \"Classification of the album by it's type of content: soundtrack, live album, studio album, etc.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:MusicAlbumReleaseType a rdfs:Class ;\n    rdfs:label \"MusicAlbumReleaseType\" ;\n    rdfs:comment \"The kind of release which this album is: single, EP or album.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:MusicComposition a rdfs:Class ;\n    rdfs:label \"MusicComposition\" ;\n    rdfs:comment \"A musical composition.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:MusicEvent a rdfs:Class ;\n    rdfs:label \"MusicEvent\" ;\n    rdfs:comment \"Event type: Music event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:MusicGroup a rdfs:Class ;\n    rdfs:label \"MusicGroup\" ;\n    rdfs:comment \"A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.\" ;\n    rdfs:subClassOf schema:PerformingGroup .\n\nschema:MusicPlaylist a rdfs:Class ;\n    rdfs:label \"MusicPlaylist\" ;\n    rdfs:comment \"A collection of music tracks in playlist form.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MusicRecording a rdfs:Class ;\n    rdfs:label \"MusicRecording\" ;\n    rdfs:comment \"A music recording (track), usually a single song.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:MusicRelease a rdfs:Class ;\n    rdfs:label \"MusicRelease\" ;\n    rdfs:comment \"A MusicRelease is a specific release of a music album.\" ;\n    rdfs:subClassOf schema:MusicPlaylist ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:MusicReleaseFormatType a rdfs:Class ;\n    rdfs:label \"MusicReleaseFormatType\" ;\n    rdfs:comment \"Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:MusicStore a rdfs:Class ;\n    rdfs:label \"MusicStore\" ;\n    rdfs:comment \"A music store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:MusicVenue a rdfs:Class ;\n    rdfs:label \"MusicVenue\" ;\n    rdfs:comment \"A music venue.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:MusicVideoObject a rdfs:Class ;\n    rdfs:label \"MusicVideoObject\" ;\n    rdfs:comment \"A music video file.\" ;\n    rdfs:subClassOf schema:MediaObject .\n\nschema:NGO a rdfs:Class ;\n    rdfs:label \"NGO\" ;\n    rdfs:comment \"Organization: Non-governmental Organization.\" ;\n    rdfs:subClassOf schema:Organization .\n\nschema:NLNonprofitType a rdfs:Class ;\n    rdfs:label \"NLNonprofitType\" ;\n    rdfs:comment \"NLNonprofitType: Non-profit organization type originating from the Netherlands.\" ;\n    rdfs:subClassOf schema:NonprofitType ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:NailSalon a rdfs:Class ;\n    rdfs:label \"NailSalon\" ;\n    rdfs:comment \"A nail salon.\" ;\n    rdfs:subClassOf schema:HealthAndBeautyBusiness .\n\nschema:Nerve a rdfs:Class ;\n    rdfs:label \"Nerve\" ;\n    rdfs:comment \"A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.\" ;\n    rdfs:subClassOf schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:NewsArticle a rdfs:Class ;\n    rdfs:label \"NewsArticle\" ;\n    rdfs:comment \"\"\"A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.\n\nA more detailed overview of [schema.org News markup](/docs/news.html) is also available.\n\"\"\" ;\n    rdfs:subClassOf schema:Article ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP-draws> .\n\nschema:NewsMediaOrganization a rdfs:Class ;\n    rdfs:label \"NewsMediaOrganization\" ;\n    rdfs:comment \"A News/Media organization such as a newspaper or TV station.\" ;\n    rdfs:subClassOf schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:Newspaper a rdfs:Class ;\n    rdfs:label \"Newspaper\" ;\n    rdfs:comment \"A publication containing information about varied topics that are pertinent to general information, a geographic area, or a specific subject matter (i.e. business, culture, education). Often published daily.\" ;\n    rdfs:subClassOf schema:Periodical ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:source <http://www.productontology.org/id/Newspaper> .\n\nschema:NightClub a rdfs:Class ;\n    rdfs:label \"NightClub\" ;\n    rdfs:comment \"A nightclub or discotheque.\" ;\n    rdfs:subClassOf schema:EntertainmentBusiness .\n\nschema:NonprofitType a rdfs:Class ;\n    rdfs:label \"NonprofitType\" ;\n    rdfs:comment \"NonprofitType enumerates several kinds of official non-profit types of which a non-profit organization can be.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Notary a rdfs:Class ;\n    rdfs:label \"Notary\" ;\n    rdfs:comment \"A notary.\" ;\n    rdfs:subClassOf schema:LegalService .\n\nschema:NoteDigitalDocument a rdfs:Class ;\n    rdfs:label \"NoteDigitalDocument\" ;\n    rdfs:comment \"A file containing a note, primarily for the author.\" ;\n    rdfs:subClassOf schema:DigitalDocument .\n\nschema:Number a rdfs:Class,\n        schema:DataType ;\n    rdfs:label \"Number\" ;\n    rdfs:comment \"Data type: Number.\\\\n\\\\nUsage guidelines:\\\\n\\\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\\\\\\\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\" .\n\nschema:NutritionInformation a rdfs:Class ;\n    rdfs:label \"NutritionInformation\" ;\n    rdfs:comment \"Nutritional information about the recipe.\" ;\n    rdfs:subClassOf schema:StructuredValue .\n\nschema:Observation a rdfs:Class ;\n    rdfs:label \"Observation\" ;\n    rdfs:comment \"\"\"Instances of the class [[Observation]] are used to specify observations about an entity (which may or may not be an instance of a [[StatisticalPopulation]]), at a particular time. The principal properties of an [[Observation]] are [[observedNode]], [[measuredProperty]], [[measuredValue]] (or [[median]], etc.) and [[observationDate]] ([[measuredProperty]] properties can, but need not always, be W3C RDF Data Cube \"measure properties\", as in the [lifeExpectancy example](https://www.w3.org/TR/vocab-data-cube/#dsd-example)).\nSee also [[StatisticalPopulation]], and the [data and datasets](/docs/data-and-datasets.html) overview for more details.\n  \"\"\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:Occupation a rdfs:Class ;\n    rdfs:label \"Occupation\" ;\n    rdfs:comment \"A profession, may involve prolonged training and/or a formal qualification.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:OccupationalExperienceRequirements a rdfs:Class ;\n    rdfs:label \"OccupationalExperienceRequirements\" ;\n    rdfs:comment \"Indicates employment-related experience requirements, e.g. [[monthsOfExperience]].\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2681> .\n\nschema:OccupationalTherapy a rdfs:Class ;\n    rdfs:label \"OccupationalTherapy\" ;\n    rdfs:comment \"A treatment of people with physical, emotional, or social problems, using purposeful activity to help them overcome or learn to deal with their problems.\" ;\n    rdfs:subClassOf schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:OceanBodyOfWater a rdfs:Class ;\n    rdfs:label \"OceanBodyOfWater\" ;\n    rdfs:comment \"An ocean (for example, the Pacific).\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:Offer a rdfs:Class ;\n    rdfs:label \"Offer\" ;\n    rdfs:comment \"An offer to transfer some rights to an item or to provide a service â€” for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\\\\n\\\\nNote: As the [[businessFunction]] property, which identifies the form of offer (e.g. sell, lease, repair, dispose), defaults to http://purl.org/goodrelations/v1#Sell; an Offer without a defined businessFunction value can be assumed to be an offer to sell.\\\\n\\\\nFor [GTIN](http://www.gs1.org/barcodes/technical/idkeys/gtin)-related fields, see [Check Digit calculator](http://www.gs1.org/barcodes/support/check_digit_calculator) and [validation guide](http://www.gs1us.org/resources/standards/gtin-validation-guide) from [GS1](http://www.gs1.org/).\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:OfferCatalog a rdfs:Class ;\n    rdfs:label \"OfferCatalog\" ;\n    rdfs:comment \"An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.\" ;\n    rdfs:subClassOf schema:ItemList .\n\nschema:OfferForLease a rdfs:Class ;\n    rdfs:label \"OfferForLease\" ;\n    rdfs:comment \"\"\"An [[OfferForLease]] in Schema.org represents an [[Offer]] to lease out something, i.e. an [[Offer]] whose\n  [[businessFunction]] is [lease out](http://purl.org/goodrelations/v1#LeaseOut.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for\n  background on the underlying concepts.\n  \"\"\" ;\n    rdfs:subClassOf schema:Offer ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2348> .\n\nschema:OfferForPurchase a rdfs:Class ;\n    rdfs:label \"OfferForPurchase\" ;\n    rdfs:comment \"\"\"An [[OfferForPurchase]] in Schema.org represents an [[Offer]] to sell something, i.e. an [[Offer]] whose\n  [[businessFunction]] is [sell](http://purl.org/goodrelations/v1#Sell.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for\n  background on the underlying concepts.\n  \"\"\" ;\n    rdfs:subClassOf schema:Offer ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2348> .\n\nschema:OfferItemCondition a rdfs:Class ;\n    rdfs:label \"OfferItemCondition\" ;\n    rdfs:comment \"A list of possible conditions for the item.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:OfferShippingDetails a rdfs:Class ;\n    rdfs:label \"OfferShippingDetails\" ;\n    rdfs:comment \"\"\"OfferShippingDetails represents information about shipping destinations.\n\nMultiple of these entities can be used to represent different shipping rates for different destinations:\n\nOne entity for Alaska/Hawaii. A different one for continental US.A different one for all France.\n\nMultiple of these entities can be used to represent different shipping costs and delivery times.\n\nTwo entities that are identical but differ in rate and time:\n\ne.g. Cheaper and slower: $5 in 5-7days\nor Fast and expensive: $15 in 1-2 days.\"\"\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:OfficeEquipmentStore a rdfs:Class ;\n    rdfs:label \"OfficeEquipmentStore\" ;\n    rdfs:comment \"An office equipment store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:OnDemandEvent a rdfs:Class ;\n    rdfs:label \"OnDemandEvent\" ;\n    rdfs:comment \"A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand.\" ;\n    rdfs:subClassOf schema:PublicationEvent .\n\nschema:OpeningHoursSpecification a rdfs:Class ;\n    rdfs:label \"OpeningHoursSpecification\" ;\n    rdfs:comment \"\"\"A structured value providing information about the opening hours of a place or a certain service inside a place.\\\\n\\\\n\nThe place is __open__ if the [[opens]] property is specified, and __closed__ otherwise.\\\\n\\\\nIf the value for the [[closes]] property is less than the value for the [[opens]] property then the hour range is assumed to span over the next day.\n      \"\"\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:OpinionNewsArticle a rdfs:Class ;\n    rdfs:label \"OpinionNewsArticle\" ;\n    rdfs:comment \"An [[OpinionNewsArticle]] is a [[NewsArticle]] that primarily expresses opinions rather than journalistic reporting of news and events. For example, a [[NewsArticle]] consisting of a column or [[Blog]]/[[BlogPosting]] entry in the Opinions section of a news publication. \" ;\n    rdfs:subClassOf schema:NewsArticle ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:Optician a rdfs:Class ;\n    rdfs:label \"Optician\" ;\n    rdfs:comment \"A store that sells reading glasses and similar devices for improving vision.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Order a rdfs:Class ;\n    rdfs:label \"Order\" ;\n    rdfs:comment \"An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:OrderAction a rdfs:Class ;\n    rdfs:label \"OrderAction\" ;\n    rdfs:comment \"An agent orders an object/product/service to be delivered/sent.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:OrderItem a rdfs:Class ;\n    rdfs:label \"OrderItem\" ;\n    rdfs:comment \"An order item is a line of an order. It includes the quantity and shipping details of a bought offer.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:OrderStatus a rdfs:Class ;\n    rdfs:label \"OrderStatus\" ;\n    rdfs:comment \"Enumerated status values for Order.\" ;\n    rdfs:subClassOf schema:StatusEnumeration .\n\nschema:Organization a rdfs:Class ;\n    rdfs:label \"Organization\" ;\n    rdfs:comment \"An organization such as a school, NGO, corporation, club, etc.\" ;\n    rdfs:subClassOf schema:Thing .\n\nschema:OrganizationRole a rdfs:Class ;\n    rdfs:label \"OrganizationRole\" ;\n    rdfs:comment \"A subclass of Role used to describe roles within organizations.\" ;\n    rdfs:subClassOf schema:Role .\n\nschema:OrganizeAction a rdfs:Class ;\n    rdfs:label \"OrganizeAction\" ;\n    rdfs:comment \"The act of manipulating/administering/supervising/controlling one or more objects.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:OutletStore a rdfs:Class ;\n    rdfs:label \"OutletStore\" ;\n    rdfs:comment \"An outlet store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:OwnershipInfo a rdfs:Class ;\n    rdfs:label \"OwnershipInfo\" ;\n    rdfs:comment \"A structured value providing information about when a certain organization or person owned a certain product.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:PaintAction a rdfs:Class ;\n    rdfs:label \"PaintAction\" ;\n    rdfs:comment \"The act of producing a painting, typically with paint and canvas as instruments.\" ;\n    rdfs:subClassOf schema:CreateAction .\n\nschema:Painting a rdfs:Class ;\n    rdfs:label \"Painting\" ;\n    rdfs:comment \"A painting.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:PalliativeProcedure a rdfs:Class ;\n    rdfs:label \"PalliativeProcedure\" ;\n    rdfs:comment \"A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.\" ;\n    rdfs:subClassOf schema:MedicalProcedure,\n        schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ParcelDelivery a rdfs:Class ;\n    rdfs:label \"ParcelDelivery\" ;\n    rdfs:comment \"The delivery of a parcel either via the postal service or a commercial service.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ParentAudience a rdfs:Class ;\n    rdfs:label \"ParentAudience\" ;\n    rdfs:comment \"A set of characteristics describing parents, who can be interested in viewing some content.\" ;\n    rdfs:subClassOf schema:PeopleAudience .\n\nschema:Park a rdfs:Class ;\n    rdfs:label \"Park\" ;\n    rdfs:comment \"A park.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:ParkingFacility a rdfs:Class ;\n    rdfs:label \"ParkingFacility\" ;\n    rdfs:comment \"A parking lot or other parking facility.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:PathologyTest a rdfs:Class ;\n    rdfs:label \"PathologyTest\" ;\n    rdfs:comment \"A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.\" ;\n    rdfs:subClassOf schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Patient a rdfs:Class ;\n    rdfs:label \"Patient\" ;\n    rdfs:comment \"A patient is any person recipient of health care services.\" ;\n    rdfs:subClassOf schema:MedicalAudience,\n        schema:Person ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/116154003> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PawnShop a rdfs:Class ;\n    rdfs:label \"PawnShop\" ;\n    rdfs:comment \"A shop that will buy, or lend money against the security of, personal possessions.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:PayAction a rdfs:Class ;\n    rdfs:label \"PayAction\" ;\n    rdfs:comment \"An agent pays a price to a participant.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:PaymentCard a rdfs:Class ;\n    rdfs:label \"PaymentCard\" ;\n    rdfs:comment \"A payment method using a credit, debit, store or other card to associate the payment with an account.\" ;\n    rdfs:subClassOf schema:FinancialProduct,\n        schema:PaymentMethod ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:PaymentChargeSpecification a rdfs:Class ;\n    rdfs:label \"PaymentChargeSpecification\" ;\n    rdfs:comment \"The costs of settling the payment using a particular payment method.\" ;\n    rdfs:subClassOf schema:PriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:PaymentMethod a rdfs:Class ;\n    rdfs:label \"PaymentMethod\" ;\n    rdfs:comment \"\"\"A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.\\\\n\\\\nCommonly used values:\\\\n\\\\n* http://purl.org/goodrelations/v1#ByBankTransferInAdvance\\\\\\\\n* http://purl.org/goodrelations/v1#ByInvoice\\\\\\\\n* http://purl.org/goodrelations/v1#Cash\\\\\\\\n* http://purl.org/goodrelations/v1#CheckInAdvance\\\\\\\\n* http://purl.org/goodrelations/v1#COD\\\\\\\\n* http://purl.org/goodrelations/v1#DirectDebit\\\\\\\\n* http://purl.org/goodrelations/v1#GoogleCheckout\\\\\\\\n* http://purl.org/goodrelations/v1#PayPal\\\\\\\\n* http://purl.org/goodrelations/v1#PaySwarm\n        \"\"\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:PaymentService a rdfs:Class ;\n    rdfs:label \"PaymentService\" ;\n    rdfs:comment \"A Service to transfer funds from a person or organization to a beneficiary person or organization.\" ;\n    rdfs:subClassOf schema:FinancialProduct ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:PaymentStatusType a rdfs:Class ;\n    rdfs:label \"PaymentStatusType\" ;\n    rdfs:comment \"A specific payment status. For example, PaymentDue, PaymentComplete, etc.\" ;\n    rdfs:subClassOf schema:StatusEnumeration .\n\nschema:PeopleAudience a rdfs:Class ;\n    rdfs:label \"PeopleAudience\" ;\n    rdfs:comment \"A set of characteristics belonging to people, e.g. who compose an item's target audience.\" ;\n    rdfs:subClassOf schema:Audience .\n\nschema:PerformAction a rdfs:Class ;\n    rdfs:label \"PerformAction\" ;\n    rdfs:comment \"The act of participating in performance arts.\" ;\n    rdfs:subClassOf schema:PlayAction .\n\nschema:PerformanceRole a rdfs:Class ;\n    rdfs:label \"PerformanceRole\" ;\n    rdfs:comment \"A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.\" ;\n    rdfs:subClassOf schema:Role .\n\nschema:PerformingArtsTheater a rdfs:Class ;\n    rdfs:label \"PerformingArtsTheater\" ;\n    rdfs:comment \"A theater or other performing art center.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:PerformingGroup a rdfs:Class ;\n    rdfs:label \"PerformingGroup\" ;\n    rdfs:comment \"A performance group, such as a band, an orchestra, or a circus.\" ;\n    rdfs:subClassOf schema:Organization .\n\nschema:Periodical a rdfs:Class ;\n    rdfs:label \"Periodical\" ;\n    rdfs:comment \"A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.\\\\n\\\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).\" ;\n    rdfs:subClassOf schema:CreativeWorkSeries ;\n    ns2:equivalentClass <http://purl.org/ontology/bibo/Periodical> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:Permit a rdfs:Class ;\n    rdfs:label \"Permit\" ;\n    rdfs:comment \"A permit issued by an organization, e.g. a parking pass.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:Person a rdfs:Class ;\n    rdfs:label \"Person\" ;\n    rdfs:comment \"A person (alive, dead, undead, or fictional).\" ;\n    rdfs:subClassOf schema:Thing ;\n    ns2:equivalentClass <http://xmlns.com/foaf/0.1/Person> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> .\n\nschema:PetStore a rdfs:Class ;\n    rdfs:label \"PetStore\" ;\n    rdfs:comment \"A pet store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:Pharmacy a rdfs:Class ;\n    rdfs:label \"Pharmacy\" ;\n    rdfs:comment \"A pharmacy or drugstore.\" ;\n    rdfs:subClassOf schema:MedicalBusiness,\n        schema:MedicalOrganization .\n\nschema:Photograph a rdfs:Class ;\n    rdfs:label \"Photograph\" ;\n    rdfs:comment \"A photograph.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:PhotographAction a rdfs:Class ;\n    rdfs:label \"PhotographAction\" ;\n    rdfs:comment \"The act of capturing still images of objects using a camera.\" ;\n    rdfs:subClassOf schema:CreateAction .\n\nschema:PhysicalActivity a rdfs:Class ;\n    rdfs:label \"PhysicalActivity\" ;\n    rdfs:comment \"Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.\" ;\n    rdfs:subClassOf schema:LifestyleModification ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PhysicalActivityCategory a rdfs:Class ;\n    rdfs:label \"PhysicalActivityCategory\" ;\n    rdfs:comment \"Categories of physical activity, organized by physiologic classification.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PhysicalExam a rdfs:Class ;\n    rdfs:label \"PhysicalExam\" ;\n    rdfs:comment \"A type of physical examination of a patient performed by a physician. \" ;\n    rdfs:subClassOf schema:MedicalEnumeration,\n        schema:MedicalProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PhysicalTherapy a rdfs:Class ;\n    rdfs:label \"PhysicalTherapy\" ;\n    rdfs:comment \"A process of progressive physical care and rehabilitation aimed at improving a health condition.\" ;\n    rdfs:subClassOf schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Physician a rdfs:Class ;\n    rdfs:label \"Physician\" ;\n    rdfs:comment \"A doctor's office.\" ;\n    rdfs:subClassOf schema:MedicalBusiness,\n        schema:MedicalOrganization .\n\nschema:Place a rdfs:Class ;\n    rdfs:label \"Place\" ;\n    rdfs:comment \"Entities that have a somewhat fixed, physical extension.\" ;\n    rdfs:subClassOf schema:Thing .\n\nschema:PlaceOfWorship a rdfs:Class ;\n    rdfs:label \"PlaceOfWorship\" ;\n    rdfs:comment \"Place of worship, such as a church, synagogue, or mosque.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:PlanAction a rdfs:Class ;\n    rdfs:label \"PlanAction\" ;\n    rdfs:comment \"The act of planning the execution of an event/task/action/reservation/plan to a future date.\" ;\n    rdfs:subClassOf schema:OrganizeAction .\n\nschema:Play a rdfs:Class ;\n    rdfs:label \"Play\" ;\n    rdfs:comment \"A play is a form of literature, usually consisting of dialogue between characters, intended for theatrical performance rather than just reading. Note the peformance of a Play would be a [[TheaterEvent]] - the *Play* being the [[workPerformed]].\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1816> .\n\nschema:PlayAction a rdfs:Class ;\n    rdfs:label \"PlayAction\" ;\n    rdfs:comment \"The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[ListenAction]]: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.\\\\\\\\n* [[WatchAction]]: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:Playground a rdfs:Class ;\n    rdfs:label \"Playground\" ;\n    rdfs:comment \"A playground.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:Plumber a rdfs:Class ;\n    rdfs:label \"Plumber\" ;\n    rdfs:comment \"A plumbing service.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:PodcastEpisode a rdfs:Class ;\n    rdfs:label \"PodcastEpisode\" ;\n    rdfs:comment \"A single episode of a podcast series.\" ;\n    rdfs:subClassOf schema:Episode ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/373> .\n\nschema:PodcastSeason a rdfs:Class ;\n    rdfs:label \"PodcastSeason\" ;\n    rdfs:comment \"A single season of a podcast. Many podcasts do not break down into separate seasons. In that case, PodcastSeries should be used.\" ;\n    rdfs:subClassOf schema:CreativeWorkSeason ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/373> .\n\nschema:PodcastSeries a rdfs:Class ;\n    rdfs:label \"PodcastSeries\" ;\n    rdfs:comment \"A podcast is an episodic series of digital audio or video files which a user can download and listen to.\" ;\n    rdfs:subClassOf schema:CreativeWorkSeries ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/373> .\n\nschema:PoliceStation a rdfs:Class ;\n    rdfs:label \"PoliceStation\" ;\n    rdfs:comment \"A police station.\" ;\n    rdfs:subClassOf schema:CivicStructure,\n        schema:EmergencyService .\n\nschema:Pond a rdfs:Class ;\n    rdfs:label \"Pond\" ;\n    rdfs:comment \"A pond.\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:PostOffice a rdfs:Class ;\n    rdfs:label \"PostOffice\" ;\n    rdfs:comment \"A post office.\" ;\n    rdfs:subClassOf schema:GovernmentOffice .\n\nschema:PostalAddress a rdfs:Class ;\n    rdfs:label \"PostalAddress\" ;\n    rdfs:comment \"The mailing address.\" ;\n    rdfs:subClassOf schema:ContactPoint .\n\nschema:PostalCodeRangeSpecification a rdfs:Class ;\n    rdfs:label \"PostalCodeRangeSpecification\" ;\n    rdfs:comment \"Indicates a range of postalcodes, usually defined as the set of valid codes between [[postalCodeBegin]] and [[postalCodeEnd]], inclusively.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:Poster a rdfs:Class ;\n    rdfs:label \"Poster\" ;\n    rdfs:comment \"A large, usually printed placard, bill, or announcement, often illustrated, that is posted to advertise or publicize something.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1448> .\n\nschema:PreOrderAction a rdfs:Class ;\n    rdfs:label \"PreOrderAction\" ;\n    rdfs:comment \"An agent orders a (not yet released) object/product/service to be delivered/sent.\" ;\n    rdfs:subClassOf schema:TradeAction ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1125> .\n\nschema:PrependAction a rdfs:Class ;\n    rdfs:label \"PrependAction\" ;\n    rdfs:comment \"The act of inserting at the beginning if an ordered collection.\" ;\n    rdfs:subClassOf schema:InsertAction .\n\nschema:Preschool a rdfs:Class ;\n    rdfs:label \"Preschool\" ;\n    rdfs:comment \"A preschool.\" ;\n    rdfs:subClassOf schema:EducationalOrganization .\n\nschema:PresentationDigitalDocument a rdfs:Class ;\n    rdfs:label \"PresentationDigitalDocument\" ;\n    rdfs:comment \"A file containing slides or used for a presentation.\" ;\n    rdfs:subClassOf schema:DigitalDocument .\n\nschema:PreventionIndication a rdfs:Class ;\n    rdfs:label \"PreventionIndication\" ;\n    rdfs:comment \"An indication for preventing an underlying condition, symptom, etc.\" ;\n    rdfs:subClassOf schema:MedicalIndication ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PriceComponentTypeEnumeration a rdfs:Class ;\n    rdfs:label \"PriceComponentTypeEnumeration\" ;\n    rdfs:comment \"Enumerates different price components that together make up the total price for an offered product.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:PriceSpecification a rdfs:Class ;\n    rdfs:label \"PriceSpecification\" ;\n    rdfs:comment \"A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use [[MonetaryAmount]] to describe independent amounts of money such as a salary, credit card limits, etc.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:PriceTypeEnumeration a rdfs:Class ;\n    rdfs:label \"PriceTypeEnumeration\" ;\n    rdfs:comment \"Enumerates different price types, for example list price, invoice price, and sale price.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2712> .\n\nschema:Product a rdfs:Class ;\n    rdfs:label \"Product\" ;\n    rdfs:comment \"Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.\" ;\n    rdfs:subClassOf schema:Thing ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:ProductCollection a rdfs:Class ;\n    rdfs:label \"ProductCollection\" ;\n    rdfs:comment \"A set of products (either [[ProductGroup]]s or specific variants) that are listed together e.g. in an [[Offer]].\" ;\n    rdfs:subClassOf schema:Collection,\n        schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2597> .\n\nschema:ProductGroup a rdfs:Class ;\n    rdfs:label \"ProductGroup\" ;\n    rdfs:comment \"\"\"A ProductGroup represents a group of [[Product]]s that vary only in certain well-described ways, such as by [[size]], [[color]], [[material]] etc.\n\nWhile a ProductGroup itself is not directly offered for sale, the various varying products that it represents can be. The ProductGroup serves as a prototype or template, standing in for all of the products who have an [[isVariantOf]] relationship to it. As such, properties (including additional types) can be applied to the ProductGroup to represent characteristics shared by each of the (possibly very many) variants. Properties that reference a ProductGroup are not included in this mechanism; neither are the following specific properties [[variesBy]], [[hasVariant]], [[url]]. \"\"\" ;\n    rdfs:subClassOf schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2597> .\n\nschema:ProductModel a rdfs:Class ;\n    rdfs:label \"ProductModel\" ;\n    rdfs:comment \"A datasheet or vendor specification of a product (in the sense of a prototypical description).\" ;\n    rdfs:subClassOf schema:Product ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:ProfessionalService a rdfs:Class ;\n    rdfs:label \"ProfessionalService\" ;\n    rdfs:comment \"\"\"Original definition: \"provider of professional services.\"\\\\n\\\\nThe general [[ProfessionalService]] type for local businesses was deprecated due to confusion with [[Service]]. For reference, the types that it included were: [[Dentist]],\n        [[AccountingService]], [[Attorney]], [[Notary]], as well as types for several kinds of [[HomeAndConstructionBusiness]]: [[Electrician]], [[GeneralContractor]],\n        [[HousePainter]], [[Locksmith]], [[Plumber]], [[RoofingContractor]]. [[LegalService]] was introduced as a more inclusive supertype of [[Attorney]].\"\"\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:ProfilePage a rdfs:Class ;\n    rdfs:label \"ProfilePage\" ;\n    rdfs:comment \"Web page type: Profile page.\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:ProgramMembership a rdfs:Class ;\n    rdfs:label \"ProgramMembership\" ;\n    rdfs:comment \"Used to describe membership in a loyalty programs (e.g. \\\\\"StarAliance\\\\\"), traveler clubs (e.g. \\\\\"AAA\\\\\"), purchase clubs (\\\\\"Safeway Club\\\\\"), etc.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:Project a rdfs:Class ;\n    rdfs:label \"Project\" ;\n    rdfs:comment \"\"\"An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim.\nUse properties from [[Organization]], [[subOrganization]]/[[parentOrganization]] to indicate project sub-structures. \n   \"\"\" ;\n    rdfs:subClassOf schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/383>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FundInfoCollab> .\n\nschema:PronounceableText a rdfs:Class ;\n    rdfs:label \"PronounceableText\" ;\n    rdfs:comment \"Data type: PronounceableText.\" ;\n    rdfs:subClassOf schema:Text ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2108> .\n\nschema:Property a rdfs:Class ;\n    rdfs:label \"Property\" ;\n    rdfs:comment \"A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    ns2:equivalentClass rdf:Property ;\n    schema:isPartOf <https://meta.schema.org> .\n\nschema:PropertyValue a rdfs:Class ;\n    rdfs:label \"PropertyValue\" ;\n    rdfs:comment \"\"\"A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.\\\\n\\\\n Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.\n    \"\"\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:PropertyValueSpecification a rdfs:Class ;\n    rdfs:label \"PropertyValueSpecification\" ;\n    rdfs:comment \"A Property value specification.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass> .\n\nschema:PsychologicalTreatment a rdfs:Class ;\n    rdfs:label \"PsychologicalTreatment\" ;\n    rdfs:comment \"A process of care relying upon counseling, dialogue and communication  aimed at improving a mental health condition without use of drugs.\" ;\n    rdfs:subClassOf schema:TherapeuticProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PublicSwimmingPool a rdfs:Class ;\n    rdfs:label \"PublicSwimmingPool\" ;\n    rdfs:comment \"A public swimming pool.\" ;\n    rdfs:subClassOf schema:SportsActivityLocation .\n\nschema:PublicToilet a rdfs:Class ;\n    rdfs:label \"PublicToilet\" ;\n    rdfs:comment \"A public toilet is a room or small building containing one or more toilets (and possibly also urinals) which is available for use by the general public, or by customers or employees of certain businesses.\" ;\n    rdfs:subClassOf schema:CivicStructure ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1624> .\n\nschema:PublicationEvent a rdfs:Class ;\n    rdfs:label \"PublicationEvent\" ;\n    rdfs:comment \"A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:PublicationIssue a rdfs:Class ;\n    rdfs:label \"PublicationIssue\" ;\n    rdfs:comment \"A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.\\\\n\\\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    ns2:equivalentClass <http://purl.org/ontology/bibo/Issue> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:PublicationVolume a rdfs:Class ;\n    rdfs:label \"PublicationVolume\" ;\n    rdfs:comment \"A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.\\\\n\\\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:QAPage a rdfs:Class ;\n    rdfs:label \"QAPage\" ;\n    rdfs:comment \"A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:QualitativeValue a rdfs:Class ;\n    rdfs:label \"QualitativeValue\" ;\n    rdfs:comment \"A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:QuantitativeValue a rdfs:Class ;\n    rdfs:label \"QuantitativeValue\" ;\n    rdfs:comment \" A point value or interval for product characteristics and other purposes.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:QuantitativeValueDistribution a rdfs:Class ;\n    rdfs:label \"QuantitativeValueDistribution\" ;\n    rdfs:comment \"A statistical distribution of values.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:Quantity a rdfs:Class ;\n    rdfs:label \"Quantity\" ;\n    rdfs:comment \"Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:Question a rdfs:Class ;\n    rdfs:label \"Question\" ;\n    rdfs:comment \"A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.\" ;\n    rdfs:subClassOf schema:Comment ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange> .\n\nschema:Quiz a rdfs:Class ;\n    rdfs:label \"Quiz\" ;\n    rdfs:comment \"Quiz: A test of knowledge, skills and abilities.\" ;\n    rdfs:subClassOf schema:LearningResource ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2611> .\n\nschema:Quotation a rdfs:Class ;\n    rdfs:label \"Quotation\" ;\n    rdfs:comment \"A quotation. Often but not necessarily from some written work, attributable to a real world author and - if associated with a fictional character - to any fictional Person. Use [[isBasedOn]] to link to source/origin. The [[recordedIn]] property can be used to reference a Quotation from an [[Event]].\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/271> .\n\nschema:QuoteAction a rdfs:Class ;\n    rdfs:label \"QuoteAction\" ;\n    rdfs:comment \"An agent quotes/estimates/appraises an object/product/service with a price at a location/store.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:RVPark a rdfs:Class ;\n    rdfs:label \"RVPark\" ;\n    rdfs:comment \"A place offering space for \\\\\"Recreational Vehicles\\\\\", Caravans, mobile homes and the like.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:RadiationTherapy a rdfs:Class ;\n    rdfs:label \"RadiationTherapy\" ;\n    rdfs:comment \"A process of care using radiation aimed at improving a health condition.\" ;\n    rdfs:subClassOf schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RadioBroadcastService a rdfs:Class ;\n    rdfs:label \"RadioBroadcastService\" ;\n    rdfs:comment \"A delivery service through which radio content is provided via broadcast over the air or online.\" ;\n    rdfs:subClassOf schema:BroadcastService ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2109> .\n\nschema:RadioChannel a rdfs:Class ;\n    rdfs:label \"RadioChannel\" ;\n    rdfs:comment \"A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.\" ;\n    rdfs:subClassOf schema:BroadcastChannel .\n\nschema:RadioClip a rdfs:Class ;\n    rdfs:label \"RadioClip\" ;\n    rdfs:comment \"A short radio program or a segment/part of a radio program.\" ;\n    rdfs:subClassOf schema:Clip .\n\nschema:RadioEpisode a rdfs:Class ;\n    rdfs:label \"RadioEpisode\" ;\n    rdfs:comment \"A radio episode which can be part of a series or season.\" ;\n    rdfs:subClassOf schema:Episode .\n\nschema:RadioSeason a rdfs:Class ;\n    rdfs:label \"RadioSeason\" ;\n    rdfs:comment \"Season dedicated to radio broadcast and associated online delivery.\" ;\n    rdfs:subClassOf schema:CreativeWorkSeason .\n\nschema:RadioSeries a rdfs:Class ;\n    rdfs:label \"RadioSeries\" ;\n    rdfs:comment \"CreativeWorkSeries dedicated to radio broadcast and associated online delivery.\" ;\n    rdfs:subClassOf schema:CreativeWorkSeries .\n\nschema:RadioStation a rdfs:Class ;\n    rdfs:label \"RadioStation\" ;\n    rdfs:comment \"A radio station.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:Rating a rdfs:Class ;\n    rdfs:label \"Rating\" ;\n    rdfs:comment \"A rating is an evaluation on a numeric scale, such as 1 to 5 stars.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ReactAction a rdfs:Class ;\n    rdfs:label \"ReactAction\" ;\n    rdfs:comment \"The act of responding instinctively and emotionally to an object, expressing a sentiment.\" ;\n    rdfs:subClassOf schema:AssessAction .\n\nschema:ReadAction a rdfs:Class ;\n    rdfs:label \"ReadAction\" ;\n    rdfs:comment \"The act of consuming written content.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:RealEstateAgent a rdfs:Class ;\n    rdfs:label \"RealEstateAgent\" ;\n    rdfs:comment \"A real-estate agent.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:RealEstateListing a rdfs:Class ;\n    rdfs:label \"RealEstateListing\" ;\n    rdfs:comment \"\"\"A [[RealEstateListing]] is a listing that describes one or more real-estate [[Offer]]s (whose [[businessFunction]] is typically to lease out, or to sell).\n  The [[RealEstateListing]] type itself represents the overall listing, as manifested in some [[WebPage]].\n  \"\"\" ;\n    rdfs:subClassOf schema:WebPage ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2348> .\n\nschema:ReceiveAction a rdfs:Class ;\n    rdfs:label \"ReceiveAction\" ;\n    rdfs:comment \"The act of physically/electronically taking delivery of an object that has been transferred from an origin to a destination. Reciprocal of SendAction.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[SendAction]]: The reciprocal of ReceiveAction.\\\\\\\\n* [[TakeAction]]: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:Recipe a rdfs:Class ;\n    rdfs:label \"Recipe\" ;\n    rdfs:comment \"A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via [[suitableForDiet]]. The [[keywords]] property can also be used to add more detail.\" ;\n    rdfs:subClassOf schema:HowTo .\n\nschema:Recommendation a rdfs:Class ;\n    rdfs:label \"Recommendation\" ;\n    rdfs:comment \"[[Recommendation]] is a type of [[Review]] that suggests or proposes something as the best option or best course of action. Recommendations may be for products or services, or other concrete things, as in the case of a ranked list or product guide. A [[Guide]] may list multiple recommendations for different categories. For example, in a [[Guide]] about which TVs to buy, the author may have several [[Recommendation]]s.\" ;\n    rdfs:subClassOf schema:Review ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2405> .\n\nschema:RecommendedDoseSchedule a rdfs:Class ;\n    rdfs:label \"RecommendedDoseSchedule\" ;\n    rdfs:comment \"A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.\" ;\n    rdfs:subClassOf schema:DoseSchedule ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RecyclingCenter a rdfs:Class ;\n    rdfs:label \"RecyclingCenter\" ;\n    rdfs:comment \"A recycling center.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:RefundTypeEnumeration a rdfs:Class ;\n    rdfs:label \"RefundTypeEnumeration\" ;\n    rdfs:comment \"RefundTypeEnumeration enumerates several kinds of product return refund types.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:RegisterAction a rdfs:Class ;\n    rdfs:label \"RegisterAction\" ;\n    rdfs:comment \"The act of registering to be a user of a service, product or web page.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[JoinAction]]: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, *not* a group/team of people.\\\\\\\\n* [FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.\\\\\\\\n* [[SubscribeAction]]: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:RejectAction a rdfs:Class ;\n    rdfs:label \"RejectAction\" ;\n    rdfs:comment \"The act of rejecting to/adopting an object.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[AcceptAction]]: The antonym of RejectAction.\" ;\n    rdfs:subClassOf schema:AllocateAction .\n\nschema:RentAction a rdfs:Class ;\n    rdfs:label \"RentAction\" ;\n    rdfs:comment \"The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:RentalCarReservation a rdfs:Class ;\n    rdfs:label \"RentalCarReservation\" ;\n    rdfs:comment \"A reservation for a rental car.\\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:RepaymentSpecification a rdfs:Class ;\n    rdfs:label \"RepaymentSpecification\" ;\n    rdfs:comment \"A structured value representing repayment.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:ReplaceAction a rdfs:Class ;\n    rdfs:label \"ReplaceAction\" ;\n    rdfs:comment \"The act of editing a recipient by replacing an old object with a new object.\" ;\n    rdfs:subClassOf schema:UpdateAction .\n\nschema:ReplyAction a rdfs:Class ;\n    rdfs:label \"ReplyAction\" ;\n    rdfs:comment \"The act of responding to a question/message asked/sent by the object. Related to [[AskAction]]\\\\n\\\\nRelated actions:\\\\n\\\\n* [[AskAction]]: Appears generally as an origin of a ReplyAction.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:Report a rdfs:Class ;\n    rdfs:label \"Report\" ;\n    rdfs:comment \"A Report generated by governmental or non-governmental organization.\" ;\n    rdfs:subClassOf schema:Article .\n\nschema:ReportageNewsArticle a rdfs:Class ;\n    rdfs:label \"ReportageNewsArticle\" ;\n    rdfs:comment \"\"\"The [[ReportageNewsArticle]] type is a subtype of [[NewsArticle]] representing\n news articles which are the result of journalistic news reporting conventions.\n\nIn practice many news publishers produce a wide variety of article types, many of which might be considered a [[NewsArticle]] but not a [[ReportageNewsArticle]]. For example, opinion pieces, reviews, analysis, sponsored or satirical articles, or articles that combine several of these elements.\n\nThe [[ReportageNewsArticle]] type is based on a stricter ideal for \"news\" as a work of journalism, with articles based on factual information either observed or verified by the author, or reported and verified from knowledgeable sources.  This often includes perspectives from multiple viewpoints on a particular issue (distinguishing news reports from public relations or propaganda).  News reports in the [[ReportageNewsArticle]] sense de-emphasize the opinion of the author, with commentary and value judgements typically expressed elsewhere.\n\nA [[ReportageNewsArticle]] which goes deeper into analysis can also be marked with an additional type of [[AnalysisNewsArticle]].\n\"\"\" ;\n    rdfs:subClassOf schema:NewsArticle ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:ReportedDoseSchedule a rdfs:Class ;\n    rdfs:label \"ReportedDoseSchedule\" ;\n    rdfs:comment \"A patient-reported or observed dosing schedule for a drug or supplement.\" ;\n    rdfs:subClassOf schema:DoseSchedule ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ResearchProject a rdfs:Class ;\n    rdfs:label \"ResearchProject\" ;\n    rdfs:comment \"A Research project.\" ;\n    rdfs:subClassOf schema:Project ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/383>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FundInfoCollab> .\n\nschema:Researcher a rdfs:Class ;\n    rdfs:label \"Researcher\" ;\n    rdfs:comment \"Researchers.\" ;\n    rdfs:subClassOf schema:Audience .\n\nschema:Reservation a rdfs:Class ;\n    rdfs:label \"Reservation\" ;\n    rdfs:comment \"Describes a reservation for travel, dining or an event. Some reservations require tickets. \\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use [[Offer]].\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ReservationPackage a rdfs:Class ;\n    rdfs:label \"ReservationPackage\" ;\n    rdfs:comment \"A group of multiple reservations with common values for all sub-reservations.\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:ReservationStatusType a rdfs:Class ;\n    rdfs:label \"ReservationStatusType\" ;\n    rdfs:comment \"Enumerated status values for Reservation.\" ;\n    rdfs:subClassOf schema:StatusEnumeration .\n\nschema:ReserveAction a rdfs:Class ;\n    rdfs:label \"ReserveAction\" ;\n    rdfs:comment \"Reserving a concrete object.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[ScheduleAction]]: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.\" ;\n    rdfs:subClassOf schema:PlanAction .\n\nschema:Reservoir a rdfs:Class ;\n    rdfs:label \"Reservoir\" ;\n    rdfs:comment \"A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:Residence a rdfs:Class ;\n    rdfs:label \"Residence\" ;\n    rdfs:comment \"The place where a person lives.\" ;\n    rdfs:subClassOf schema:Place .\n\nschema:Resort a rdfs:Class ;\n    rdfs:label \"Resort\" ;\n    rdfs:comment \"\"\"A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Resort\">http://en.wikipedia.org/wiki/Resort</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n    \"\"\" ;\n    rdfs:subClassOf schema:LodgingBusiness ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:Restaurant a rdfs:Class ;\n    rdfs:label \"Restaurant\" ;\n    rdfs:comment \"A restaurant.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:RestrictedDiet a rdfs:Class ;\n    rdfs:label \"RestrictedDiet\" ;\n    rdfs:comment \"A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons. \" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:ResumeAction a rdfs:Class ;\n    rdfs:label \"ResumeAction\" ;\n    rdfs:comment \"The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).\" ;\n    rdfs:subClassOf schema:ControlAction .\n\nschema:ReturnAction a rdfs:Class ;\n    rdfs:label \"ReturnAction\" ;\n    rdfs:comment \"The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:ReturnFeesEnumeration a rdfs:Class ;\n    rdfs:label \"ReturnFeesEnumeration\" ;\n    rdfs:comment \"ReturnFeesEnumeration expresses policies for return fees.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:Review a rdfs:Class ;\n    rdfs:label \"Review\" ;\n    rdfs:comment \"A review of an item - for example, of a restaurant, movie, or store.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:ReviewAction a rdfs:Class ;\n    rdfs:label \"ReviewAction\" ;\n    rdfs:comment \"The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.\" ;\n    rdfs:subClassOf schema:AssessAction .\n\nschema:ReviewNewsArticle a rdfs:Class ;\n    rdfs:label \"ReviewNewsArticle\" ;\n    rdfs:comment \"A [[NewsArticle]] and [[CriticReview]] providing a professional critic's assessment of a service, product, performance, or artistic or literary work.\" ;\n    rdfs:subClassOf schema:CriticReview,\n        schema:NewsArticle ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:RiverBodyOfWater a rdfs:Class ;\n    rdfs:label \"RiverBodyOfWater\" ;\n    rdfs:comment \"A river (for example, the broad majestic Shannon).\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:Role a rdfs:Class ;\n    rdfs:label \"Role\" ;\n    rdfs:comment \"Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.\\\\n\\\\nSee also [blog post](http://blog.schema.org/2014/06/introducing-role.html).\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:RoofingContractor a rdfs:Class ;\n    rdfs:label \"RoofingContractor\" ;\n    rdfs:comment \"A roofing contractor.\" ;\n    rdfs:subClassOf schema:HomeAndConstructionBusiness .\n\nschema:Room a rdfs:Class ;\n    rdfs:label \"Room\" ;\n    rdfs:comment \"\"\"A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Room\">http://en.wikipedia.org/wiki/Room</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:Accommodation ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:RsvpAction a rdfs:Class ;\n    rdfs:label \"RsvpAction\" ;\n    rdfs:comment \"The act of notifying an event organizer as to whether you expect to attend the event.\" ;\n    rdfs:subClassOf schema:InformAction .\n\nschema:RsvpResponseType a rdfs:Class ;\n    rdfs:label \"RsvpResponseType\" ;\n    rdfs:comment \"RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:SaleEvent a rdfs:Class ;\n    rdfs:label \"SaleEvent\" ;\n    rdfs:comment \"Event type: Sales event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:SatiricalArticle a rdfs:Class ;\n    rdfs:label \"SatiricalArticle\" ;\n    rdfs:comment \"An [[Article]] whose content is primarily [[satirical]](https://en.wikipedia.org/wiki/Satire) in nature, i.e. unlikely to be literally true. A satirical article is sometimes but not necessarily also a [[NewsArticle]]. [[ScholarlyArticle]]s are also sometimes satirized.\" ;\n    rdfs:subClassOf schema:Article ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:Schedule a rdfs:Class ;\n    rdfs:label \"Schedule\" ;\n    rdfs:comment \"\"\"A schedule defines a repeating time period used to describe a regularly occurring [[Event]]. At a minimum a schedule will specify [[repeatFrequency]] which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely.\n      This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also\n      have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.\"\"\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:ScheduleAction a rdfs:Class ;\n    rdfs:label \"ScheduleAction\" ;\n    rdfs:comment \"Scheduling future actions, events, or tasks.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[ReserveAction]]: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.\" ;\n    rdfs:subClassOf schema:PlanAction .\n\nschema:ScholarlyArticle a rdfs:Class ;\n    rdfs:label \"ScholarlyArticle\" ;\n    rdfs:comment \"A scholarly article.\" ;\n    rdfs:subClassOf schema:Article .\n\nschema:School a rdfs:Class ;\n    rdfs:label \"School\" ;\n    rdfs:comment \"A school.\" ;\n    rdfs:subClassOf schema:EducationalOrganization .\n\nschema:SchoolDistrict a rdfs:Class ;\n    rdfs:label \"SchoolDistrict\" ;\n    rdfs:comment \"A School District is an administrative area for the administration of schools.\" ;\n    rdfs:subClassOf schema:AdministrativeArea ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2500> .\n\nschema:ScreeningEvent a rdfs:Class ;\n    rdfs:label \"ScreeningEvent\" ;\n    rdfs:comment \"A screening of a movie or other video.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:Sculpture a rdfs:Class ;\n    rdfs:label \"Sculpture\" ;\n    rdfs:comment \"A piece of sculpture.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:SeaBodyOfWater a rdfs:Class ;\n    rdfs:label \"SeaBodyOfWater\" ;\n    rdfs:comment \"A sea (for example, the Caspian sea).\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:SearchAction a rdfs:Class ;\n    rdfs:label \"SearchAction\" ;\n    rdfs:comment \"The act of searching for an object.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[FindAction]]: SearchAction generally leads to a FindAction, but not necessarily.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:SearchResultsPage a rdfs:Class ;\n    rdfs:label \"SearchResultsPage\" ;\n    rdfs:comment \"Web page type: Search results page.\" ;\n    rdfs:subClassOf schema:WebPage .\n\nschema:Season a rdfs:Class ;\n    rdfs:label \"Season\" ;\n    rdfs:comment \"A media season e.g. tv, radio, video game etc.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:supersededBy schema:CreativeWorkSeason .\n\nschema:Seat a rdfs:Class ;\n    rdfs:label \"Seat\" ;\n    rdfs:comment \"Used to describe a seat, such as a reserved seat in an event reservation.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:SeekToAction a rdfs:Class ;\n    rdfs:label \"SeekToAction\" ;\n    rdfs:comment \"This is the [[Action]] of navigating to a specific [[startOffset]] timestamp within a [[VideoObject]], typically represented with a URL template structure.\" ;\n    rdfs:subClassOf schema:Action ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2722> .\n\nschema:SelfStorage a rdfs:Class ;\n    rdfs:label \"SelfStorage\" ;\n    rdfs:comment \"A self-storage facility.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:SellAction a rdfs:Class ;\n    rdfs:label \"SellAction\" ;\n    rdfs:comment \"The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:SendAction a rdfs:Class ;\n    rdfs:label \"SendAction\" ;\n    rdfs:comment \"The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:\\\\n\\\\n* [[ReceiveAction]]: The reciprocal of SendAction.\\\\\\\\n* [[GiveAction]]: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:Series a rdfs:Class ;\n    rdfs:label \"Series\" ;\n    rdfs:comment \"A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also [[CreativeWorkSeries]], [[EventSeries]].\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:Service a rdfs:Class ;\n    rdfs:label \"Service\" ;\n    rdfs:comment \"A service provided by an organization, e.g. delivery service, print services, etc.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ServiceChannel a rdfs:Class ;\n    rdfs:label \"ServiceChannel\" ;\n    rdfs:comment \"A means for accessing a service, e.g. a government office location, web site, or phone number.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:ShareAction a rdfs:Class ;\n    rdfs:label \"ShareAction\" ;\n    rdfs:comment \"The act of distributing content to people for their amusement or edification.\" ;\n    rdfs:subClassOf schema:CommunicateAction .\n\nschema:SheetMusic a rdfs:Class ;\n    rdfs:label \"SheetMusic\" ;\n    rdfs:comment \"Printed music, as opposed to performed or recorded music.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1448> .\n\nschema:ShippingDeliveryTime a rdfs:Class ;\n    rdfs:label \"ShippingDeliveryTime\" ;\n    rdfs:comment \"ShippingDeliveryTime provides various pieces of information about delivery times for shipping.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:ShippingRateSettings a rdfs:Class ;\n    rdfs:label \"ShippingRateSettings\" ;\n    rdfs:comment \"A ShippingRateSettings represents re-usable pieces of shipping information. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of an [[OfferShippingDetails]]. Several occurrences can be published, distinguished and matched (i.e. identified/referenced) by their different values for [[shippingLabel]].\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:ShoeStore a rdfs:Class ;\n    rdfs:label \"ShoeStore\" ;\n    rdfs:comment \"A shoe store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:ShoppingCenter a rdfs:Class ;\n    rdfs:label \"ShoppingCenter\" ;\n    rdfs:comment \"A shopping center or mall.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:ShortStory a rdfs:Class ;\n    rdfs:label \"ShortStory\" ;\n    rdfs:comment \"Short story or tale. A brief work of literature, usually written in narrative prose.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1976> .\n\nschema:SingleFamilyResidence a rdfs:Class ;\n    rdfs:label \"SingleFamilyResidence\" ;\n    rdfs:comment \"Residence type: Single-family home.\" ;\n    rdfs:subClassOf schema:House .\n\nschema:SiteNavigationElement a rdfs:Class ;\n    rdfs:label \"SiteNavigationElement\" ;\n    rdfs:comment \"A navigation element of the page.\" ;\n    rdfs:subClassOf schema:WebPageElement .\n\nschema:SizeGroupEnumeration a rdfs:Class ;\n    rdfs:label \"SizeGroupEnumeration\" ;\n    rdfs:comment \"Enumerates common size groups for various product categories.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:SizeSpecification a rdfs:Class ;\n    rdfs:label \"SizeSpecification\" ;\n    rdfs:comment \"Size related properties of a product, typically a size code ([[name]]) and optionally a [[sizeSystem]], [[sizeGroup]], and product measurements ([[hasMeasurement]]). In addition, the intended audience can be defined through [[suggestedAge]], [[suggestedGender]], and suggested body measurements ([[suggestedMeasurement]]).\" ;\n    rdfs:subClassOf schema:QualitativeValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:SizeSystemEnumeration a rdfs:Class ;\n    rdfs:label \"SizeSystemEnumeration\" ;\n    rdfs:comment \"Enumerates common size systems for different categories of products, for example \\\\\"EN-13402\\\\\" or \\\\\"UK\\\\\" for wearables or \\\\\"Imperial\\\\\" for screws.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:SkiResort a rdfs:Class ;\n    rdfs:label \"SkiResort\" ;\n    rdfs:comment \"A ski resort.\" ;\n    rdfs:subClassOf schema:Resort,\n        schema:SportsActivityLocation .\n\nschema:SocialEvent a rdfs:Class ;\n    rdfs:label \"SocialEvent\" ;\n    rdfs:comment \"Event type: Social event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:SocialMediaPosting a rdfs:Class ;\n    rdfs:label \"SocialMediaPosting\" ;\n    rdfs:comment \"A post to a social media platform, including blog posts, tweets, Facebook posts, etc.\" ;\n    rdfs:subClassOf schema:Article .\n\nschema:SoftwareApplication a rdfs:Class ;\n    rdfs:label \"SoftwareApplication\" ;\n    rdfs:comment \"A software application.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:SoftwareSourceCode a rdfs:Class ;\n    rdfs:label \"SoftwareSourceCode\" ;\n    rdfs:comment \"Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:SolveMathAction a rdfs:Class ;\n    rdfs:label \"SolveMathAction\" ;\n    rdfs:comment \"The action that takes in a math expression and directs users to a page potentially capable of solving/simplifying that expression.\" ;\n    rdfs:subClassOf schema:Action ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2740> .\n\nschema:SomeProducts a rdfs:Class ;\n    rdfs:label \"SomeProducts\" ;\n    rdfs:comment \"A placeholder for multiple similar products of the same kind.\" ;\n    rdfs:subClassOf schema:Product ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:SpeakableSpecification a rdfs:Class ;\n    rdfs:label \"SpeakableSpecification\" ;\n    rdfs:comment \"A SpeakableSpecification indicates (typically via [[xpath]] or [[cssSelector]]) sections of a document that are highlighted as particularly [[speakable]]. Instances of this type are expected to be used primarily as values of the [[speakable]] property.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1389> .\n\nschema:SpecialAnnouncement a rdfs:Class ;\n    rdfs:label \"SpecialAnnouncement\" ;\n    rdfs:comment \"\"\"A SpecialAnnouncement combines a simple date-stamped textual information update\n      with contextualized Web links and other structured data.  It represents an information update made by a\n      locally-oriented organization, for example schools, pharmacies, healthcare providers,  community groups, police,\n      local government.\n\nFor work in progress guidelines on Coronavirus-related markup see [this doc](https://docs.google.com/document/d/14ikaGCKxo50rRM7nvKSlbUpjyIk2WMQd3IkB1lItlrM/edit#).\n\nThe motivating scenario for SpecialAnnouncement is the [Coronavirus pandemic](https://en.wikipedia.org/wiki/2019%E2%80%9320_coronavirus_pandemic), and the initial vocabulary is oriented to this urgent situation. Schema.org\nexpect to improve the markup iteratively as it is deployed and as feedback emerges from use. In addition to our\nusual [Github entry](https://github.com/schemaorg/schemaorg/issues/2490), feedback comments can also be provided in [this document](https://docs.google.com/document/d/1fpdFFxk8s87CWwACs53SGkYv3aafSxz_DTtOQxMrBJQ/edit#).\n\n\nWhile this schema is designed to communicate urgent crisis-related information, it is not the same as an emergency warning technology like [CAP](https://en.wikipedia.org/wiki/Common_Alerting_Protocol), although there may be overlaps. The intent is to cover\nthe kinds of everyday practical information being posted to existing websites during an emergency situation.\n\nSeveral kinds of information can be provided:\n\nWe encourage the provision of \"name\", \"text\", \"datePosted\", \"expires\" (if appropriate), \"category\" and\n\"url\" as a simple baseline. It is important to provide a value for \"category\" where possible, most ideally as a well known\nURL from Wikipedia or Wikidata. In the case of the 2019-2020 Coronavirus pandemic, this should be \"https://en.wikipedia.org/w/index.php?title=2019-20\\\\\\\\_coronavirus\\\\\\\\_pandemic\" or \"https://www.wikidata.org/wiki/Q81068910\".\n\nFor many of the possible properties, values can either be simple links or an inline description, depending on whether a summary is available. For a link, provide just the URL of the appropriate page as the property's value. For an inline description, use a [[WebContent]] type, and provide the url as a property of that, alongside at least a simple \"[[text]]\" summary of the page. It is\nunlikely that a single SpecialAnnouncement will need all of the possible properties simultaneously.\n\nWe expect that in many cases the page referenced might contain more specialized structured data, e.g. contact info, [[openingHours]], [[Event]], [[FAQPage]] etc. By linking to those pages from a [[SpecialAnnouncement]] you can help make it clearer that the events are related to the situation (e.g. Coronavirus) indicated by the [[category]] property of the [[SpecialAnnouncement]].\n\nMany [[SpecialAnnouncement]]s will relate to particular regions and to identifiable local organizations. Use [[spatialCoverage]] for the region, and [[announcementLocation]] to indicate specific [[LocalBusiness]]es and [[CivicStructure]]s. If the announcement affects both a particular region and a specific location (for example, a library closure that serves an entire region), use both [[spatialCoverage]] and [[announcementLocation]].\n\nThe [[about]] property can be used to indicate entities that are the focus of the announcement. We now recommend using [[about]] only\nfor representing non-location entities (e.g. a [[Course]] or a [[RadioStation]]). For places, use [[announcementLocation]] and [[spatialCoverage]]. Consumers of this markup should be aware that the initial design encouraged the use of /about for locations too.\n\nThe basic content of [[SpecialAnnouncement]] is similar to that of an [RSS](https://en.wikipedia.org/wiki/RSS) or [Atom](https://en.wikipedia.org/wiki/Atom_(Web_standard)) feed. For publishers without such feeds, basic feed-like information can be shared by posting\n[[SpecialAnnouncement]] updates in a page, e.g. using JSON-LD. For sites with Atom/RSS functionality, you can point to a feed\nwith the [[webFeed]] property. This can be a simple URL, or an inline [[DataFeed]] object, with [[encodingFormat]] providing\nmedia type information e.g. \"application/rss+xml\" or \"application/atom+xml\".\n\"\"\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:Specialty a rdfs:Class ;\n    rdfs:label \"Specialty\" ;\n    rdfs:comment \"Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.\" ;\n    rdfs:subClassOf schema:Enumeration .\n\nschema:SportingGoodsStore a rdfs:Class ;\n    rdfs:label \"SportingGoodsStore\" ;\n    rdfs:comment \"A sporting goods store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:SportsActivityLocation a rdfs:Class ;\n    rdfs:label \"SportsActivityLocation\" ;\n    rdfs:comment \"A sports location, such as a playing field.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:SportsClub a rdfs:Class ;\n    rdfs:label \"SportsClub\" ;\n    rdfs:comment \"A sports club.\" ;\n    rdfs:subClassOf schema:SportsActivityLocation .\n\nschema:SportsEvent a rdfs:Class ;\n    rdfs:label \"SportsEvent\" ;\n    rdfs:comment \"Event type: Sports event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:SportsOrganization a rdfs:Class ;\n    rdfs:label \"SportsOrganization\" ;\n    rdfs:comment \"Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.\" ;\n    rdfs:subClassOf schema:Organization .\n\nschema:SportsTeam a rdfs:Class ;\n    rdfs:label \"SportsTeam\" ;\n    rdfs:comment \"Organization: Sports team.\" ;\n    rdfs:subClassOf schema:SportsOrganization .\n\nschema:SpreadsheetDigitalDocument a rdfs:Class ;\n    rdfs:label \"SpreadsheetDigitalDocument\" ;\n    rdfs:comment \"A spreadsheet file.\" ;\n    rdfs:subClassOf schema:DigitalDocument .\n\nschema:StadiumOrArena a rdfs:Class ;\n    rdfs:label \"StadiumOrArena\" ;\n    rdfs:comment \"A stadium.\" ;\n    rdfs:subClassOf schema:CivicStructure,\n        schema:SportsActivityLocation .\n\nschema:State a rdfs:Class ;\n    rdfs:label \"State\" ;\n    rdfs:comment \"A state or province of a country.\" ;\n    rdfs:subClassOf schema:AdministrativeArea .\n\nschema:StatisticalPopulation a rdfs:Class ;\n    rdfs:label \"StatisticalPopulation\" ;\n    rdfs:comment \"\"\"A StatisticalPopulation is a set of instances of a certain given type that satisfy some set of constraints. The property [[populationType]] is used to specify the type. Any property that can be used on instances of that type can appear on the statistical population. For example, a [[StatisticalPopulation]] representing all [[Person]]s with a [[homeLocation]] of East Podunk California, would be described by applying the appropriate [[homeLocation]] and [[populationType]] properties to a [[StatisticalPopulation]] item that stands for that set of people.\nThe properties [[numConstraints]] and [[constrainingProperty]] are used to specify which of the populations properties are used to specify the population. Note that the sense of \"population\" used here is the general sense of a statistical\npopulation, and does not imply that the population consists of people. For example, a [[populationType]] of [[Event]] or [[NewsArticle]] could be used. See also [[Observation]], and the [data and datasets](/docs/data-and-datasets.html) overview for more details.\n  \"\"\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:StatusEnumeration a rdfs:Class ;\n    rdfs:label \"StatusEnumeration\" ;\n    rdfs:comment \"Lists or enumerations dealing with status types.\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2604> .\n\nschema:SteeringPositionValue a rdfs:Class ;\n    rdfs:label \"SteeringPositionValue\" ;\n    rdfs:comment \"A value indicating a steering position.\" ;\n    rdfs:subClassOf schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:Store a rdfs:Class ;\n    rdfs:label \"Store\" ;\n    rdfs:comment \"A retail good store.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:StructuredValue a rdfs:Class ;\n    rdfs:label \"StructuredValue\" ;\n    rdfs:comment \"Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:SubscribeAction a rdfs:Class ;\n    rdfs:label \"SubscribeAction\" ;\n    rdfs:comment \"The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[FollowAction]]: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.\\\\\\\\n* [[RegisterAction]]: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.\\\\\\\\n* [[JoinAction]]: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:Substance a rdfs:Class ;\n    rdfs:label \"Substance\" ;\n    rdfs:comment \"Any matter of defined composition that has discrete existence, whose origin may be biological, mineral or chemical.\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/105590001> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SubwayStation a rdfs:Class ;\n    rdfs:label \"SubwayStation\" ;\n    rdfs:comment \"A subway station.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:Suite a rdfs:Class ;\n    rdfs:label \"Suite\" ;\n    rdfs:comment \"\"\"A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Suite_(hotel)\">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n\"\"\" ;\n    rdfs:subClassOf schema:Accommodation ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:SuperficialAnatomy a rdfs:Class ;\n    rdfs:label \"SuperficialAnatomy\" ;\n    rdfs:comment \"Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).\" ;\n    rdfs:subClassOf schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SurgicalProcedure a rdfs:Class ;\n    rdfs:label \"SurgicalProcedure\" ;\n    rdfs:comment \"A medical procedure involving an incision with instruments; performed for diagnose, or therapeutic purposes.\" ;\n    rdfs:subClassOf schema:MedicalProcedure ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/387713003> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SuspendAction a rdfs:Class ;\n    rdfs:label \"SuspendAction\" ;\n    rdfs:comment \"The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).\" ;\n    rdfs:subClassOf schema:ControlAction .\n\nschema:Synagogue a rdfs:Class ;\n    rdfs:label \"Synagogue\" ;\n    rdfs:comment \"A synagogue.\" ;\n    rdfs:subClassOf schema:PlaceOfWorship .\n\nschema:TVClip a rdfs:Class ;\n    rdfs:label \"TVClip\" ;\n    rdfs:comment \"A short TV program or a segment/part of a TV program.\" ;\n    rdfs:subClassOf schema:Clip .\n\nschema:TVEpisode a rdfs:Class ;\n    rdfs:label \"TVEpisode\" ;\n    rdfs:comment \"A TV episode which can be part of a series or season.\" ;\n    rdfs:subClassOf schema:Episode .\n\nschema:TVSeason a rdfs:Class ;\n    rdfs:label \"TVSeason\" ;\n    rdfs:comment \"Season dedicated to TV broadcast and associated online delivery.\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:CreativeWorkSeason .\n\nschema:TVSeries a rdfs:Class ;\n    rdfs:label \"TVSeries\" ;\n    rdfs:comment \"CreativeWorkSeries dedicated to TV broadcast and associated online delivery.\" ;\n    rdfs:subClassOf schema:CreativeWork,\n        schema:CreativeWorkSeries .\n\nschema:Table a rdfs:Class ;\n    rdfs:label \"Table\" ;\n    rdfs:comment \"A table on a Web page.\" ;\n    rdfs:subClassOf schema:WebPageElement .\n\nschema:TakeAction a rdfs:Class ;\n    rdfs:label \"TakeAction\" ;\n    rdfs:comment \"The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[GiveAction]]: The reciprocal of TakeAction.\\\\\\\\n* [[ReceiveAction]]: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.\" ;\n    rdfs:subClassOf schema:TransferAction .\n\nschema:TattooParlor a rdfs:Class ;\n    rdfs:label \"TattooParlor\" ;\n    rdfs:comment \"A tattoo parlor.\" ;\n    rdfs:subClassOf schema:HealthAndBeautyBusiness .\n\nschema:Taxi a rdfs:Class ;\n    rdfs:label \"Taxi\" ;\n    rdfs:comment \"A taxi.\" ;\n    rdfs:subClassOf schema:Service ;\n    schema:supersededBy schema:TaxiService .\n\nschema:TaxiReservation a rdfs:Class ;\n    rdfs:label \"TaxiReservation\" ;\n    rdfs:comment \"A reservation for a taxi.\\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:TaxiService a rdfs:Class ;\n    rdfs:label \"TaxiService\" ;\n    rdfs:comment \"A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.\" ;\n    rdfs:subClassOf schema:Service .\n\nschema:TaxiStand a rdfs:Class ;\n    rdfs:label \"TaxiStand\" ;\n    rdfs:comment \"A taxi stand.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:TechArticle a rdfs:Class ;\n    rdfs:label \"TechArticle\" ;\n    rdfs:comment \"A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.\" ;\n    rdfs:subClassOf schema:Article .\n\nschema:TelevisionChannel a rdfs:Class ;\n    rdfs:label \"TelevisionChannel\" ;\n    rdfs:comment \"A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.\" ;\n    rdfs:subClassOf schema:BroadcastChannel .\n\nschema:TelevisionStation a rdfs:Class ;\n    rdfs:label \"TelevisionStation\" ;\n    rdfs:comment \"A television station.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:TennisComplex a rdfs:Class ;\n    rdfs:label \"TennisComplex\" ;\n    rdfs:comment \"A tennis complex.\" ;\n    rdfs:subClassOf schema:SportsActivityLocation .\n\nschema:Text a rdfs:Class,\n        schema:DataType ;\n    rdfs:label \"Text\" ;\n    rdfs:comment \"Data type: Text.\" .\n\nschema:TextDigitalDocument a rdfs:Class ;\n    rdfs:label \"TextDigitalDocument\" ;\n    rdfs:comment \"A file composed primarily of text.\" ;\n    rdfs:subClassOf schema:DigitalDocument .\n\nschema:TheaterEvent a rdfs:Class ;\n    rdfs:label \"TheaterEvent\" ;\n    rdfs:comment \"Event type: Theater performance.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:TheaterGroup a rdfs:Class ;\n    rdfs:label \"TheaterGroup\" ;\n    rdfs:comment \"A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.\" ;\n    rdfs:subClassOf schema:PerformingGroup .\n\nschema:TherapeuticProcedure a rdfs:Class ;\n    rdfs:label \"TherapeuticProcedure\" ;\n    rdfs:comment \"A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.\" ;\n    rdfs:subClassOf schema:MedicalProcedure ;\n    ns2:equivalentClass <http://purl.bioontology.org/ontology/SNOMEDCT/277132007> ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Thesis a rdfs:Class ;\n    rdfs:label \"Thesis\" ;\n    rdfs:comment \"A thesis or dissertation document submitted in support of candidature for an academic degree or professional qualification.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:source <http://www.productontology.org/id/Thesis> .\n\nschema:Thing a rdfs:Class ;\n    rdfs:label \"Thing\" ;\n    rdfs:comment \"The most generic type of item.\" .\n\nschema:Ticket a rdfs:Class ;\n    rdfs:label \"Ticket\" ;\n    rdfs:comment \"Used to describe a ticket to an event, a flight, a bus ride, etc.\" ;\n    rdfs:subClassOf schema:Intangible .\n\nschema:TieAction a rdfs:Class ;\n    rdfs:label \"TieAction\" ;\n    rdfs:comment \"The act of reaching a draw in a competitive activity.\" ;\n    rdfs:subClassOf schema:AchieveAction .\n\nschema:Time a rdfs:Class,\n        schema:DataType ;\n    rdfs:label \"Time\" ;\n    rdfs:comment \"A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see [XML schema for details](http://www.w3.org/TR/xmlschema-2/#time)).\" .\n\nschema:TipAction a rdfs:Class ;\n    rdfs:label \"TipAction\" ;\n    rdfs:comment \"The act of giving money voluntarily to a beneficiary in recognition of services rendered.\" ;\n    rdfs:subClassOf schema:TradeAction .\n\nschema:TireShop a rdfs:Class ;\n    rdfs:label \"TireShop\" ;\n    rdfs:comment \"A tire shop.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:TouristAttraction a rdfs:Class ;\n    rdfs:label \"TouristAttraction\" ;\n    rdfs:comment \"A tourist attraction.  In principle any Thing can be a [[TouristAttraction]], from a [[Mountain]] and [[LandmarksOrHistoricalBuildings]] to a [[LocalBusiness]].  This Type can be used on its own to describe a general [[TouristAttraction]], or be used as an [[additionalType]] to add tourist attraction properties to any other type.  (See examples below)\" ;\n    rdfs:subClassOf schema:Place ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism> .\n\nschema:TouristDestination a rdfs:Class ;\n    rdfs:label \"TouristDestination\" ;\n    rdfs:comment \"\"\"A tourist destination. In principle any [[Place]] can be a [[TouristDestination]] from a [[City]], Region or [[Country]] to an [[AmusementPark]] or [[Hotel]]. This Type can be used on its own to describe a general [[TouristDestination]], or be used as an [[additionalType]] to add tourist relevant properties to any other [[Place]].  A [[TouristDestination]] is defined as a [[Place]] that contains, or is colocated with, one or more [[TouristAttraction]]s, often linked by a similar theme or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines Destination (main destination of a tourism trip) as the place visited that is central to the decision to take the trip.\n  (See examples below).\"\"\" ;\n    rdfs:subClassOf schema:Place ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism>,\n        <https://github.com/schemaorg/schemaorg/issues/1810> .\n\nschema:TouristInformationCenter a rdfs:Class ;\n    rdfs:label \"TouristInformationCenter\" ;\n    rdfs:comment \"A tourist information center.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:TouristTrip a rdfs:Class ;\n    rdfs:label \"TouristTrip\" ;\n    rdfs:comment \"\"\"A tourist trip. A created itinerary of visits to one or more places of interest ([[TouristAttraction]]/[[TouristDestination]]) often linked by a similar theme, geographic area, or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines tourism trip as the Trip taken by visitors.\n  (See examples below).\"\"\" ;\n    rdfs:subClassOf schema:Trip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism>,\n        <https://github.com/schemaorg/schemaorg/issues/1810> .\n\nschema:ToyStore a rdfs:Class ;\n    rdfs:label \"ToyStore\" ;\n    rdfs:comment \"A toy store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:TrackAction a rdfs:Class ;\n    rdfs:label \"TrackAction\" ;\n    rdfs:comment \"An agent tracks an object for updates.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[FollowAction]]: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.\\\\\\\\n* [[SubscribeAction]]: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.\" ;\n    rdfs:subClassOf schema:FindAction .\n\nschema:TradeAction a rdfs:Class ;\n    rdfs:label \"TradeAction\" ;\n    rdfs:comment \"The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:TrainReservation a rdfs:Class ;\n    rdfs:label \"TrainReservation\" ;\n    rdfs:comment \"A reservation for train travel.\\\\n\\\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].\" ;\n    rdfs:subClassOf schema:Reservation .\n\nschema:TrainStation a rdfs:Class ;\n    rdfs:label \"TrainStation\" ;\n    rdfs:comment \"A train station.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:TrainTrip a rdfs:Class ;\n    rdfs:label \"TrainTrip\" ;\n    rdfs:comment \"A trip on a commercial train line.\" ;\n    rdfs:subClassOf schema:Trip .\n\nschema:TransferAction a rdfs:Class ;\n    rdfs:label \"TransferAction\" ;\n    rdfs:comment \"The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:TravelAction a rdfs:Class ;\n    rdfs:label \"TravelAction\" ;\n    rdfs:comment \"The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants.\" ;\n    rdfs:subClassOf schema:MoveAction .\n\nschema:TravelAgency a rdfs:Class ;\n    rdfs:label \"TravelAgency\" ;\n    rdfs:comment \"A travel agency.\" ;\n    rdfs:subClassOf schema:LocalBusiness .\n\nschema:TreatmentIndication a rdfs:Class ;\n    rdfs:label \"TreatmentIndication\" ;\n    rdfs:comment \"An indication for treating an underlying condition, symptom, etc.\" ;\n    rdfs:subClassOf schema:MedicalIndication ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Trip a rdfs:Class ;\n    rdfs:label \"Trip\" ;\n    rdfs:comment \"A trip or journey. An itinerary of visits to one or more places.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism> .\n\nschema:TypeAndQuantityNode a rdfs:Class ;\n    rdfs:label \"TypeAndQuantityNode\" ;\n    rdfs:comment \"A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:UKNonprofitType a rdfs:Class ;\n    rdfs:label \"UKNonprofitType\" ;\n    rdfs:comment \"UKNonprofitType: Non-profit organization type originating from the United Kingdom.\" ;\n    rdfs:subClassOf schema:NonprofitType ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:URL a rdfs:Class ;\n    rdfs:label \"URL\" ;\n    rdfs:comment \"Data type: URL.\" ;\n    rdfs:subClassOf schema:Text .\n\nschema:USNonprofitType a rdfs:Class ;\n    rdfs:label \"USNonprofitType\" ;\n    rdfs:comment \"USNonprofitType: Non-profit organization type originating from the United States.\" ;\n    rdfs:subClassOf schema:NonprofitType ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:UnRegisterAction a rdfs:Class ;\n    rdfs:label \"UnRegisterAction\" ;\n    rdfs:comment \"The act of un-registering from a service.\\\\n\\\\nRelated actions:\\\\n\\\\n* [[RegisterAction]]: antonym of UnRegisterAction.\\\\\\\\n* [[LeaveAction]]: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.\" ;\n    rdfs:subClassOf schema:InteractAction .\n\nschema:UnitPriceSpecification a rdfs:Class ;\n    rdfs:label \"UnitPriceSpecification\" ;\n    rdfs:comment \"The price asked for a given offer by the respective organization or person.\" ;\n    rdfs:subClassOf schema:PriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:UpdateAction a rdfs:Class ;\n    rdfs:label \"UpdateAction\" ;\n    rdfs:comment \"The act of managing by changing/editing the state of the object.\" ;\n    rdfs:subClassOf schema:Action .\n\nschema:UseAction a rdfs:Class ;\n    rdfs:label \"UseAction\" ;\n    rdfs:comment \"The act of applying an object to its intended purpose.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:UserBlocks a rdfs:Class ;\n    rdfs:label \"UserBlocks\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserCheckins a rdfs:Class ;\n    rdfs:label \"UserCheckins\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserComments a rdfs:Class ;\n    rdfs:label \"UserComments\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserDownloads a rdfs:Class ;\n    rdfs:label \"UserDownloads\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserInteraction a rdfs:Class ;\n    rdfs:label \"UserInteraction\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:Event ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserLikes a rdfs:Class ;\n    rdfs:label \"UserLikes\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserPageVisits a rdfs:Class ;\n    rdfs:label \"UserPageVisits\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserPlays a rdfs:Class ;\n    rdfs:label \"UserPlays\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserPlusOnes a rdfs:Class ;\n    rdfs:label \"UserPlusOnes\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:UserReview a rdfs:Class ;\n    rdfs:label \"UserReview\" ;\n    rdfs:comment \"A review created by an end-user (e.g. consumer, purchaser, attendee etc.), in contrast with [[CriticReview]].\" ;\n    rdfs:subClassOf schema:Review ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1589> .\n\nschema:UserTweets a rdfs:Class ;\n    rdfs:label \"UserTweets\" ;\n    rdfs:comment \"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].\" ;\n    rdfs:subClassOf schema:UserInteraction ;\n    schema:supersededBy schema:InteractionCounter .\n\nschema:Vehicle a rdfs:Class ;\n    rdfs:label \"Vehicle\" ;\n    rdfs:comment \"A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.\" ;\n    rdfs:subClassOf schema:Product .\n\nschema:Vein a rdfs:Class ;\n    rdfs:label \"Vein\" ;\n    rdfs:comment \"A type of blood vessel that specifically carries blood to the heart.\" ;\n    rdfs:subClassOf schema:Vessel ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Vessel a rdfs:Class ;\n    rdfs:label \"Vessel\" ;\n    rdfs:comment \"A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.\" ;\n    rdfs:subClassOf schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:VeterinaryCare a rdfs:Class ;\n    rdfs:label \"VeterinaryCare\" ;\n    rdfs:comment \"A vet's office.\" ;\n    rdfs:subClassOf schema:MedicalOrganization ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:VideoGallery a rdfs:Class ;\n    rdfs:label \"VideoGallery\" ;\n    rdfs:comment \"Web page type: Video gallery page.\" ;\n    rdfs:subClassOf schema:MediaGallery .\n\nschema:VideoGame a rdfs:Class ;\n    rdfs:label \"VideoGame\" ;\n    rdfs:comment \"A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.\" ;\n    rdfs:subClassOf schema:Game,\n        schema:SoftwareApplication .\n\nschema:VideoGameClip a rdfs:Class ;\n    rdfs:label \"VideoGameClip\" ;\n    rdfs:comment \"A short segment/part of a video game.\" ;\n    rdfs:subClassOf schema:Clip .\n\nschema:VideoGameSeries a rdfs:Class ;\n    rdfs:label \"VideoGameSeries\" ;\n    rdfs:comment \"A video game series.\" ;\n    rdfs:subClassOf schema:CreativeWorkSeries .\n\nschema:VideoObject a rdfs:Class ;\n    rdfs:label \"VideoObject\" ;\n    rdfs:comment \"A video file.\" ;\n    rdfs:subClassOf schema:MediaObject ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews> .\n\nschema:ViewAction a rdfs:Class ;\n    rdfs:label \"ViewAction\" ;\n    rdfs:comment \"The act of consuming static visual content.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:VirtualLocation a rdfs:Class ;\n    rdfs:label \"VirtualLocation\" ;\n    rdfs:comment \"An online or virtual location for attending events. For example, one may attend an online seminar or educational event. While a virtual location may be used as the location of an event, virtual locations should not be confused with physical locations in the real world.\" ;\n    rdfs:subClassOf schema:Intangible ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:VisualArtsEvent a rdfs:Class ;\n    rdfs:label \"VisualArtsEvent\" ;\n    rdfs:comment \"Event type: Visual arts event.\" ;\n    rdfs:subClassOf schema:Event .\n\nschema:VisualArtwork a rdfs:Class ;\n    rdfs:label \"VisualArtwork\" ;\n    rdfs:comment \"A work of art that is primarily visual in character.\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_VisualArtworkClass> .\n\nschema:VitalSign a rdfs:Class ;\n    rdfs:label \"VitalSign\" ;\n    rdfs:comment \"Vital signs are measures of various physiological functions in order to assess the most basic body functions.\" ;\n    rdfs:subClassOf schema:MedicalSign ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Volcano a rdfs:Class ;\n    rdfs:label \"Volcano\" ;\n    rdfs:comment \"A volcano, like Fuji san.\" ;\n    rdfs:subClassOf schema:Landform .\n\nschema:VoteAction a rdfs:Class ;\n    rdfs:label \"VoteAction\" ;\n    rdfs:comment \"The act of expressing a preference from a fixed/finite/structured set of choices/options.\" ;\n    rdfs:subClassOf schema:ChooseAction .\n\nschema:WPAdBlock a rdfs:Class ;\n    rdfs:label \"WPAdBlock\" ;\n    rdfs:comment \"An advertising section of the page.\" ;\n    rdfs:subClassOf schema:WebPageElement .\n\nschema:WPFooter a rdfs:Class ;\n    rdfs:label \"WPFooter\" ;\n    rdfs:comment \"The footer section of the page.\" ;\n    rdfs:subClassOf schema:WebPageElement .\n\nschema:WPHeader a rdfs:Class ;\n    rdfs:label \"WPHeader\" ;\n    rdfs:comment \"The header section of the page.\" ;\n    rdfs:subClassOf schema:WebPageElement .\n\nschema:WPSideBar a rdfs:Class ;\n    rdfs:label \"WPSideBar\" ;\n    rdfs:comment \"A sidebar section of the page.\" ;\n    rdfs:subClassOf schema:WebPageElement .\n\nschema:WantAction a rdfs:Class ;\n    rdfs:label \"WantAction\" ;\n    rdfs:comment \"The act of expressing a desire about the object. An agent wants an object.\" ;\n    rdfs:subClassOf schema:ReactAction .\n\nschema:WarrantyPromise a rdfs:Class ;\n    rdfs:label \"WarrantyPromise\" ;\n    rdfs:comment \"A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.\" ;\n    rdfs:subClassOf schema:StructuredValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:WarrantyScope a rdfs:Class ;\n    rdfs:label \"WarrantyScope\" ;\n    rdfs:comment \"\"\"A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.\\\\n\\\\nCommonly used values:\\\\n\\\\n* http://purl.org/goodrelations/v1#Labor-BringIn\\\\\\\\n* http://purl.org/goodrelations/v1#PartsAndLabor-BringIn\\\\\\\\n* http://purl.org/goodrelations/v1#PartsAndLabor-PickUp\n      \"\"\" ;\n    rdfs:subClassOf schema:Enumeration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:WatchAction a rdfs:Class ;\n    rdfs:label \"WatchAction\" ;\n    rdfs:comment \"The act of consuming dynamic/moving visual content.\" ;\n    rdfs:subClassOf schema:ConsumeAction .\n\nschema:Waterfall a rdfs:Class ;\n    rdfs:label \"Waterfall\" ;\n    rdfs:comment \"A waterfall, like Niagara.\" ;\n    rdfs:subClassOf schema:BodyOfWater .\n\nschema:WearAction a rdfs:Class ;\n    rdfs:label \"WearAction\" ;\n    rdfs:comment \"The act of dressing oneself in clothing.\" ;\n    rdfs:subClassOf schema:UseAction .\n\nschema:WearableMeasurementTypeEnumeration a rdfs:Class ;\n    rdfs:label \"WearableMeasurementTypeEnumeration\" ;\n    rdfs:comment \"Enumerates common types of measurement for wearables products.\" ;\n    rdfs:subClassOf schema:MeasurementTypeEnumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupEnumeration a rdfs:Class ;\n    rdfs:label \"WearableSizeGroupEnumeration\" ;\n    rdfs:comment \"Enumerates common size groups (also known as \\\\\"size types\\\\\") for wearable products.\" ;\n    rdfs:subClassOf schema:SizeGroupEnumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemEnumeration a rdfs:Class ;\n    rdfs:label \"WearableSizeSystemEnumeration\" ;\n    rdfs:comment \"Enumerates common size systems specific for wearable products\" ;\n    rdfs:subClassOf schema:SizeSystemEnumeration ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WebAPI a rdfs:Class ;\n    rdfs:label \"WebAPI\" ;\n    rdfs:comment \"An application programming interface accessible over Web/Internet technologies.\" ;\n    rdfs:subClassOf schema:Service ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1423> .\n\nschema:WebApplication a rdfs:Class ;\n    rdfs:label \"WebApplication\" ;\n    rdfs:comment \"Web applications.\" ;\n    rdfs:subClassOf schema:SoftwareApplication .\n\nschema:WebContent a rdfs:Class ;\n    rdfs:label \"WebContent\" ;\n    rdfs:comment \"WebContent is a type representing all [[WebPage]], [[WebSite]] and [[WebPageElement]] content. It is sometimes the case that detailed distinctions between Web pages, sites and their parts is not always important or obvious. The  [[WebContent]] type makes it easier to describe Web-addressable content without requiring such distinctions to always be stated. (The intent is that the existing types [[WebPage]], [[WebSite]] and [[WebPageElement]] will eventually be declared as subtypes of [[WebContent]]).\" ;\n    rdfs:subClassOf schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2358> .\n\nschema:WebPage a rdfs:Class ;\n    rdfs:label \"WebPage\" ;\n    rdfs:comment \"A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:WebPageElement a rdfs:Class ;\n    rdfs:label \"WebPageElement\" ;\n    rdfs:comment \"A web page element, like a table or an image.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:WebSite a rdfs:Class ;\n    rdfs:label \"WebSite\" ;\n    rdfs:comment \"A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.\" ;\n    rdfs:subClassOf schema:CreativeWork .\n\nschema:WholesaleStore a rdfs:Class ;\n    rdfs:label \"WholesaleStore\" ;\n    rdfs:comment \"A wholesale store.\" ;\n    rdfs:subClassOf schema:Store .\n\nschema:WinAction a rdfs:Class ;\n    rdfs:label \"WinAction\" ;\n    rdfs:comment \"The act of achieving victory in a competitive activity.\" ;\n    rdfs:subClassOf schema:AchieveAction .\n\nschema:Winery a rdfs:Class ;\n    rdfs:label \"Winery\" ;\n    rdfs:comment \"A winery.\" ;\n    rdfs:subClassOf schema:FoodEstablishment .\n\nschema:WorkBasedProgram a rdfs:Class ;\n    rdfs:label \"WorkBasedProgram\" ;\n    rdfs:comment \"A program with both an educational and employment component. Typically based at a workplace and structured around work-based learning, with the aim of instilling competencies related to an occupation. WorkBasedProgram is used to distinguish programs such as apprenticeships from school, college or other classroom based educational programs.\" ;\n    rdfs:subClassOf schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:WorkersUnion a rdfs:Class ;\n    rdfs:label \"WorkersUnion\" ;\n    rdfs:comment \"A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.\" ;\n    rdfs:subClassOf schema:Organization ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/243> .\n\nschema:WriteAction a rdfs:Class ;\n    rdfs:label \"WriteAction\" ;\n    rdfs:comment \"The act of authoring written creative content.\" ;\n    rdfs:subClassOf schema:CreateAction .\n\nschema:XPathType a rdfs:Class ;\n    rdfs:label \"XPathType\" ;\n    rdfs:comment \"Text representing an XPath (typically but not necessarily version 1.0).\" ;\n    rdfs:subClassOf schema:Text ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1672> .\n\nschema:Zoo a rdfs:Class ;\n    rdfs:label \"Zoo\" ;\n    rdfs:comment \"A zoo.\" ;\n    rdfs:subClassOf schema:CivicStructure .\n\nschema:Abdomen a schema:PhysicalExam ;\n    rdfs:label \"Abdomen\" ;\n    rdfs:comment \"Abdomen clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ActivationFee a schema:PriceComponentTypeEnumeration ;\n    rdfs:label \"ActivationFee\" ;\n    rdfs:comment \"Represents the activation fee part of the total price for an offered product, for example a cellphone contract.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:ActiveActionStatus a schema:ActionStatusType ;\n    rdfs:label \"ActiveActionStatus\" ;\n    rdfs:comment \"An in-progress action (e.g, while watching the movie, or driving to a location).\" .\n\nschema:ActiveNotRecruiting a schema:MedicalStudyStatus ;\n    rdfs:label \"ActiveNotRecruiting\" ;\n    rdfs:comment \"Active, but not recruiting new participants.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:AerobicActivity a schema:PhysicalActivityCategory ;\n    rdfs:label \"AerobicActivity\" ;\n    rdfs:comment \"Physical activity of relatively low intensity that depends primarily on the aerobic energy-generating process; during activity, the aerobic metabolism uses oxygen to adequately meet energy demands during exercise.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:AlbumRelease a schema:MusicAlbumReleaseType ;\n    rdfs:label \"AlbumRelease\" ;\n    rdfs:comment \"AlbumRelease.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:AllWheelDriveConfiguration a schema:DriveWheelConfigurationValue ;\n    rdfs:label \"AllWheelDriveConfiguration\" ;\n    rdfs:comment \"All-wheel Drive is a transmission layout where the engine drives all four wheels.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:AllergiesHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"AllergiesHealthAspect\" ;\n    rdfs:comment \"Content about the allergy-related aspects of a health topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2799> .\n\nschema:AnaerobicActivity a schema:PhysicalActivityCategory ;\n    rdfs:label \"AnaerobicActivity\" ;\n    rdfs:comment \"Physical activity that is of high-intensity which utilizes the anaerobic metabolism of the body.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Anesthesia a schema:MedicalSpecialty ;\n    rdfs:label \"Anesthesia\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to study of anesthetics and their application.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Appearance a schema:PhysicalExam ;\n    rdfs:label \"Appearance\" ;\n    rdfs:comment \"Appearance assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:AudiobookFormat a schema:BookFormatType ;\n    rdfs:label \"AudiobookFormat\" ;\n    rdfs:comment \"Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.\" .\n\nschema:AuthoritativeLegalValue a schema:LegalValueLevel ;\n    rdfs:label \"AuthoritativeLegalValue\" ;\n    rdfs:comment \"Indicates that the publisher gives some special status to the publication of the document. (\\\\\"The Queens Printer\\\\\" version of a UK Act of Parliament, or the PDF version of a Directive published by the EU Office of Publications). Something \\\\\"Authoritative\\\\\" is considered to be also [[OfficialLegalValue]]\\\\\".\" ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#LegalValue-authoritative> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:Ayurvedic a schema:MedicineSystem ;\n    rdfs:label \"Ayurvedic\" ;\n    rdfs:comment \"A system of medicine that originated in India over thousands of years and that focuses on integrating and balancing the body, mind, and spirit.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:BackOrder a schema:ItemAvailability ;\n    rdfs:label \"BackOrder\" ;\n    rdfs:comment \"Indicates that the item is available on back order.\" .\n\nschema:Bacteria a schema:InfectiousAgentClass ;\n    rdfs:label \"Bacteria\" ;\n    rdfs:comment \"Pathogenic bacteria that cause bacterial infection.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Balance a schema:PhysicalActivityCategory ;\n    rdfs:label \"Balance\" ;\n    rdfs:comment \"Physical activity that is engaged to help maintain posture and balance.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:BasicIncome a schema:GovernmentBenefitsType ;\n    rdfs:label \"BasicIncome\" ;\n    rdfs:comment \"BasicIncome: this is a benefit for basic income.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:BenefitsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"BenefitsHealthAspect\" ;\n    rdfs:comment \"Content about the benefits and advantages of usage or utilization of topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:BodyMeasurementArm a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementArm\" ;\n    rdfs:comment \"Arm length (measured between arms/shoulder line intersection and the prominent wrist bone). Used, for example, to fit shirts.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementBust a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementBust\" ;\n    rdfs:comment \"Maximum girth of bust. Used, for example, to fit women's suits.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementChest a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementChest\" ;\n    rdfs:comment \"Maximum girth of chest. Used, for example, to fit men's suits.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementFoot a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementFoot\" ;\n    rdfs:comment \"Foot length (measured between end of the most prominent toe and the most prominent part of the heel). Used, for example, to measure socks.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementHand a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementHand\" ;\n    rdfs:comment \"Maximum hand girth (measured over the knuckles of the open right hand excluding thumb, fingers together). Used, for example, to fit gloves.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementHead a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementHead\" ;\n    rdfs:comment \"Maximum girth of head above the ears. Used, for example, to fit hats.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementHeight a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementHeight\" ;\n    rdfs:comment \"Body height (measured between crown of head and soles of feet). Used, for example, to fit jackets.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementHips a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementHips\" ;\n    rdfs:comment \"Girth of hips (measured around the buttocks). Used, for example, to fit skirts.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementInsideLeg a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementInsideLeg\" ;\n    rdfs:comment \"Inside leg (measured between crotch and soles of feet). Used, for example, to fit pants.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementNeck a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementNeck\" ;\n    rdfs:comment \"Girth of neck. Used, for example, to fit shirts.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementUnderbust a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementUnderbust\" ;\n    rdfs:comment \"Girth of body just below the bust. Used, for example, to fit women's swimwear.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementWaist a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementWaist\" ;\n    rdfs:comment \"Girth of natural waistline (between hip bones and lower ribs). Used, for example, to fit pants.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BodyMeasurementWeight a schema:BodyMeasurementTypeEnumeration ;\n    rdfs:label \"BodyMeasurementWeight\" ;\n    rdfs:comment \"Body weight. Used, for example, to measure pantyhose.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:BroadcastRelease a schema:MusicAlbumReleaseType ;\n    rdfs:label \"BroadcastRelease\" ;\n    rdfs:comment \"BroadcastRelease.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:BusinessSupport a schema:GovernmentBenefitsType ;\n    rdfs:label \"BusinessSupport\" ;\n    rdfs:comment \"BusinessSupport: this is a benefit for supporting businesses.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:CDFormat a schema:MusicReleaseFormatType ;\n    rdfs:label \"CDFormat\" ;\n    rdfs:comment \"CDFormat.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:CT a schema:MedicalImagingTechnique ;\n    rdfs:label \"CT\" ;\n    rdfs:comment \"X-ray computed tomography imaging.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Cardiovascular a schema:MedicalSpecialty ;\n    rdfs:label \"Cardiovascular\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to diagnosis and treatment of disorders of heart and vasculature.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CardiovascularExam a schema:PhysicalExam ;\n    rdfs:label \"CardiovascularExam\" ;\n    rdfs:comment \"Cardiovascular system assessment withclinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CaseSeries a schema:MedicalObservationalStudyDesign ;\n    rdfs:label \"CaseSeries\" ;\n    rdfs:comment \"A case series (also known as a clinical series) is a medical research study that tracks patients with a known exposure given similar treatment or examines their medical records for exposure and outcome. A case series can be retrospective or prospective and usually involves a smaller number of patients than the more powerful case-control studies or randomized controlled trials. Case series may be consecutive or non-consecutive, depending on whether all cases presenting to the reporting authors over a period of time were included, or only a selection.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CassetteFormat a schema:MusicReleaseFormatType ;\n    rdfs:label \"CassetteFormat\" ;\n    rdfs:comment \"CassetteFormat.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:CausesHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"CausesHealthAspect\" ;\n    rdfs:comment \"Information about the causes and main actions that gave rise to the topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:CharitableIncorporatedOrganization a schema:UKNonprofitType ;\n    rdfs:label \"CharitableIncorporatedOrganization\" ;\n    rdfs:comment \"CharitableIncorporatedOrganization: Non-profit type referring to a Charitable Incorporated Organization (UK).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Chiropractic a schema:MedicineSystem ;\n    rdfs:label \"Chiropractic\" ;\n    rdfs:comment \"A system of medicine focused on the relationship between the body's structure, mainly the spine, and its functioning.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CleaningFee a schema:PriceComponentTypeEnumeration ;\n    rdfs:label \"CleaningFee\" ;\n    rdfs:comment \"Represents the cleaning fee part of the total price for an offered product, for example a vacation rental.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:Clinician a schema:MedicalAudienceType ;\n    rdfs:label \"Clinician\" ;\n    rdfs:comment \"Medical clinicians, including practicing physicians and other medical professionals involved in clinical practice.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CoOp a schema:GamePlayMode ;\n    rdfs:label \"CoOp\" ;\n    rdfs:comment \"Play mode: CoOp. Co-operative games, where you play on the same team with friends.\" .\n\nschema:CohortStudy a schema:MedicalObservationalStudyDesign ;\n    rdfs:label \"CohortStudy\" ;\n    rdfs:comment \"Also known as a panel study. A cohort study is a form of longitudinal study used in medicine and social science. It is one type of study design and should be compared with a cross-sectional study.  A cohort is a group of people who share a common characteristic or experience within a defined period (e.g., are born, leave school, lose their job, are exposed to a drug or a vaccine, etc.). The comparison group may be the general population from which the cohort is drawn, or it may be another cohort of persons thought to have had little or no exposure to the substance under investigation, but otherwise similar. Alternatively, subgroups within the cohort may be compared with each other.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CommentPermission a schema:DigitalDocumentPermissionType ;\n    rdfs:label \"CommentPermission\" ;\n    rdfs:comment \"Permission to add comments to the document.\" .\n\nschema:CommunityHealth a schema:MedicalSpecialty ;\n    rdfs:label \"CommunityHealth\" ;\n    rdfs:comment \"A field of public health focusing on improving health characteristics of a defined population in relation with their geographical or environment areas.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CompilationAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"CompilationAlbum\" ;\n    rdfs:comment \"CompilationAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:Completed a schema:MedicalStudyStatus ;\n    rdfs:label \"Completed\" ;\n    rdfs:comment \"Completed.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:CompletedActionStatus a schema:ActionStatusType ;\n    rdfs:label \"CompletedActionStatus\" ;\n    rdfs:comment \"An action that has already taken place.\" .\n\nschema:ContagiousnessHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"ContagiousnessHealthAspect\" ;\n    rdfs:comment \"Content about contagion mechanisms and contagiousness information over the topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:CrossSectional a schema:MedicalObservationalStudyDesign ;\n    rdfs:label \"CrossSectional\" ;\n    rdfs:comment \"Studies carried out on pre-existing data (usually from 'snapshot' surveys), such as that collected by the Census Bureau. Sometimes called Prevalence Studies.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DJMixAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"DJMixAlbum\" ;\n    rdfs:comment \"DJMixAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:DVDFormat a schema:MusicReleaseFormatType ;\n    rdfs:label \"DVDFormat\" ;\n    rdfs:comment \"DVDFormat.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:DamagedCondition a schema:OfferItemCondition ;\n    rdfs:label \"DamagedCondition\" ;\n    rdfs:comment \"Indicates that the item is damaged.\" .\n\nschema:DecontextualizedContent a schema:MediaManipulationRatingEnumeration ;\n    rdfs:label \"DecontextualizedContent\" ;\n    rdfs:comment \"\"\"Content coded 'missing context' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'missing context': Presenting unaltered video in an inaccurate manner that misrepresents the footage. For example, using incorrect dates or locations, altering the transcript or sharing brief clips from a longer video to mislead viewers. (A video rated 'original' can also be missing context.)\n\nFor an [[ImageObject]] to be 'missing context': Presenting unaltered images in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An image rated 'original' can also be missing context.)\n\nFor an [[ImageObject]] with embedded text to be 'missing context': An unaltered image presented in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An 'original' image with inaccurate text would generally fall in this category.)\n\nFor an [[AudioObject]] to be 'missing context': Unaltered audio presented in an inaccurate manner that misrepresents it. For example, using incorrect dates or locations, or sharing brief clips from a longer recording to mislead viewers. (Audio rated â€œoriginalâ€ can also be missing context.)\n\"\"\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:DefinitiveLegalValue a schema:LegalValueLevel ;\n    rdfs:label \"DefinitiveLegalValue\" ;\n    rdfs:comment \"\"\"Indicates a document for which the text is conclusively what the law says and is legally binding. (e.g. The digitally signed version of an Official Journal.)\n  Something \"Definitive\" is considered to be also [[AuthoritativeLegalValue]].\"\"\" ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#LegalValue-definitive> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:DemoAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"DemoAlbum\" ;\n    rdfs:comment \"DemoAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:Dentistry a schema:MedicalSpecialty ;\n    rdfs:label \"Dentistry\" ;\n    rdfs:comment \"A branch of medicine that is involved in the dental care.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Dermatologic a schema:MedicalSpecialty ;\n    rdfs:label \"Dermatologic\" ;\n    rdfs:comment \"Something relating to or practicing dermatology.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:supersededBy schema:Dermatology .\n\nschema:DiabeticDiet a schema:RestrictedDiet ;\n    rdfs:label \"DiabeticDiet\" ;\n    rdfs:comment \"A diet appropriate for people with diabetes.\" .\n\nschema:Diagnostic a schema:MedicalDevicePurpose ;\n    rdfs:label \"Diagnostic\" ;\n    rdfs:comment \"A medical device used for diagnostic purposes.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DietNutrition a schema:MedicalSpecialty ;\n    rdfs:label \"DietNutrition\" ;\n    rdfs:comment \"Dietetic and nutrition as a medical specialty.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:DigitalAudioTapeFormat a schema:MusicReleaseFormatType ;\n    rdfs:label \"DigitalAudioTapeFormat\" ;\n    rdfs:comment \"DigitalAudioTapeFormat.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:DigitalFormat a schema:MusicReleaseFormatType ;\n    rdfs:label \"DigitalFormat\" ;\n    rdfs:comment \"DigitalFormat.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:DisabilitySupport a schema:GovernmentBenefitsType ;\n    rdfs:label \"DisabilitySupport\" ;\n    rdfs:comment \"DisabilitySupport: this is a benefit for disability support.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:Discontinued a schema:ItemAvailability ;\n    rdfs:label \"Discontinued\" ;\n    rdfs:comment \"Indicates that the item has been discontinued.\" .\n\nschema:DistanceFee a schema:PriceComponentTypeEnumeration ;\n    rdfs:label \"DistanceFee\" ;\n    rdfs:comment \"Represents the distance fee (e.g., price per km or mile) part of the total price for an offered product, for example a car rental.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:DoubleBlindedTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"DoubleBlindedTrial\" ;\n    rdfs:comment \"A trial design in which neither the researcher nor the patient knows the details of the treatment the patient was randomly assigned to.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Downpayment a schema:PriceComponentTypeEnumeration ;\n    rdfs:label \"Downpayment\" ;\n    rdfs:comment \"Represents the downpayment (up-front payment) price component of the total price for an offered product that has additional installment payments.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:DrivingSchoolVehicleUsage a schema:CarUsageType ;\n    rdfs:label \"DrivingSchoolVehicleUsage\" ;\n    rdfs:comment \"Indicates the usage of the vehicle for driving school.\" ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:EBook a schema:BookFormatType ;\n    rdfs:label \"EBook\" ;\n    rdfs:comment \"Book format: Ebook.\" .\n\nschema:EPRelease a schema:MusicAlbumReleaseType ;\n    rdfs:label \"EPRelease\" ;\n    rdfs:comment \"EPRelease.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:EUEnergyEfficiencyCategoryA a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryA\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class A as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryA1Plus a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryA1Plus\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class A+ as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryA2Plus a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryA2Plus\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class A++ as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryA3Plus a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryA3Plus\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class A+++ as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryB a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryB\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class B as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryC a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryC\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class C as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryD a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryD\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class D as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryE a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryE\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class E as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryF a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryF\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class F as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EUEnergyEfficiencyCategoryG a schema:EUEnergyEfficiencyEnumeration ;\n    rdfs:label \"EUEnergyEfficiencyCategoryG\" ;\n    rdfs:comment \"Represents EU Energy Efficiency Class G as defined in EU energy labeling regulations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:Ear a schema:PhysicalExam ;\n    rdfs:label \"Ear\" ;\n    rdfs:comment \"Ear function assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:EditedOrCroppedContent a schema:MediaManipulationRatingEnumeration ;\n    rdfs:label \"EditedOrCroppedContent\" ;\n    rdfs:comment \"\"\"Content coded 'edited or cropped content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'edited or cropped content': The video has been edited or rearranged. This category applies to time edits, including editing multiple videos together to alter the story being told or editing out large portions from a video.\n\nFor an [[ImageObject]] to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.\n\nFor an [[ImageObject]] with embedded text to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.\n\nFor an [[AudioObject]] to be 'edited or cropped content': The audio has been edited or rearranged. This category applies to time edits, including editing multiple audio clips together to alter the story being told or editing out large portions from the recording.\n\"\"\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:EffectivenessHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"EffectivenessHealthAspect\" ;\n    rdfs:comment \"Content about the effectiveness-related aspects of a health topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2799> .\n\nschema:Emergency a schema:MedicalSpecialty ;\n    rdfs:label \"Emergency\" ;\n    rdfs:comment \"A specific branch of medical science that deals with the evaluation and initial treatment of medical conditions caused by trauma or sudden illness.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Endocrine a schema:MedicalSpecialty ;\n    rdfs:label \"Endocrine\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to diagnosis and treatment of disorders of endocrine glands and their secretions.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:EnergyStarCertified a schema:EnergyStarEnergyEfficiencyEnumeration ;\n    rdfs:label \"EnergyStarCertified\" ;\n    rdfs:comment \"Represents EnergyStar certification.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:EnrollingByInvitation a schema:MedicalStudyStatus ;\n    rdfs:label \"EnrollingByInvitation\" ;\n    rdfs:comment \"Enrolling participants by invitation only.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:EventCancelled a schema:EventStatusType ;\n    rdfs:label \"EventCancelled\" ;\n    rdfs:comment \"The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).\" .\n\nschema:EventMovedOnline a schema:EventStatusType ;\n    rdfs:label \"EventMovedOnline\" ;\n    rdfs:comment \"Indicates that the event was changed to allow online participation. See [[eventAttendanceMode]] for specifics of whether it is now fully or partially online.\" .\n\nschema:EventPostponed a schema:EventStatusType ;\n    rdfs:label \"EventPostponed\" ;\n    rdfs:comment \"The event has been postponed and no new date has been set. The event's previousStartDate should be set.\" .\n\nschema:EventRescheduled a schema:EventStatusType ;\n    rdfs:label \"EventRescheduled\" ;\n    rdfs:comment \"The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated).\" .\n\nschema:EventScheduled a schema:EventStatusType ;\n    rdfs:label \"EventScheduled\" ;\n    rdfs:comment \"The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.\" .\n\nschema:EvidenceLevelA a schema:MedicalEvidenceLevel ;\n    rdfs:label \"EvidenceLevelA\" ;\n    rdfs:comment \"Data derived from multiple randomized clinical trials or meta-analyses.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:EvidenceLevelB a schema:MedicalEvidenceLevel ;\n    rdfs:label \"EvidenceLevelB\" ;\n    rdfs:comment \"Data derived from a single randomized trial, or nonrandomized studies.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:EvidenceLevelC a schema:MedicalEvidenceLevel ;\n    rdfs:label \"EvidenceLevelC\" ;\n    rdfs:comment \"Only consensus opinion of experts, case studies, or standard-of-care.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ExchangeRefund a schema:RefundTypeEnumeration ;\n    rdfs:label \"ExchangeRefund\" ;\n    rdfs:comment \"A ExchangeRefund ...\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:Eye a schema:PhysicalExam ;\n    rdfs:label \"Eye\" ;\n    rdfs:comment \"Eye or ophtalmological function assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FDAcategoryA a schema:DrugPregnancyCategory ;\n    rdfs:label \"FDAcategoryA\" ;\n    rdfs:comment \"A designation by the US FDA signifying that adequate and well-controlled studies have failed to demonstrate a risk to the fetus in the first trimester of pregnancy (and there is no evidence of risk in later trimesters).\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FDAcategoryB a schema:DrugPregnancyCategory ;\n    rdfs:label \"FDAcategoryB\" ;\n    rdfs:comment \"A designation by the US FDA signifying that animal reproduction studies have failed to demonstrate a risk to the fetus and there are no adequate and well-controlled studies in pregnant women.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FDAcategoryC a schema:DrugPregnancyCategory ;\n    rdfs:label \"FDAcategoryC\" ;\n    rdfs:comment \"A designation by the US FDA signifying that animal reproduction studies have shown an adverse effect on the fetus and there are no adequate and well-controlled studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FDAcategoryD a schema:DrugPregnancyCategory ;\n    rdfs:label \"FDAcategoryD\" ;\n    rdfs:comment \"A designation by the US FDA signifying that there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience or studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FDAcategoryX a schema:DrugPregnancyCategory ;\n    rdfs:label \"FDAcategoryX\" ;\n    rdfs:comment \"A designation by the US FDA signifying that studies in animals or humans have demonstrated fetal abnormalities and/or there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience, and the risks involved in use of the drug in pregnant women clearly outweigh potential benefits.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FDAnotEvaluated a schema:DrugPregnancyCategory ;\n    rdfs:label \"FDAnotEvaluated\" ;\n    rdfs:comment \"A designation that the drug in question has not been assigned a pregnancy category designation by the US FDA.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FailedActionStatus a schema:ActionStatusType ;\n    rdfs:label \"FailedActionStatus\" ;\n    rdfs:comment \"An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.\" .\n\nschema:False a schema:Boolean ;\n    rdfs:label \"False\" ;\n    rdfs:comment \"The boolean value false.\" .\n\nschema:Female a schema:GenderType ;\n    rdfs:label \"Female\" ;\n    rdfs:comment \"The female gender.\" .\n\nschema:Flexibility a schema:PhysicalActivityCategory ;\n    rdfs:label \"Flexibility\" ;\n    rdfs:comment \"Physical activity that is engaged in to improve joint and muscle flexibility.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:FourWheelDriveConfiguration a schema:DriveWheelConfigurationValue ;\n    rdfs:label \"FourWheelDriveConfiguration\" ;\n    rdfs:comment \"Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:Friday a schema:DayOfWeek ;\n    rdfs:label \"Friday\" ;\n    rdfs:comment \"The day of the week between Thursday and Saturday.\" ;\n    schema:sameAs <http://www.wikidata.org/entity/Q130> .\n\nschema:FrontWheelDriveConfiguration a schema:DriveWheelConfigurationValue ;\n    rdfs:label \"FrontWheelDriveConfiguration\" ;\n    rdfs:comment \"Front-wheel drive is a transmission layout where the engine drives the front wheels.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:FullRefund a schema:RefundTypeEnumeration ;\n    rdfs:label \"FullRefund\" ;\n    rdfs:comment \"A FullRefund ...\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:Fungus a schema:InfectiousAgentClass ;\n    rdfs:label \"Fungus\" ;\n    rdfs:comment \"Pathogenic fungus.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Gastroenterologic a schema:MedicalSpecialty ;\n    rdfs:label \"Gastroenterologic\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to diagnosis and treatment of disorders of digestive system.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Genetic a schema:MedicalSpecialty ;\n    rdfs:label \"Genetic\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to hereditary transmission and the variation of inherited characteristics and disorders.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Genitourinary a schema:PhysicalExam ;\n    rdfs:label \"Genitourinary\" ;\n    rdfs:comment \"Genitourinary system function assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Geriatric a schema:MedicalSpecialty ;\n    rdfs:label \"Geriatric\" ;\n    rdfs:comment \"A specific branch of medical science that is concerned with the diagnosis and treatment of diseases, debilities and provision of care to the aged.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:GettingAccessHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"GettingAccessHealthAspect\" ;\n    rdfs:comment \"Content that discusses practical and policy aspects for getting access to specific kinds of healthcare (e.g. distribution mechanisms for vaccines).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2799> .\n\nschema:GlutenFreeDiet a schema:RestrictedDiet ;\n    rdfs:label \"GlutenFreeDiet\" ;\n    rdfs:comment \"A diet exclusive of gluten.\" .\n\nschema:GraphicNovel a schema:BookFormatType ;\n    rdfs:label \"GraphicNovel\" ;\n    rdfs:comment \"Book format: GraphicNovel. May represent a bound collection of ComicIssue instances.\" ;\n    schema:isPartOf <https://bib.schema.org> .\n\nschema:GroupBoardingPolicy a schema:BoardingPolicyType ;\n    rdfs:label \"GroupBoardingPolicy\" ;\n    rdfs:comment \"The airline boards by groups based on check-in time, priority, etc.\" .\n\nschema:Gynecologic a schema:MedicalSpecialty ;\n    rdfs:label \"Gynecologic\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to the health care of women, particularly in the diagnosis and treatment of disorders affecting the female reproductive system.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:HalalDiet a schema:RestrictedDiet ;\n    rdfs:label \"HalalDiet\" ;\n    rdfs:comment \"A diet conforming to Islamic dietary practices.\" .\n\nschema:Hardcover a schema:BookFormatType ;\n    rdfs:label \"Hardcover\" ;\n    rdfs:comment \"Book format: Hardcover.\" .\n\nschema:Head a schema:PhysicalExam ;\n    rdfs:label \"Head\" ;\n    rdfs:comment \"Head assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:HealthCare a schema:GovernmentBenefitsType ;\n    rdfs:label \"HealthCare\" ;\n    rdfs:comment \"HealthCare: this is a benefit for health care.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:HearingImpairedSupported a schema:ContactPointOption ;\n    rdfs:label \"HearingImpairedSupported\" ;\n    rdfs:comment \"Uses devices to support users with hearing impairments.\" .\n\nschema:Hematologic a schema:MedicalSpecialty ;\n    rdfs:label \"Hematologic\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to diagnosis and treatment of disorders of blood and blood producing organs.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:HinduDiet a schema:RestrictedDiet ;\n    rdfs:label \"HinduDiet\" ;\n    rdfs:comment \"A diet conforming to Hindu dietary practices, in particular, beef-free.\" .\n\nschema:Homeopathic a schema:MedicineSystem ;\n    rdfs:label \"Homeopathic\" ;\n    rdfs:comment \"A system of medicine based on the principle that a disease can be cured by a substance that produces similar symptoms in healthy people.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:HowItWorksHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"HowItWorksHealthAspect\" ;\n    rdfs:comment \"Content that discusses and explains how a particular health-related topic works, e.g. in terms of mechanisms and underlying science.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2799> .\n\nschema:HowOrWhereHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"HowOrWhereHealthAspect\" ;\n    rdfs:comment \"Information about how or where to find a topic. Also may contain location data that can be used for where to look for help if the topic is observed.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:InForce a schema:LegalForceStatus ;\n    rdfs:label \"InForce\" ;\n    rdfs:comment \"Indicates that a legislation is in force.\" ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#InForce-inForce> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:InStock a schema:ItemAvailability ;\n    rdfs:label \"InStock\" ;\n    rdfs:comment \"Indicates that the item is in stock.\" .\n\nschema:InStoreOnly a schema:ItemAvailability ;\n    rdfs:label \"InStoreOnly\" ;\n    rdfs:comment \"Indicates that the item is available only at physical locations.\" .\n\nschema:Infectious a schema:MedicalSpecialty ;\n    rdfs:label \"Infectious\" ;\n    rdfs:comment \"Something in medical science that pertains to infectious diseases i.e caused by bacterial, viral, fungal or parasitic infections.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:IngredientsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"IngredientsHealthAspect\" ;\n    rdfs:comment \"Content discussing ingredients-related aspects of a health topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2799> .\n\nschema:Installment a schema:PriceComponentTypeEnumeration ;\n    rdfs:label \"Installment\" ;\n    rdfs:comment \"Represents the installment pricing component of the total price for an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:InternationalTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"InternationalTrial\" ;\n    rdfs:comment \"An international trial.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:InvoicePrice a schema:PriceTypeEnumeration ;\n    rdfs:label \"InvoicePrice\" ;\n    rdfs:comment \"Represents the invoice price of an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2712> .\n\nschema:ItemListOrderAscending a schema:ItemListOrderType ;\n    rdfs:label \"ItemListOrderAscending\" ;\n    rdfs:comment \"An ItemList ordered with lower values listed first.\" .\n\nschema:ItemListOrderDescending a schema:ItemListOrderType ;\n    rdfs:label \"ItemListOrderDescending\" ;\n    rdfs:comment \"An ItemList ordered with higher values listed first.\" .\n\nschema:ItemListUnordered a schema:ItemListOrderType ;\n    rdfs:label \"ItemListUnordered\" ;\n    rdfs:comment \"An ItemList ordered with no explicit order.\" .\n\nschema:KosherDiet a schema:RestrictedDiet ;\n    rdfs:label \"KosherDiet\" ;\n    rdfs:comment \"A diet conforming to Jewish dietary practices.\" .\n\nschema:LaboratoryScience a schema:MedicalSpecialty ;\n    rdfs:label \"LaboratoryScience\" ;\n    rdfs:comment \"A medical science pertaining to chemical, hematological, immunologic, microscopic, or bacteriological diagnostic analyses or research.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:LaserDiscFormat a schema:MusicReleaseFormatType ;\n    rdfs:label \"LaserDiscFormat\" ;\n    rdfs:comment \"LaserDiscFormat.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:LeftHandDriving a schema:SteeringPositionValue ;\n    rdfs:label \"LeftHandDriving\" ;\n    rdfs:comment \"The steering position is on the left side of the vehicle (viewed from the main direction of driving).\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:LeisureTimeActivity a schema:PhysicalActivityCategory ;\n    rdfs:label \"LeisureTimeActivity\" ;\n    rdfs:comment \"Any physical activity engaged in for recreational purposes. Examples may include ballroom dancing, roller skating, canoeing, fishing, etc.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:LimitedAvailability a schema:ItemAvailability ;\n    rdfs:label \"LimitedAvailability\" ;\n    rdfs:comment \"Indicates that the item has limited availability.\" .\n\nschema:LimitedByGuaranteeCharity a schema:UKNonprofitType ;\n    rdfs:label \"LimitedByGuaranteeCharity\" ;\n    rdfs:comment \"LimitedByGuaranteeCharity: Non-profit type referring to a charitable company that is limited by guarantee (UK).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:ListPrice a schema:PriceTypeEnumeration ;\n    rdfs:label \"ListPrice\" ;\n    rdfs:comment \"Represents the list price (the price a product is actually advertised for) of an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2712> .\n\nschema:LiveAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"LiveAlbum\" ;\n    rdfs:comment \"LiveAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:LivingWithHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"LivingWithHealthAspect\" ;\n    rdfs:comment \"Information about coping or life related to the topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:LockerDelivery a schema:DeliveryMethod ;\n    rdfs:label \"LockerDelivery\" ;\n    rdfs:comment \"A DeliveryMethod in which an item is made available via locker.\" .\n\nschema:Longitudinal a schema:MedicalObservationalStudyDesign ;\n    rdfs:label \"Longitudinal\" ;\n    rdfs:comment \"Unlike cross-sectional studies, longitudinal studies track the same people, and therefore the differences observed in those people are less likely to be the result of cultural differences across generations. Longitudinal studies are also used in medicine to uncover predictors of certain diseases.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:LowCalorieDiet a schema:RestrictedDiet ;\n    rdfs:label \"LowCalorieDiet\" ;\n    rdfs:comment \"A diet focused on reduced calorie intake.\" .\n\nschema:LowFatDiet a schema:RestrictedDiet ;\n    rdfs:label \"LowFatDiet\" ;\n    rdfs:comment \"A diet focused on reduced fat and cholesterol intake.\" .\n\nschema:LowLactoseDiet a schema:RestrictedDiet ;\n    rdfs:label \"LowLactoseDiet\" ;\n    rdfs:comment \"A diet appropriate for people with lactose intolerance.\" .\n\nschema:LowSaltDiet a schema:RestrictedDiet ;\n    rdfs:label \"LowSaltDiet\" ;\n    rdfs:comment \"A diet focused on reduced sodium intake.\" .\n\nschema:Lung a schema:PhysicalExam ;\n    rdfs:label \"Lung\" ;\n    rdfs:comment \"Lung and respiratory system clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MRI a schema:MedicalImagingTechnique ;\n    rdfs:label \"MRI\" ;\n    rdfs:comment \"Magnetic resonance imaging.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MSRP a schema:PriceTypeEnumeration ;\n    rdfs:label \"MSRP\" ;\n    rdfs:comment \"Represents the manufacturer suggested retail price (\\\\\"MSRP\\\\\") of an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2712> .\n\nschema:Male a schema:GenderType ;\n    rdfs:label \"Male\" ;\n    rdfs:comment \"The male gender.\" .\n\nschema:MayTreatHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"MayTreatHealthAspect\" ;\n    rdfs:comment \"Related topics may be treated by a Topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:MedicalResearcher a schema:MedicalAudienceType ;\n    rdfs:label \"MedicalResearcher\" ;\n    rdfs:comment \"Medical researchers.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MerchantReturnFiniteReturnWindow a schema:MerchantReturnEnumeration ;\n    rdfs:label \"MerchantReturnFiniteReturnWindow\" ;\n    rdfs:comment \"MerchantReturnFiniteReturnWindow: there is a finite window for product returns.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:MerchantReturnNotPermitted a schema:MerchantReturnEnumeration ;\n    rdfs:label \"MerchantReturnNotPermitted\" ;\n    rdfs:comment \"MerchantReturnNotPermitted: product returns are not permitted.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:MerchantReturnUnlimitedWindow a schema:MerchantReturnEnumeration ;\n    rdfs:label \"MerchantReturnUnlimitedWindow\" ;\n    rdfs:comment \"MerchantReturnUnlimitedWindow: there is an unlimited window for product returns.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:MerchantReturnUnspecified a schema:MerchantReturnEnumeration ;\n    rdfs:label \"MerchantReturnUnspecified\" ;\n    rdfs:comment \"MerchantReturnUnspecified: a product return policy is not specified here.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:Midwifery a schema:MedicalSpecialty ;\n    rdfs:label \"Midwifery\" ;\n    rdfs:comment \"A nurse-like health profession that deals with pregnancy, childbirth, and the postpartum period (including care of the newborn), besides sexual and reproductive health of women throughout their lives.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MinimumAdvertisedPrice a schema:PriceTypeEnumeration ;\n    rdfs:label \"MinimumAdvertisedPrice\" ;\n    rdfs:comment \"Represents the minimum advertised price (\\\\\"MAP\\\\\") (as dictated by the manufacturer) of an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2712> .\n\nschema:MisconceptionsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"MisconceptionsHealthAspect\" ;\n    rdfs:comment \"Content about common misconceptions and myths that are related to a topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:MixedEventAttendanceMode a schema:EventAttendanceModeEnumeration ;\n    rdfs:label \"MixedEventAttendanceMode\" ;\n    rdfs:comment \"MixedEventAttendanceMode - an event that is conducted as a combination of both offline and online modes.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:MixtapeAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"MixtapeAlbum\" ;\n    rdfs:comment \"MixtapeAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:Monday a schema:DayOfWeek ;\n    rdfs:label \"Monday\" ;\n    rdfs:comment \"The day of the week between Sunday and Tuesday.\" ;\n    schema:sameAs <http://www.wikidata.org/entity/Q105> .\n\nschema:MultiCenterTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"MultiCenterTrial\" ;\n    rdfs:comment \"A trial that takes place at multiple centers.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MultiPlayer a schema:GamePlayMode ;\n    rdfs:label \"MultiPlayer\" ;\n    rdfs:comment \"Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.\" .\n\nschema:MulticellularParasite a schema:InfectiousAgentClass ;\n    rdfs:label \"MulticellularParasite\" ;\n    rdfs:comment \"Multicellular parasite that causes an infection.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Musculoskeletal a schema:MedicalSpecialty ;\n    rdfs:label \"Musculoskeletal\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to diagnosis and treatment of disorders of muscles, ligaments and skeletal system.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:MusculoskeletalExam a schema:PhysicalExam ;\n    rdfs:label \"MusculoskeletalExam\" ;\n    rdfs:comment \"Musculoskeletal system clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Neck a schema:PhysicalExam ;\n    rdfs:label \"Neck\" ;\n    rdfs:comment \"Neck assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Neuro a schema:PhysicalExam ;\n    rdfs:label \"Neuro\" ;\n    rdfs:comment \"Neurological system clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Neurologic a schema:MedicalSpecialty ;\n    rdfs:label \"Neurologic\" ;\n    rdfs:comment \"A specific branch of medical science that studies the nerves and nervous system and its respective disease states.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:NewCondition a schema:OfferItemCondition ;\n    rdfs:label \"NewCondition\" ;\n    rdfs:comment \"Indicates that the item is new.\" .\n\nschema:NoninvasiveProcedure a schema:MedicalProcedureType ;\n    rdfs:label \"NoninvasiveProcedure\" ;\n    rdfs:comment \"A type of medical procedure that involves noninvasive techniques.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Nonprofit501a a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501a\" ;\n    rdfs:comment \"Nonprofit501a: Non-profit type referring to Farmersâ€™ Cooperative Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c1 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c1\" ;\n    rdfs:comment \"Nonprofit501c1: Non-profit type referring to Corporations Organized Under Act of Congress, including Federal Credit Unions and National Farm Loan Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c10 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c10\" ;\n    rdfs:comment \"Nonprofit501c10: Non-profit type referring to Domestic Fraternal Societies and Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c11 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c11\" ;\n    rdfs:comment \"Nonprofit501c11: Non-profit type referring to Teachers' Retirement Fund Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c12 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c12\" ;\n    rdfs:comment \"Nonprofit501c12: Non-profit type referring to Benevolent Life Insurance Associations, Mutual Ditch or Irrigation Companies, Mutual or Cooperative Telephone Companies.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c13 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c13\" ;\n    rdfs:comment \"Nonprofit501c13: Non-profit type referring to Cemetery Companies.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c14 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c14\" ;\n    rdfs:comment \"Nonprofit501c14: Non-profit type referring to State-Chartered Credit Unions, Mutual Reserve Funds.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c15 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c15\" ;\n    rdfs:comment \"Nonprofit501c15: Non-profit type referring to Mutual Insurance Companies or Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c16 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c16\" ;\n    rdfs:comment \"Nonprofit501c16: Non-profit type referring to Cooperative Organizations to Finance Crop Operations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c17 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c17\" ;\n    rdfs:comment \"Nonprofit501c17: Non-profit type referring to Supplemental Unemployment Benefit Trusts.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c18 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c18\" ;\n    rdfs:comment \"Nonprofit501c18: Non-profit type referring to Employee Funded Pension Trust (created before 25 June 1959).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c19 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c19\" ;\n    rdfs:comment \"Nonprofit501c19: Non-profit type referring to Post or Organization of Past or Present Members of the Armed Forces.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c2 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c2\" ;\n    rdfs:comment \"Nonprofit501c2: Non-profit type referring to Title-holding Corporations for Exempt Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c20 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c20\" ;\n    rdfs:comment \"Nonprofit501c20: Non-profit type referring to Group Legal Services Plan Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c21 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c21\" ;\n    rdfs:comment \"Nonprofit501c21: Non-profit type referring to Black Lung Benefit Trusts.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c22 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c22\" ;\n    rdfs:comment \"Nonprofit501c22: Non-profit type referring to Withdrawal Liability Payment Funds.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c23 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c23\" ;\n    rdfs:comment \"Nonprofit501c23: Non-profit type referring to Veterans Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c24 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c24\" ;\n    rdfs:comment \"Nonprofit501c24: Non-profit type referring to Section 4049 ERISA Trusts.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c25 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c25\" ;\n    rdfs:comment \"Nonprofit501c25: Non-profit type referring to Real Property Title-Holding Corporations or Trusts with Multiple Parents.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c26 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c26\" ;\n    rdfs:comment \"Nonprofit501c26: Non-profit type referring to State-Sponsored Organizations Providing Health Coverage for High-Risk Individuals.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c27 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c27\" ;\n    rdfs:comment \"Nonprofit501c27: Non-profit type referring to State-Sponsored Workers' Compensation Reinsurance Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c28 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c28\" ;\n    rdfs:comment \"Nonprofit501c28: Non-profit type referring to National Railroad Retirement Investment Trusts.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c3 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c3\" ;\n    rdfs:comment \"Nonprofit501c3: Non-profit type referring to Religious, Educational, Charitable, Scientific, Literary, Testing for Public Safety, to Foster National or International Amateur Sports Competition, or Prevention of Cruelty to Children or Animals Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c4 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c4\" ;\n    rdfs:comment \"Nonprofit501c4: Non-profit type referring to Civic Leagues, Social Welfare Organizations, and Local Associations of Employees.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c5 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c5\" ;\n    rdfs:comment \"Nonprofit501c5: Non-profit type referring to Labor, Agricultural and Horticultural Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c6 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c6\" ;\n    rdfs:comment \"Nonprofit501c6: Non-profit type referring to Business Leagues, Chambers of Commerce, Real Estate Boards.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c7 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c7\" ;\n    rdfs:comment \"Nonprofit501c7: Non-profit type referring to Social and Recreational Clubs.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c8 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c8\" ;\n    rdfs:comment \"Nonprofit501c8: Non-profit type referring to Fraternal Beneficiary Societies and Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501c9 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501c9\" ;\n    rdfs:comment \"Nonprofit501c9: Non-profit type referring to Voluntary Employee Beneficiary Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501d a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501d\" ;\n    rdfs:comment \"Nonprofit501d: Non-profit type referring to Religious and Apostolic Associations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501e a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501e\" ;\n    rdfs:comment \"Nonprofit501e: Non-profit type referring to Cooperative Hospital Service Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501f a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501f\" ;\n    rdfs:comment \"Nonprofit501f: Non-profit type referring to Cooperative Service Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501k a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501k\" ;\n    rdfs:comment \"Nonprofit501k: Non-profit type referring to Child Care Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501n a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501n\" ;\n    rdfs:comment \"Nonprofit501n: Non-profit type referring to Charitable Risk Pools.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit501q a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit501q\" ;\n    rdfs:comment \"Nonprofit501q: Non-profit type referring to Credit Counseling Organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nonprofit527 a schema:USNonprofitType ;\n    rdfs:label \"Nonprofit527\" ;\n    rdfs:comment \"Nonprofit527: Non-profit type referring to Political organizations.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:NonprofitANBI a schema:NLNonprofitType ;\n    rdfs:label \"NonprofitANBI\" ;\n    rdfs:comment \"NonprofitANBI: Non-profit type referring to a Public Benefit Organization (NL).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:NonprofitSBBI a schema:NLNonprofitType ;\n    rdfs:label \"NonprofitSBBI\" ;\n    rdfs:comment \"NonprofitSBBI: Non-profit type referring to a Social Interest Promoting Institution (NL).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Nose a schema:PhysicalExam ;\n    rdfs:label \"Nose\" ;\n    rdfs:comment \"Nose function assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:NotInForce a schema:LegalForceStatus ;\n    rdfs:label \"NotInForce\" ;\n    rdfs:comment \"Indicates that a legislation is currently not in force.\" ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#InForce-notInForce> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:NotYetRecruiting a schema:MedicalStudyStatus ;\n    rdfs:label \"NotYetRecruiting\" ;\n    rdfs:comment \"Not yet recruiting.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Nursing a schema:MedicalSpecialty ;\n    rdfs:label \"Nursing\" ;\n    rdfs:comment \"A health profession of a person formally educated and trained in the care of the sick or infirm person.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:OTC a schema:DrugPrescriptionStatus ;\n    rdfs:label \"OTC\" ;\n    rdfs:comment \"The character of a medical substance, typically a medicine, of being available over the counter or not.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Observational a schema:MedicalObservationalStudyDesign ;\n    rdfs:label \"Observational\" ;\n    rdfs:comment \"An observational study design.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Obstetric a schema:MedicalSpecialty ;\n    rdfs:label \"Obstetric\" ;\n    rdfs:comment \"A specific branch of medical science that specializes in the care of women during the prenatal and postnatal care and with the delivery of the child.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:OccupationalActivity a schema:PhysicalActivityCategory ;\n    rdfs:label \"OccupationalActivity\" ;\n    rdfs:comment \"Any physical activity engaged in for job-related purposes. Examples may include waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, construction work, etc.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:OfficialLegalValue a schema:LegalValueLevel ;\n    rdfs:label \"OfficialLegalValue\" ;\n    rdfs:comment \"All the documents published by an official publisher should have at least the legal value level \\\\\"OfficialLegalValue\\\\\". This indicates that the document was published by an organisation with the public task of making it available (e.g. a consolidated version of a EU directive published by the EU Office of Publications).\" ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#LegalValue-official> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:OfflineEventAttendanceMode a schema:EventAttendanceModeEnumeration ;\n    rdfs:label \"OfflineEventAttendanceMode\" ;\n    rdfs:comment \"OfflineEventAttendanceMode - an event that is primarily conducted offline. \" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:OfflinePermanently a schema:GameServerStatus ;\n    rdfs:label \"OfflinePermanently\" ;\n    rdfs:comment \"Game server status: OfflinePermanently. Server is offline and not available.\" .\n\nschema:OfflineTemporarily a schema:GameServerStatus ;\n    rdfs:label \"OfflineTemporarily\" ;\n    rdfs:comment \"Game server status: OfflineTemporarily. Server is offline now but it can be online soon.\" .\n\nschema:OnSitePickup a schema:DeliveryMethod ;\n    rdfs:label \"OnSitePickup\" ;\n    rdfs:comment \"A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.\" .\n\nschema:Oncologic a schema:MedicalSpecialty ;\n    rdfs:label \"Oncologic\" ;\n    rdfs:comment \"A specific branch of medical science that deals with benign and malignant tumors, including the study of their development, diagnosis, treatment and prevention.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:OneTimePayments a schema:GovernmentBenefitsType ;\n    rdfs:label \"OneTimePayments\" ;\n    rdfs:comment \"OneTimePayments: this is a benefit for one-time payments for individuals.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:Online a schema:GameServerStatus ;\n    rdfs:label \"Online\" ;\n    rdfs:comment \"Game server status: Online. Server is available.\" .\n\nschema:OnlineEventAttendanceMode a schema:EventAttendanceModeEnumeration ;\n    rdfs:label \"OnlineEventAttendanceMode\" ;\n    rdfs:comment \"OnlineEventAttendanceMode - an event that is primarily conducted online. \" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:OnlineFull a schema:GameServerStatus ;\n    rdfs:label \"OnlineFull\" ;\n    rdfs:comment \"Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.\" .\n\nschema:OnlineOnly a schema:ItemAvailability ;\n    rdfs:label \"OnlineOnly\" ;\n    rdfs:comment \"Indicates that the item is available only online.\" .\n\nschema:OpenTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"OpenTrial\" ;\n    rdfs:comment \"A trial design in which the researcher knows the full details of the treatment, and so does the patient.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Optometric a schema:MedicalSpecialty ;\n    rdfs:label \"Optometric\" ;\n    rdfs:comment \"The science or practice of testing visual acuity and prescribing corrective lenses.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:OrderCancelled a schema:OrderStatus ;\n    rdfs:label \"OrderCancelled\" ;\n    rdfs:comment \"OrderStatus representing cancellation of an order.\" .\n\nschema:OrderDelivered a schema:OrderStatus ;\n    rdfs:label \"OrderDelivered\" ;\n    rdfs:comment \"OrderStatus representing successful delivery of an order.\" .\n\nschema:OrderInTransit a schema:OrderStatus ;\n    rdfs:label \"OrderInTransit\" ;\n    rdfs:comment \"OrderStatus representing that an order is in transit.\" .\n\nschema:OrderPaymentDue a schema:OrderStatus ;\n    rdfs:label \"OrderPaymentDue\" ;\n    rdfs:comment \"OrderStatus representing that payment is due on an order.\" .\n\nschema:OrderPickupAvailable a schema:OrderStatus ;\n    rdfs:label \"OrderPickupAvailable\" ;\n    rdfs:comment \"OrderStatus representing availability of an order for pickup.\" .\n\nschema:OrderProblem a schema:OrderStatus ;\n    rdfs:label \"OrderProblem\" ;\n    rdfs:comment \"OrderStatus representing that there is a problem with the order.\" .\n\nschema:OrderProcessing a schema:OrderStatus ;\n    rdfs:label \"OrderProcessing\" ;\n    rdfs:comment \"OrderStatus representing that an order is being processed.\" .\n\nschema:OrderReturned a schema:OrderStatus ;\n    rdfs:label \"OrderReturned\" ;\n    rdfs:comment \"OrderStatus representing that an order has been returned.\" .\n\nschema:OriginalMediaContent a schema:MediaManipulationRatingEnumeration ;\n    rdfs:label \"OriginalMediaContent\" ;\n    rdfs:comment \"\"\"Content coded 'as original media content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'original': No evidence the footage has been misleadingly altered or manipulated, though it may contain false or misleading claims.\n\nFor an [[ImageObject]] to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.\n\nFor an [[ImageObject]] with embedded text to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.\n\nFor an [[AudioObject]] to be 'original': No evidence the audio has been misleadingly altered or manipulated, though it may contain false or misleading claims.\n\"\"\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:OriginalShippingFees a schema:ReturnFeesEnumeration ;\n    rdfs:label \"OriginalShippingFees\" ;\n    rdfs:comment \"OriginalShippingFees ...\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:Osteopathic a schema:MedicineSystem ;\n    rdfs:label \"Osteopathic\" ;\n    rdfs:comment \"A system of medicine focused on promoting the body's innate ability to heal itself.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Otolaryngologic a schema:MedicalSpecialty ;\n    rdfs:label \"Otolaryngologic\" ;\n    rdfs:comment \"A specific branch of medical science that is concerned with the ear, nose and throat and their respective disease states.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:OutOfStock a schema:ItemAvailability ;\n    rdfs:label \"OutOfStock\" ;\n    rdfs:comment \"Indicates that the item is out of stock.\" .\n\nschema:OverviewHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"OverviewHealthAspect\" ;\n    rdfs:comment \"Overview of the content. Contains a summarized view of the topic with the most relevant information for an introduction.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:PET a schema:MedicalImagingTechnique ;\n    rdfs:label \"PET\" ;\n    rdfs:comment \"Positron emission tomography imaging.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PaidLeave a schema:GovernmentBenefitsType ;\n    rdfs:label \"PaidLeave\" ;\n    rdfs:comment \"PaidLeave: this is a benefit for paid leave.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:Paperback a schema:BookFormatType ;\n    rdfs:label \"Paperback\" ;\n    rdfs:comment \"Book format: Paperback.\" .\n\nschema:ParcelService a schema:DeliveryMethod ;\n    rdfs:label \"ParcelService\" ;\n    rdfs:comment \"\"\"A private parcel service as the delivery mode available for a certain offer.\\\\n\\\\nCommonly used values:\\\\n\\\\n* http://purl.org/goodrelations/v1#DHL\\\\\\\\n* http://purl.org/goodrelations/v1#FederalExpress\\\\\\\\n* http://purl.org/goodrelations/v1#UPS\n      \"\"\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:ParentalSupport a schema:GovernmentBenefitsType ;\n    rdfs:label \"ParentalSupport\" ;\n    rdfs:comment \"ParentalSupport: this is a benefit for parental support.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:ParkingMap a schema:MapCategoryType ;\n    rdfs:label \"ParkingMap\" ;\n    rdfs:comment \"A parking map.\" .\n\nschema:PartiallyInForce a schema:LegalForceStatus ;\n    rdfs:label \"PartiallyInForce\" ;\n    rdfs:comment \"Indicates that parts of the legislation are in force, and parts are not.\" ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#InForce-partiallyInForce> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:Pathology a schema:MedicalSpecialty ;\n    rdfs:label \"Pathology\" ;\n    rdfs:comment \"A specific branch of medical science that is concerned with the study of the cause, origin and nature of a disease state, including its consequences as a result of manifestation of the disease. In clinical care, the term is used to designate a branch of medicine using laboratory tests to diagnose and determine the prognostic significance of illness.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PatientExperienceHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"PatientExperienceHealthAspect\" ;\n    rdfs:comment \"Content about the real life experience of patients or people that have lived a similar experience about the topic. May be forums, topics, Q-and-A and related material.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:PaymentAutomaticallyApplied a schema:PaymentStatusType ;\n    rdfs:label \"PaymentAutomaticallyApplied\" ;\n    rdfs:comment \"An automatic payment system is in place and will be used.\" .\n\nschema:PaymentComplete a schema:PaymentStatusType ;\n    rdfs:label \"PaymentComplete\" ;\n    rdfs:comment \"The payment has been received and processed.\" .\n\nschema:PaymentDeclined a schema:PaymentStatusType ;\n    rdfs:label \"PaymentDeclined\" ;\n    rdfs:comment \"The payee received the payment, but it was declined for some reason.\" .\n\nschema:PaymentDue a schema:PaymentStatusType ;\n    rdfs:label \"PaymentDue\" ;\n    rdfs:comment \"The payment is due, but still within an acceptable time to be received.\" .\n\nschema:PaymentPastDue a schema:PaymentStatusType ;\n    rdfs:label \"PaymentPastDue\" ;\n    rdfs:comment \"The payment is due and considered late.\" .\n\nschema:Pediatric a schema:MedicalSpecialty ;\n    rdfs:label \"Pediatric\" ;\n    rdfs:comment \"A specific branch of medical science that specializes in the care of infants, children and adolescents.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PercutaneousProcedure a schema:MedicalProcedureType ;\n    rdfs:label \"PercutaneousProcedure\" ;\n    rdfs:comment \"A type of medical procedure that involves percutaneous techniques, where access to organs or tissue is achieved via needle-puncture of the skin. For example, catheter-based procedures like stent delivery.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PharmacySpecialty a schema:MedicalSpecialty ;\n    rdfs:label \"PharmacySpecialty\" ;\n    rdfs:comment \"The practice or art and science of preparing and dispensing drugs and medicines.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Physiotherapy a schema:MedicalSpecialty ;\n    rdfs:label \"Physiotherapy\" ;\n    rdfs:comment \"The practice of treatment of disease, injury, or deformity by physical methods such as massage, heat treatment, and exercise rather than by drugs or surgery..\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PlaceboControlledTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"PlaceboControlledTrial\" ;\n    rdfs:comment \"A placebo-controlled trial design.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PlasticSurgery a schema:MedicalSpecialty ;\n    rdfs:label \"PlasticSurgery\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to therapeutic or cosmetic repair or re-formation of missing, injured or malformed tissues or body parts by manual and instrumental means.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Podiatric a schema:MedicalSpecialty ;\n    rdfs:label \"Podiatric\" ;\n    rdfs:comment \"Podiatry is the care of the human foot, especially the diagnosis and treatment of foot disorders.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PotentialActionStatus a schema:ActionStatusType ;\n    rdfs:label \"PotentialActionStatus\" ;\n    rdfs:comment \"A description of an action that is supported.\" .\n\nschema:PreOrder a schema:ItemAvailability ;\n    rdfs:label \"PreOrder\" ;\n    rdfs:comment \"Indicates that the item is available for pre-order.\" .\n\nschema:PreSale a schema:ItemAvailability ;\n    rdfs:label \"PreSale\" ;\n    rdfs:comment \"Indicates that the item is available for ordering and delivery before general availability.\" .\n\nschema:PregnancyHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"PregnancyHealthAspect\" ;\n    rdfs:comment \"Content discussing pregnancy-related aspects of a health topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2799> .\n\nschema:PrescriptionOnly a schema:DrugPrescriptionStatus ;\n    rdfs:label \"PrescriptionOnly\" ;\n    rdfs:comment \"Available by prescription only.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PreventionHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"PreventionHealthAspect\" ;\n    rdfs:comment \"Information about actions or measures that can be taken to avoid getting the topic or reaching a critical situation related to the topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:PrimaryCare a schema:MedicalSpecialty ;\n    rdfs:label \"PrimaryCare\" ;\n    rdfs:comment \"The medical care by a physician, or other health-care professional, who is the patient's first contact with the health-care system and who may recommend a specialist if necessary.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Prion a schema:InfectiousAgentClass ;\n    rdfs:label \"Prion\" ;\n    rdfs:comment \"A prion is an infectious agent composed of protein in a misfolded form.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PrognosisHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"PrognosisHealthAspect\" ;\n    rdfs:comment \"Typical progression and happenings of life course of the topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:Protozoa a schema:InfectiousAgentClass ;\n    rdfs:label \"Protozoa\" ;\n    rdfs:comment \"Single-celled organism that causes an infection.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Psychiatric a schema:MedicalSpecialty ;\n    rdfs:label \"Psychiatric\" ;\n    rdfs:comment \"A specific branch of medical science that is concerned with the study, treatment, and prevention of mental illness, using both medical and psychological therapies.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PublicHealth a schema:MedicalSpecialty ;\n    rdfs:label \"PublicHealth\" ;\n    rdfs:comment \"Branch of medicine that pertains to the health services to improve and protect community health, especially epidemiology, sanitation, immunization, and preventive medicine.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:PublicHolidays a schema:DayOfWeek ;\n    rdfs:label \"PublicHolidays\" ;\n    rdfs:comment \"This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a \\\\\"day of the week\\\\\", it can be used with [[OpeningHoursSpecification]]. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass> .\n\nschema:Pulmonary a schema:MedicalSpecialty ;\n    rdfs:label \"Pulmonary\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to the study of the respiratory system and its respective disease states.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Radiography a schema:MedicalImagingTechnique,\n        schema:MedicalSpecialty ;\n    rdfs:label \"Radiography\" ;\n    rdfs:comment \"Radiography is an imaging technique that uses electromagnetic radiation other than visible light, especially X-rays, to view the internal structure of a non-uniformly composed and opaque object such as the human body.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RandomizedTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"RandomizedTrial\" ;\n    rdfs:comment \"A randomized trial design.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ReadPermission a schema:DigitalDocumentPermissionType ;\n    rdfs:label \"ReadPermission\" ;\n    rdfs:comment \"Permission to read or view the document.\" .\n\nschema:RearWheelDriveConfiguration a schema:DriveWheelConfigurationValue ;\n    rdfs:label \"RearWheelDriveConfiguration\" ;\n    rdfs:comment \"Real-wheel drive is a transmission layout where the engine drives the rear wheels.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:Recruiting a schema:MedicalStudyStatus ;\n    rdfs:label \"Recruiting\" ;\n    rdfs:comment \"Recruiting participants.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RefurbishedCondition a schema:OfferItemCondition ;\n    rdfs:label \"RefurbishedCondition\" ;\n    rdfs:comment \"Indicates that the item is refurbished.\" .\n\nschema:Registry a schema:MedicalObservationalStudyDesign ;\n    rdfs:label \"Registry\" ;\n    rdfs:comment \"A registry-based study design.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ReimbursementCap a schema:DrugCostCategory ;\n    rdfs:label \"ReimbursementCap\" ;\n    rdfs:comment \"The drug's cost represents the maximum reimbursement paid by an insurer for the drug.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RelatedTopicsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"RelatedTopicsHealthAspect\" ;\n    rdfs:comment \"Other prominent or relevant topics tied to the main topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:RemixAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"RemixAlbum\" ;\n    rdfs:comment \"RemixAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:Renal a schema:MedicalSpecialty ;\n    rdfs:label \"Renal\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to the study of the kidneys and its respective disease states.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RentalVehicleUsage a schema:CarUsageType ;\n    rdfs:label \"RentalVehicleUsage\" ;\n    rdfs:comment \"Indicates the usage of the vehicle as a rental car.\" ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:ReservationCancelled a schema:ReservationStatusType ;\n    rdfs:label \"ReservationCancelled\" ;\n    rdfs:comment \"The status for a previously confirmed reservation that is now cancelled.\" .\n\nschema:ReservationConfirmed a schema:ReservationStatusType ;\n    rdfs:label \"ReservationConfirmed\" ;\n    rdfs:comment \"The status of a confirmed reservation.\" .\n\nschema:ReservationHold a schema:ReservationStatusType ;\n    rdfs:label \"ReservationHold\" ;\n    rdfs:comment \"The status of a reservation on hold pending an update like credit card number or flight changes.\" .\n\nschema:ReservationPending a schema:ReservationStatusType ;\n    rdfs:label \"ReservationPending\" ;\n    rdfs:comment \"The status of a reservation when a request has been sent, but not confirmed.\" .\n\nschema:RespiratoryTherapy a schema:MedicalSpecialty ;\n    rdfs:label \"RespiratoryTherapy\" ;\n    rdfs:comment \"The therapy that is concerned with the maintenance or improvement of respiratory function (as in patients with pulmonary disease).\" ;\n    rdfs:subClassOf schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RestockingFees a schema:ReturnFeesEnumeration ;\n    rdfs:label \"RestockingFees\" ;\n    rdfs:comment \"RestockingFees ...\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:ResultsAvailable a schema:MedicalStudyStatus ;\n    rdfs:label \"ResultsAvailable\" ;\n    rdfs:comment \"Results are available.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ResultsNotAvailable a schema:MedicalStudyStatus ;\n    rdfs:label \"ResultsNotAvailable\" ;\n    rdfs:comment \"Results are not available.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Retail a schema:DrugCostCategory ;\n    rdfs:label \"Retail\" ;\n    rdfs:comment \"The drug's cost represents the retail cost of the drug.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ReturnShippingFees a schema:ReturnFeesEnumeration ;\n    rdfs:label \"ReturnShippingFees\" ;\n    rdfs:comment \"ReturnShippingFees ...\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:Rheumatologic a schema:MedicalSpecialty ;\n    rdfs:label \"Rheumatologic\" ;\n    rdfs:comment \"A specific branch of medical science that deals with the study and treatment of rheumatic, autoimmune or joint diseases.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:RightHandDriving a schema:SteeringPositionValue ;\n    rdfs:label \"RightHandDriving\" ;\n    rdfs:comment \"The steering position is on the right side of the vehicle (viewed from the main direction of driving).\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:RisksOrComplicationsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"RisksOrComplicationsHealthAspect\" ;\n    rdfs:comment \"Information about the risk factors and possible complications that may follow a topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:RsvpResponseMaybe a schema:RsvpResponseType ;\n    rdfs:label \"RsvpResponseMaybe\" ;\n    rdfs:comment \"The invitee may or may not attend.\" .\n\nschema:RsvpResponseNo a schema:RsvpResponseType ;\n    rdfs:label \"RsvpResponseNo\" ;\n    rdfs:comment \"The invitee will not attend.\" .\n\nschema:RsvpResponseYes a schema:RsvpResponseType ;\n    rdfs:label \"RsvpResponseYes\" ;\n    rdfs:comment \"The invitee will attend.\" .\n\nschema:SRP a schema:PriceTypeEnumeration ;\n    rdfs:label \"SRP\" ;\n    rdfs:comment \"Represents the suggested retail price (\\\\\"SRP\\\\\") of an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2712> .\n\nschema:SafetyHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"SafetyHealthAspect\" ;\n    rdfs:comment \"Content about the safety-related aspects of a health topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2799> .\n\nschema:SalePrice a schema:PriceTypeEnumeration ;\n    rdfs:label \"SalePrice\" ;\n    rdfs:comment \"Represents a sale price (usually active for a limited period) of an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2712> .\n\nschema:SatireOrParodyContent a schema:MediaManipulationRatingEnumeration ;\n    rdfs:label \"SatireOrParodyContent\" ;\n    rdfs:comment \"\"\"Content coded 'satire or content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'satire or parody content': A video that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the â€œmissing contextâ€ rating.)\n\nFor an [[ImageObject]] to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the â€œmissing contextâ€ rating.)\n\nFor an [[ImageObject]] with embedded text to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the â€œmissing contextâ€ rating.)\n\nFor an [[AudioObject]] to be 'satire or parody content': Audio that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the â€œmissing contextâ€ rating.)\n\"\"\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:Saturday a schema:DayOfWeek ;\n    rdfs:label \"Saturday\" ;\n    rdfs:comment \"The day of the week between Friday and Sunday.\" ;\n    schema:sameAs <http://www.wikidata.org/entity/Q131> .\n\nschema:ScreeningHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"ScreeningHealthAspect\" ;\n    rdfs:comment \"Content about how to screen or further filter a topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:SeatingMap a schema:MapCategoryType ;\n    rdfs:label \"SeatingMap\" ;\n    rdfs:comment \"A seating map.\" .\n\nschema:SeeDoctorHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"SeeDoctorHealthAspect\" ;\n    rdfs:comment \"Information about questions that may be asked, when to see a professional, measures before seeing a doctor or content about the first consultation.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:SelfCareHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"SelfCareHealthAspect\" ;\n    rdfs:comment \"Self care actions or measures that can be taken to sooth, health or avoid a topic. This may be carried at home and can be carried/managed by the person itself.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:SideEffectsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"SideEffectsHealthAspect\" ;\n    rdfs:comment \"Side effects that can be observed from the usage of the topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:SingleBlindedTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"SingleBlindedTrial\" ;\n    rdfs:comment \"A trial design in which the researcher knows which treatment the patient was randomly assigned to but the patient does not.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SingleCenterTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"SingleCenterTrial\" ;\n    rdfs:comment \"A trial that takes place at a single center.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SinglePlayer a schema:GamePlayMode ;\n    rdfs:label \"SinglePlayer\" ;\n    rdfs:comment \"Play mode: SinglePlayer. Which is played by a lone player.\" .\n\nschema:SingleRelease a schema:MusicAlbumReleaseType ;\n    rdfs:label \"SingleRelease\" ;\n    rdfs:comment \"SingleRelease.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:SizeSystemImperial a schema:SizeSystemEnumeration ;\n    rdfs:label \"SizeSystemImperial\" ;\n    rdfs:comment \"Imperial size system.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:SizeSystemMetric a schema:SizeSystemEnumeration ;\n    rdfs:label \"SizeSystemMetric\" ;\n    rdfs:comment \"Metric size system.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:Skin a schema:PhysicalExam ;\n    rdfs:label \"Skin\" ;\n    rdfs:comment \"Skin assessment with clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SoldOut a schema:ItemAvailability ;\n    rdfs:label \"SoldOut\" ;\n    rdfs:comment \"Indicates that the item has sold out.\" .\n\nschema:SoundtrackAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"SoundtrackAlbum\" ;\n    rdfs:comment \"SoundtrackAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:SpeechPathology a schema:MedicalSpecialty ;\n    rdfs:label \"SpeechPathology\" ;\n    rdfs:comment \"The scientific study and treatment of defects, disorders, and malfunctions of speech and voice, as stuttering, lisping, or lalling, and of language disturbances, as aphasia or delayed language acquisition.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SpokenWordAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"SpokenWordAlbum\" ;\n    rdfs:comment \"SpokenWordAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:StagedContent a schema:MediaManipulationRatingEnumeration ;\n    rdfs:label \"StagedContent\" ;\n    rdfs:comment \"\"\"Content coded 'staged content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'staged content': A video that has been created using actors or similarly contrived.\n\nFor an [[ImageObject]] to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.\n\nFor an [[ImageObject]] with embedded text to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.\n\nFor an [[AudioObject]] to be 'staged content': Audio that has been created using actors or similarly contrived.\n\"\"\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:StagesHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"StagesHealthAspect\" ;\n    rdfs:comment \"Stages that can be observed from a topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:StoreCreditRefund a schema:RefundTypeEnumeration ;\n    rdfs:label \"StoreCreditRefund\" ;\n    rdfs:comment \"A StoreCreditRefund ...\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:StrengthTraining a schema:PhysicalActivityCategory ;\n    rdfs:label \"StrengthTraining\" ;\n    rdfs:comment \"Physical activity that is engaged in to improve muscle and bone strength. Also referred to as resistance training.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:StudioAlbum a schema:MusicAlbumProductionType ;\n    rdfs:label \"StudioAlbum\" ;\n    rdfs:comment \"StudioAlbum.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:Subscription a schema:PriceComponentTypeEnumeration ;\n    rdfs:label \"Subscription\" ;\n    rdfs:comment \"Represents the subscription pricing component of the total price for an offered product.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:Sunday a schema:DayOfWeek ;\n    rdfs:label \"Sunday\" ;\n    rdfs:comment \"The day of the week between Saturday and Monday.\" ;\n    schema:sameAs <http://www.wikidata.org/entity/Q132> .\n\nschema:Surgical a schema:MedicalSpecialty ;\n    rdfs:label \"Surgical\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to treating diseases, injuries and deformities by manual and instrumental means.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Suspended a schema:MedicalStudyStatus ;\n    rdfs:label \"Suspended\" ;\n    rdfs:comment \"Suspended.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:SymptomsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"SymptomsHealthAspect\" ;\n    rdfs:comment \"Symptoms or related symptoms of a Topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:TaxiVehicleUsage a schema:CarUsageType ;\n    rdfs:label \"TaxiVehicleUsage\" ;\n    rdfs:comment \"Indicates the usage of the car as a taxi.\" ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:Terminated a schema:MedicalStudyStatus ;\n    rdfs:label \"Terminated\" ;\n    rdfs:comment \"Terminated.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Therapeutic a schema:MedicalDevicePurpose ;\n    rdfs:label \"Therapeutic\" ;\n    rdfs:comment \"A medical device used for therapeutic purposes.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Throat a schema:PhysicalExam ;\n    rdfs:label \"Throat\" ;\n    rdfs:comment \"Throat assessment with  clinical examination.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Thursday a schema:DayOfWeek ;\n    rdfs:label \"Thursday\" ;\n    rdfs:comment \"The day of the week between Wednesday and Friday.\" ;\n    schema:sameAs <http://www.wikidata.org/entity/Q129> .\n\nschema:TollFree a schema:ContactPointOption ;\n    rdfs:label \"TollFree\" ;\n    rdfs:comment \"The associated telephone number is toll free.\" .\n\nschema:Toxicologic a schema:MedicalSpecialty ;\n    rdfs:label \"Toxicologic\" ;\n    rdfs:comment \"A specific branch of medical science that is concerned with poisons, their nature, effects and detection and involved in the treatment of poisoning.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:TraditionalChinese a schema:MedicineSystem ;\n    rdfs:label \"TraditionalChinese\" ;\n    rdfs:comment \"A system of medicine based on common theoretical concepts that originated in China and evolved over thousands of years, that uses herbs, acupuncture, exercise, massage, dietary therapy, and other methods to treat a wide range of conditions.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:TransformedContent a schema:MediaManipulationRatingEnumeration ;\n    rdfs:label \"TransformedContent\" ;\n    rdfs:comment \"\"\"Content coded 'transformed content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'transformed content':  or all of the video has been manipulated to transform the footage itself. This category includes using tools like the Adobe Suite to change the speed of the video, add or remove visual elements or dub audio. Deepfakes are also a subset of transformation.\n\nFor an [[ImageObject]] to be transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.\n\nFor an [[ImageObject]] with embedded text to be 'transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.\n\nFor an [[AudioObject]] to be 'transformed content': Part or all of the audio has been manipulated to alter the words or sounds, or the audio has been synthetically generated, such as to create a sound-alike voice.\n\"\"\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:TransitMap a schema:MapCategoryType ;\n    rdfs:label \"TransitMap\" ;\n    rdfs:comment \"A transit map.\" .\n\nschema:TreatmentsHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"TreatmentsHealthAspect\" ;\n    rdfs:comment \"Treatments or related therapies for a Topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:TripleBlindedTrial a schema:MedicalTrialDesign ;\n    rdfs:label \"TripleBlindedTrial\" ;\n    rdfs:comment \"A trial design in which neither the researcher, the person administering the therapy nor the patient knows the details of the treatment the patient was randomly assigned to.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:True a schema:Boolean ;\n    rdfs:label \"True\" ;\n    rdfs:comment \"The boolean value true.\" .\n\nschema:Tuesday a schema:DayOfWeek ;\n    rdfs:label \"Tuesday\" ;\n    rdfs:comment \"The day of the week between Monday and Wednesday.\" ;\n    schema:sameAs <http://www.wikidata.org/entity/Q127> .\n\nschema:TypesHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"TypesHealthAspect\" ;\n    rdfs:comment \"Categorization and other types related to a topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:UKTrust a schema:UKNonprofitType ;\n    rdfs:label \"UKTrust\" ;\n    rdfs:comment \"UKTrust: Non-profit type referring to a UK trust.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:Ultrasound a schema:MedicalImagingTechnique ;\n    rdfs:label \"Ultrasound\" ;\n    rdfs:comment \"Ultrasound imaging.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:UnemploymentSupport a schema:GovernmentBenefitsType ;\n    rdfs:label \"UnemploymentSupport\" ;\n    rdfs:comment \"UnemploymentSupport: this is a benefit for unemployment support.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:UnincorporatedAssociationCharity a schema:UKNonprofitType ;\n    rdfs:label \"UnincorporatedAssociationCharity\" ;\n    rdfs:comment \"UnincorporatedAssociationCharity: Non-profit type referring to a charitable company that is not incorporated (UK).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:UnofficialLegalValue a schema:LegalValueLevel ;\n    rdfs:label \"UnofficialLegalValue\" ;\n    rdfs:comment \"Indicates that a document has no particular or special standing (e.g. a republication of a law by a private publisher).\" ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#LegalValue-unofficial> ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:Urologic a schema:MedicalSpecialty ;\n    rdfs:label \"Urologic\" ;\n    rdfs:comment \"A specific branch of medical science that is concerned with the diagnosis and treatment of diseases pertaining to the urinary tract and the urogenital system.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:UsageOrScheduleHealthAspect a schema:HealthAspectEnumeration ;\n    rdfs:label \"UsageOrScheduleHealthAspect\" ;\n    rdfs:comment \"Content about how, when, frequency and dosage of a topic.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2374> .\n\nschema:UsedCondition a schema:OfferItemCondition ;\n    rdfs:label \"UsedCondition\" ;\n    rdfs:comment \"Indicates that the item is used.\" .\n\nschema:VeganDiet a schema:RestrictedDiet ;\n    rdfs:label \"VeganDiet\" ;\n    rdfs:comment \"A diet exclusive of all animal products.\" .\n\nschema:VegetarianDiet a schema:RestrictedDiet ;\n    rdfs:label \"VegetarianDiet\" ;\n    rdfs:comment \"A diet exclusive of animal meat.\" .\n\nschema:VenueMap a schema:MapCategoryType ;\n    rdfs:label \"VenueMap\" ;\n    rdfs:comment \"A venue map (e.g. for malls, auditoriums, museums, etc.).\" .\n\nschema:VinylFormat a schema:MusicReleaseFormatType ;\n    rdfs:label \"VinylFormat\" ;\n    rdfs:comment \"VinylFormat.\" ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:Virus a schema:InfectiousAgentClass ;\n    rdfs:label \"Virus\" ;\n    rdfs:comment \"Pathogenic virus that causes viral infection.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:WearableMeasurementBack a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementBack\" ;\n    rdfs:comment \"Measurement of the back section, for example of a jacket\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementChestOrBust a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementChestOrBust\" ;\n    rdfs:comment \"Measurement of the chest/bust section, for example of a suit\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementCollar a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementCollar\" ;\n    rdfs:comment \"Measurement of the collar, for example of a shirt\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementCup a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementCup\" ;\n    rdfs:comment \"Measurement of the cup, for example of a bra\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementHeight a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementHeight\" ;\n    rdfs:comment \"Measurement of the height, for example the heel height of a shoe\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementHips a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementHips\" ;\n    rdfs:comment \"Measurement of the hip section, for example of a skirt\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementInseam a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementInseam\" ;\n    rdfs:comment \"Measurement of the inseam, for example of pants\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementLength a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementLength\" ;\n    rdfs:comment \"Represents the length, for example of a dress\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementOutsideLeg a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementOutsideLeg\" ;\n    rdfs:comment \"Measurement of the outside leg, for example of pants\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementSleeve a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementSleeve\" ;\n    rdfs:comment \"Measurement of the sleeve length, for example of a shirt\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementWaist a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementWaist\" ;\n    rdfs:comment \"Measurement of the waist section, for example of pants\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableMeasurementWidth a schema:WearableMeasurementTypeEnumeration ;\n    rdfs:label \"WearableMeasurementWidth\" ;\n    rdfs:comment \"Measurement of the width, for example of shoes\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupBig a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupBig\" ;\n    rdfs:comment \"Size group \\\\\"Big\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupBoys a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupBoys\" ;\n    rdfs:comment \"Size group \\\\\"Boys\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupExtraShort a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupExtraShort\" ;\n    rdfs:comment \"Size group \\\\\"Extra Short\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupExtraTall a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupExtraTall\" ;\n    rdfs:comment \"Size group \\\\\"Extra Tall\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupGirls a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupGirls\" ;\n    rdfs:comment \"Size group \\\\\"Girls\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupHusky a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupHusky\" ;\n    rdfs:comment \"Size group \\\\\"Husky\\\\\" (or \\\\\"Stocky\\\\\") for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupInfants a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupInfants\" ;\n    rdfs:comment \"Size group \\\\\"Infants\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupJuniors a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupJuniors\" ;\n    rdfs:comment \"Size group \\\\\"Juniors\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupMaternity a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupMaternity\" ;\n    rdfs:comment \"Size group \\\\\"Maternity\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupMens a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupMens\" ;\n    rdfs:comment \"Size group \\\\\"Mens\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupMisses a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupMisses\" ;\n    rdfs:comment \"Size group \\\\\"Misses\\\\\" (also known as \\\\\"Missy\\\\\") for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupPetite a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupPetite\" ;\n    rdfs:comment \"Size group \\\\\"Petite\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupPlus a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupPlus\" ;\n    rdfs:comment \"Size group \\\\\"Plus\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupRegular a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupRegular\" ;\n    rdfs:comment \"Size group \\\\\"Regular\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupShort a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupShort\" ;\n    rdfs:comment \"Size group \\\\\"Short\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupTall a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupTall\" ;\n    rdfs:comment \"Size group \\\\\"Tall\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeGroupWomens a schema:WearableSizeGroupEnumeration ;\n    rdfs:label \"WearableSizeGroupWomens\" ;\n    rdfs:comment \"Size group \\\\\"Womens\\\\\" for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemAU a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemAU\" ;\n    rdfs:comment \"Australian size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemBR a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemBR\" ;\n    rdfs:comment \"Brazilian size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemCN a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemCN\" ;\n    rdfs:comment \"Chinese size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemContinental a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemContinental\" ;\n    rdfs:comment \"Continental size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemDE a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemDE\" ;\n    rdfs:comment \"German size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemEN13402 a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemEN13402\" ;\n    rdfs:comment \"EN 13402 (joint European standard for size labelling of clothes).\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemEurope a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemEurope\" ;\n    rdfs:comment \"European size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemFR a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemFR\" ;\n    rdfs:comment \"French size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemGS1 a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemGS1\" ;\n    rdfs:comment \"GS1 (formerly NRF) size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemIT a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemIT\" ;\n    rdfs:comment \"Italian size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemJP a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemJP\" ;\n    rdfs:comment \"Japanese size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemMX a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemMX\" ;\n    rdfs:comment \"Mexican size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemUK a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemUK\" ;\n    rdfs:comment \"United Kingdom size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:WearableSizeSystemUS a schema:WearableSizeSystemEnumeration ;\n    rdfs:label \"WearableSizeSystemUS\" ;\n    rdfs:comment \"United States size system for wearables.\" ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:Wednesday a schema:DayOfWeek ;\n    rdfs:label \"Wednesday\" ;\n    rdfs:comment \"The day of the week between Tuesday and Thursday.\" ;\n    schema:sameAs <http://www.wikidata.org/entity/Q128> .\n\nschema:WesternConventional a schema:MedicineSystem ;\n    rdfs:label \"WesternConventional\" ;\n    rdfs:comment \"The conventional Western system of medicine, that aims to apply the best available evidence gained from the scientific method to clinical decision making. Also known as conventional or Western medicine.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Wholesale a schema:DrugCostCategory ;\n    rdfs:label \"Wholesale\" ;\n    rdfs:comment \"The drug's cost represents the wholesale acquisition cost of the drug.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:Withdrawn a schema:MedicalStudyStatus ;\n    rdfs:label \"Withdrawn\" ;\n    rdfs:comment \"Withdrawn.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:WritePermission a schema:DigitalDocumentPermissionType ;\n    rdfs:label \"WritePermission\" ;\n    rdfs:comment \"Permission to write or edit the document.\" .\n\nschema:XRay a schema:MedicalImagingTechnique ;\n    rdfs:label \"XRay\" ;\n    rdfs:comment \"X-ray imaging.\" ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:ZoneBoardingPolicy a schema:BoardingPolicyType ;\n    rdfs:label \"ZoneBoardingPolicy\" ;\n    rdfs:comment \"The airline boards by zones of the plane.\" .\n\nschema:abridged a rdf:Property ;\n    rdfs:label \"abridged\" ;\n    rdfs:comment \"Indicates whether the book is an abridged edition.\" ;\n    schema:domainIncludes schema:Book ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:abstract a rdf:Property ;\n    rdfs:label \"abstract\" ;\n    rdfs:comment \"An abstract is a short description that summarizes a [[CreativeWork]].\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/276> .\n\nschema:accelerationTime a rdf:Property ;\n    rdfs:label \"accelerationTime\" ;\n    rdfs:comment \"The time needed to accelerate the vehicle from a given start velocity to a given target velocity.\\\\n\\\\nTypical unit code(s): SEC for seconds\\\\n\\\\n* Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use \\\\\"SEC\\\\\" for seconds and indicate the velocities in the [[name]] of the [[QuantitativeValue]], or use [[valueReference]] with a [[QuantitativeValue]] of 0..60 mph or 0..100 km/h to specify the reference speeds.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:acceptedAnswer a rdf:Property ;\n    rdfs:label \"acceptedAnswer\" ;\n    rdfs:comment \"The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.\" ;\n    rdfs:subPropertyOf schema:suggestedAnswer ;\n    schema:domainIncludes schema:Question ;\n    schema:rangeIncludes schema:Answer,\n        schema:ItemList .\n\nschema:acceptedOffer a rdf:Property ;\n    rdfs:label \"acceptedOffer\" ;\n    rdfs:comment \"The offer(s) -- e.g., product, quantity and price combinations -- included in the order.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Offer .\n\nschema:acceptedPaymentMethod a rdf:Property ;\n    rdfs:label \"acceptedPaymentMethod\" ;\n    rdfs:comment \"The payment method(s) accepted by seller for this offer.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:LoanOrCredit,\n        schema:PaymentMethod ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:acceptsReservations a rdf:Property ;\n    rdfs:label \"acceptsReservations\" ;\n    rdfs:comment \"Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings \\`\\`\\`Yes\\`\\`\\` or \\`\\`\\`No\\`\\`\\`.\" ;\n    schema:domainIncludes schema:FoodEstablishment ;\n    schema:rangeIncludes schema:Boolean,\n        schema:Text,\n        schema:URL .\n\nschema:accessCode a rdf:Property ;\n    rdfs:label \"accessCode\" ;\n    rdfs:comment \"Password, PIN, or access code needed for delivery (e.g. from a locker).\" ;\n    schema:domainIncludes schema:DeliveryEvent ;\n    schema:rangeIncludes schema:Text .\n\nschema:accessMode a rdf:Property ;\n    rdfs:label \"accessMode\" ;\n    rdfs:comment \"\"\"The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.\n      \"\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1100> .\n\nschema:accessModeSufficient a rdf:Property ;\n    rdfs:label \"accessModeSufficient\" ;\n    rdfs:comment \"\"\"A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.\n      \"\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:ItemList ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1100> .\n\nschema:accessibilityAPI a rdf:Property ;\n    rdfs:label \"accessibilityAPI\" ;\n    rdfs:comment \"Indicates that the resource is compatible with the referenced accessibility API ([WebSchemas wiki lists possible values](http://www.w3.org/wiki/WebSchemas/Accessibility)).\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:accessibilityControl a rdf:Property ;\n    rdfs:label \"accessibilityControl\" ;\n    rdfs:comment \"Identifies input methods that are sufficient to fully control the described resource ([WebSchemas wiki lists possible values](http://www.w3.org/wiki/WebSchemas/Accessibility)).\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:accessibilityFeature a rdf:Property ;\n    rdfs:label \"accessibilityFeature\" ;\n    rdfs:comment \"Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility ([WebSchemas wiki lists possible values](http://www.w3.org/wiki/WebSchemas/Accessibility)).\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:accessibilityHazard a rdf:Property ;\n    rdfs:label \"accessibilityHazard\" ;\n    rdfs:comment \"A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 ([WebSchemas wiki lists possible values](http://www.w3.org/wiki/WebSchemas/Accessibility)).\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:accessibilitySummary a rdf:Property ;\n    rdfs:label \"accessibilitySummary\" ;\n    rdfs:comment \"A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \\\\\"short descriptions are present but long descriptions will be needed for non-visual users\\\\\" or \\\\\"short descriptions are present and no long descriptions are needed.\\\\\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1100> .\n\nschema:accommodationCategory a rdf:Property ;\n    rdfs:label \"accommodationCategory\" ;\n    rdfs:comment \"Category of an [[Accommodation]], following real estate conventions e.g. RESO (see [PropertySubType](https://ddwiki.reso.org/display/DDW17/PropertySubType+Field), and [PropertyType](https://ddwiki.reso.org/display/DDW17/PropertyType+Field) fields  for suggested values).\" ;\n    rdfs:subPropertyOf schema:category ;\n    schema:domainIncludes schema:Accommodation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:accommodationFloorPlan a rdf:Property ;\n    rdfs:label \"accommodationFloorPlan\" ;\n    rdfs:comment \"A floorplan of some [[Accommodation]].\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:Residence ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:FloorPlan ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:accountId a rdf:Property ;\n    rdfs:label \"accountId\" ;\n    rdfs:comment \"The identifier for the account the payment will be applied to.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Invoice ;\n    schema:rangeIncludes schema:Text .\n\nschema:accountMinimumInflow a rdf:Property ;\n    rdfs:label \"accountMinimumInflow\" ;\n    rdfs:comment \"A minimum amount that has to be paid in every month.\" ;\n    schema:domainIncludes schema:BankAccount ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:accountOverdraftLimit a rdf:Property ;\n    rdfs:label \"accountOverdraftLimit\" ;\n    rdfs:comment \"An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.\" ;\n    schema:domainIncludes schema:BankAccount ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:accountablePerson a rdf:Property ;\n    rdfs:label \"accountablePerson\" ;\n    rdfs:comment \"Specifies the Person that is legally accountable for the CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Person .\n\nschema:acquireLicensePage a rdf:Property ;\n    rdfs:label \"acquireLicensePage\" ;\n    rdfs:comment \"Indicates a page documenting how licenses can be purchased or otherwise acquired, for the current item.\" ;\n    rdfs:subPropertyOf schema:usageInfo ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2454> .\n\nschema:acquiredFrom a rdf:Property ;\n    rdfs:label \"acquiredFrom\" ;\n    rdfs:comment \"The organization or person from which the product was acquired.\" ;\n    schema:domainIncludes schema:OwnershipInfo ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:acrissCode a rdf:Property ;\n    rdfs:label \"acrissCode\" ;\n    rdfs:comment \"The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.\" ;\n    schema:domainIncludes schema:BusOrCoach,\n        schema:Car ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:actionAccessibilityRequirement a rdf:Property ;\n    rdfs:label \"actionAccessibilityRequirement\" ;\n    rdfs:comment \"A set of requirements that a must be fulfilled in order to perform an Action. If more than one value is specied, fulfilling one set of requirements will allow the Action to be performed.\" ;\n    schema:domainIncludes schema:ConsumeAction ;\n    schema:rangeIncludes schema:ActionAccessSpecification ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:actionPlatform a rdf:Property ;\n    rdfs:label \"actionPlatform\" ;\n    rdfs:comment \"The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.\" ;\n    schema:domainIncludes schema:EntryPoint ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:actionStatus a rdf:Property ;\n    rdfs:label \"actionStatus\" ;\n    rdfs:comment \"Indicates the current disposition of the Action.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:ActionStatusType .\n\nschema:actionableFeedbackPolicy a rdf:Property ;\n    rdfs:label \"actionableFeedbackPolicy\" ;\n    rdfs:comment \"For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroomâ€™s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization,\n        schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:activeIngredient a rdf:Property ;\n    rdfs:label \"activeIngredient\" ;\n    rdfs:comment \"An active ingredient, typically chemical compounds and/or biologic substances.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug,\n        schema:DrugStrength,\n        schema:Substance ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:activityDuration a rdf:Property ;\n    rdfs:label \"activityDuration\" ;\n    rdfs:comment \"Length of time to engage in the activity.\" ;\n    schema:domainIncludes schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Duration,\n        schema:QuantitativeValue .\n\nschema:activityFrequency a rdf:Property ;\n    rdfs:label \"activityFrequency\" ;\n    rdfs:comment \"How often one should engage in the activity.\" ;\n    schema:domainIncludes schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue,\n        schema:Text .\n\nschema:actors a rdf:Property ;\n    rdfs:label \"actors\" ;\n    rdfs:comment \"An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.\" ;\n    schema:domainIncludes schema:Clip,\n        schema:Episode,\n        schema:Movie,\n        schema:MovieSeries,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGame,\n        schema:VideoGameSeries,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:actor .\n\nschema:addOn a rdf:Property ;\n    rdfs:label \"addOn\" ;\n    rdfs:comment \"An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).\" ;\n    schema:domainIncludes schema:Offer ;\n    schema:rangeIncludes schema:Offer ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:additionalName a rdf:Property ;\n    rdfs:label \"additionalName\" ;\n    rdfs:comment \"An additional name for a Person, can be used for a middle name.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Text .\n\nschema:additionalNumberOfGuests a rdf:Property ;\n    rdfs:label \"additionalNumberOfGuests\" ;\n    rdfs:comment \"If responding yes, the number of guests who will attend in addition to the invitee.\" ;\n    schema:domainIncludes schema:RsvpAction ;\n    schema:rangeIncludes schema:Number .\n\nschema:additionalProperty a rdf:Property ;\n    rdfs:label \"additionalProperty\" ;\n    rdfs:comment \"\"\"A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\\\\n\\\\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. https://schema.org/width, https://schema.org/color, https://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n\"\"\" ;\n    schema:domainIncludes schema:Place,\n        schema:Product,\n        schema:QualitativeValue,\n        schema:QuantitativeValue ;\n    schema:rangeIncludes schema:PropertyValue .\n\nschema:additionalType a rdf:Property ;\n    rdfs:label \"additionalType\" ;\n    rdfs:comment \"An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.\" ;\n    rdfs:subPropertyOf rdf:type ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:URL .\n\nschema:additionalVariable a rdf:Property ;\n    rdfs:label \"additionalVariable\" ;\n    rdfs:comment \"Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.\" ;\n    schema:domainIncludes schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:address a rdf:Property ;\n    rdfs:label \"address\" ;\n    rdfs:comment \"Physical address of the item.\" ;\n    schema:domainIncludes schema:GeoCoordinates,\n        schema:GeoShape,\n        schema:Organization,\n        schema:Person,\n        schema:Place ;\n    schema:rangeIncludes schema:PostalAddress,\n        schema:Text .\n\nschema:addressCountry a rdf:Property ;\n    rdfs:label \"addressCountry\" ;\n    rdfs:comment \"The country. For example, USA. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1).\" ;\n    schema:domainIncludes schema:DefinedRegion,\n        schema:GeoCoordinates,\n        schema:GeoShape,\n        schema:PostalAddress ;\n    schema:rangeIncludes schema:Country,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:addressLocality a rdf:Property ;\n    rdfs:label \"addressLocality\" ;\n    rdfs:comment \"The locality in which the street address is, and which is in the region. For example, Mountain View.\" ;\n    schema:domainIncludes schema:PostalAddress ;\n    schema:rangeIncludes schema:Text .\n\nschema:addressRegion a rdf:Property ;\n    rdfs:label \"addressRegion\" ;\n    rdfs:comment \"The region in which the locality is, and which is in the country. For example, California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country) \" ;\n    schema:domainIncludes schema:DefinedRegion,\n        schema:PostalAddress ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:administrationRoute a rdf:Property ;\n    rdfs:label \"administrationRoute\" ;\n    rdfs:comment \"A route by which this drug may be administered, e.g. 'oral'.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:advanceBookingRequirement a rdf:Property ;\n    rdfs:label \"advanceBookingRequirement\" ;\n    rdfs:comment \"The amount of time that is required between accepting the offer and the actual usage of the resource or service.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:adverseOutcome a rdf:Property ;\n    rdfs:label \"adverseOutcome\" ;\n    rdfs:comment \"A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or is otherwise life-threatening or requires immediate medical attention), tag it as a seriouseAdverseOutcome instead.\" ;\n    schema:domainIncludes schema:MedicalDevice,\n        schema:TherapeuticProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity .\n\nschema:affectedBy a rdf:Property ;\n    rdfs:label \"affectedBy\" ;\n    rdfs:comment \"Drugs that affect the test's results.\" ;\n    schema:domainIncludes schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Drug .\n\nschema:affiliation a rdf:Property ;\n    rdfs:label \"affiliation\" ;\n    rdfs:comment \"An organization that this person is affiliated with. For example, a school/university, a club, or a team.\" ;\n    rdfs:subPropertyOf schema:memberOf ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Organization .\n\nschema:afterMedia a rdf:Property ;\n    rdfs:label \"afterMedia\" ;\n    rdfs:comment \"A media object representing the circumstances after performing this direction.\" ;\n    schema:domainIncludes schema:HowToDirection ;\n    schema:rangeIncludes schema:MediaObject,\n        schema:URL .\n\nschema:agent a rdf:Property ;\n    rdfs:label \"agent\" ;\n    rdfs:comment \"The direct performer or driver of the action (animate or inanimate). e.g. *John* wrote a book.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:aggregateRating a rdf:Property ;\n    rdfs:label \"aggregateRating\" ;\n    rdfs:comment \"The overall rating, based on a collection of reviews or ratings, of the item.\" ;\n    schema:domainIncludes schema:Brand,\n        schema:CreativeWork,\n        schema:Event,\n        schema:Offer,\n        schema:Organization,\n        schema:Place,\n        schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:AggregateRating .\n\nschema:aircraft a rdf:Property ;\n    rdfs:label \"aircraft\" ;\n    rdfs:comment \"The kind of aircraft (e.g., \\\\\"Boeing 747\\\\\").\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Text,\n        schema:Vehicle .\n\nschema:albumProductionType a rdf:Property ;\n    rdfs:label \"albumProductionType\" ;\n    rdfs:comment \"Classification of the album by it's type of content: soundtrack, live album, studio album, etc.\" ;\n    schema:domainIncludes schema:MusicAlbum ;\n    schema:rangeIncludes schema:MusicAlbumProductionType ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:albumReleaseType a rdf:Property ;\n    rdfs:label \"albumReleaseType\" ;\n    rdfs:comment \"The kind of release which this album is: single, EP or album.\" ;\n    schema:domainIncludes schema:MusicAlbum ;\n    schema:rangeIncludes schema:MusicAlbumReleaseType ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:albums a rdf:Property ;\n    rdfs:label \"albums\" ;\n    rdfs:comment \"A collection of music albums.\" ;\n    schema:domainIncludes schema:MusicGroup ;\n    schema:rangeIncludes schema:MusicAlbum ;\n    schema:supersededBy schema:album .\n\nschema:alcoholWarning a rdf:Property ;\n    rdfs:label \"alcoholWarning\" ;\n    rdfs:comment \"Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:algorithm a rdf:Property ;\n    rdfs:label \"algorithm\" ;\n    rdfs:comment \"The algorithm or rules to follow to compute the score.\" ;\n    schema:domainIncludes schema:MedicalRiskScore ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:alignmentType a rdf:Property ;\n    rdfs:label \"alignmentType\" ;\n    rdfs:comment \"A category of alignment between the learning resource and the framework node. Recommended values include: 'requires', 'textComplexity', 'readingLevel', and 'educationalSubject'.\" ;\n    schema:domainIncludes schema:AlignmentObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:alternateName a rdf:Property ;\n    rdfs:label \"alternateName\" ;\n    rdfs:comment \"An alias for the item.\" ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:Text .\n\nschema:alternativeHeadline a rdf:Property ;\n    rdfs:label \"alternativeHeadline\" ;\n    rdfs:comment \"A secondary title of the CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:amenityFeature a rdf:Property ;\n    rdfs:label \"amenityFeature\" ;\n    rdfs:comment \"An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:FloorPlan,\n        schema:LodgingBusiness,\n        schema:Place ;\n    schema:rangeIncludes schema:LocationFeatureSpecification ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:amount a rdf:Property ;\n    rdfs:label \"amount\" ;\n    rdfs:comment \"The amount of money.\" ;\n    schema:domainIncludes schema:DatedMoneySpecification,\n        schema:InvestmentOrDeposit,\n        schema:LoanOrCredit,\n        schema:MonetaryGrant,\n        schema:MoneyTransfer ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1253>,\n        <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:amountOfThisGood a rdf:Property ;\n    rdfs:label \"amountOfThisGood\" ;\n    rdfs:comment \"The quantity of the goods included in the offer.\" ;\n    schema:domainIncludes schema:TypeAndQuantityNode ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:announcementLocation a rdf:Property ;\n    rdfs:label \"announcementLocation\" ;\n    rdfs:comment \"Indicates a specific [[CivicStructure]] or [[LocalBusiness]] associated with the SpecialAnnouncement. For example, a specific testing facility or business with special opening hours. For a larger geographic region like a quarantine of an entire region, use [[spatialCoverage]].\" ;\n    rdfs:subPropertyOf schema:spatialCoverage ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CivicStructure,\n        schema:LocalBusiness ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2514> .\n\nschema:annualPercentageRate a rdf:Property ;\n    rdfs:label \"annualPercentageRate\" ;\n    rdfs:comment \"The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.\" ;\n    schema:domainIncludes schema:FinancialProduct ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:answerCount a rdf:Property ;\n    rdfs:label \"answerCount\" ;\n    rdfs:comment \"The number of answers this question has received.\" ;\n    schema:domainIncludes schema:Question ;\n    schema:rangeIncludes schema:Integer .\n\nschema:answerExplanation a rdf:Property ;\n    rdfs:label \"answerExplanation\" ;\n    rdfs:comment \"A step-by-step or full explanation about Answer. Can outline how this Answer was achieved or contain more broad clarification or statement about it. \" ;\n    schema:domainIncludes schema:Answer ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Comment,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2636> .\n\nschema:antagonist a rdf:Property ;\n    rdfs:label \"antagonist\" ;\n    rdfs:comment \"The muscle whose action counteracts the specified muscle.\" ;\n    schema:domainIncludes schema:Muscle ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Muscle .\n\nschema:appearance a rdf:Property ;\n    rdfs:label \"appearance\" ;\n    rdfs:comment \"Indicates an occurence of a [[Claim]] in some [[CreativeWork]].\" ;\n    rdfs:subPropertyOf schema:workExample ;\n    schema:domainIncludes schema:Claim ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1828> .\n\nschema:applicableLocation a rdf:Property ;\n    rdfs:label \"applicableLocation\" ;\n    rdfs:comment \"The location in which the status applies.\" ;\n    schema:domainIncludes schema:DrugCost,\n        schema:DrugLegalStatus ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AdministrativeArea .\n\nschema:applicantLocationRequirements a rdf:Property ;\n    rdfs:label \"applicantLocationRequirements\" ;\n    rdfs:comment \"The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:AdministrativeArea ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2083> .\n\nschema:application a rdf:Property ;\n    rdfs:label \"application\" ;\n    rdfs:comment \"An application that can complete the request.\" ;\n    schema:domainIncludes schema:EntryPoint ;\n    schema:rangeIncludes schema:SoftwareApplication ;\n    schema:supersededBy schema:actionApplication .\n\nschema:applicationCategory a rdf:Property ;\n    rdfs:label \"applicationCategory\" ;\n    rdfs:comment \"Type of software application, e.g. 'Game, Multimedia'.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:applicationContact a rdf:Property ;\n    rdfs:label \"applicationContact\" ;\n    rdfs:comment \"Contact details for further information relevant to this job posting.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:ContactPoint ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2396> .\n\nschema:applicationDeadline a rdf:Property ;\n    rdfs:label \"applicationDeadline\" ;\n    rdfs:comment \"The date at which the program stops collecting applications for the next enrollment cycle.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:applicationStartDate a rdf:Property ;\n    rdfs:label \"applicationStartDate\" ;\n    rdfs:comment \"The date at which the program begins collecting applications for the next enrollment cycle.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:applicationSubCategory a rdf:Property ;\n    rdfs:label \"applicationSubCategory\" ;\n    rdfs:comment \"Subcategory of the application, e.g. 'Arcade Game'.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:applicationSuite a rdf:Property ;\n    rdfs:label \"applicationSuite\" ;\n    rdfs:comment \"The name of the application suite to which the application belongs (e.g. Excel belongs to Office).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:appliesToDeliveryMethod a rdf:Property ;\n    rdfs:label \"appliesToDeliveryMethod\" ;\n    rdfs:comment \"The delivery method(s) to which the delivery charge or payment charge specification applies.\" ;\n    schema:domainIncludes schema:DeliveryChargeSpecification,\n        schema:PaymentChargeSpecification ;\n    schema:rangeIncludes schema:DeliveryMethod ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:appliesToPaymentMethod a rdf:Property ;\n    rdfs:label \"appliesToPaymentMethod\" ;\n    rdfs:comment \"The payment method(s) to which the payment charge specification applies.\" ;\n    schema:domainIncludes schema:PaymentChargeSpecification ;\n    schema:rangeIncludes schema:PaymentMethod ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:area a rdf:Property ;\n    rdfs:label \"area\" ;\n    rdfs:comment \"The area within which users can expect to reach the broadcast service.\" ;\n    schema:domainIncludes schema:BroadcastService ;\n    schema:rangeIncludes schema:Place ;\n    schema:supersededBy schema:serviceArea .\n\nschema:arrivalAirport a rdf:Property ;\n    rdfs:label \"arrivalAirport\" ;\n    rdfs:comment \"The airport where the flight terminates.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Airport .\n\nschema:arrivalBoatTerminal a rdf:Property ;\n    rdfs:label \"arrivalBoatTerminal\" ;\n    rdfs:comment \"The terminal or port from which the boat arrives.\" ;\n    schema:domainIncludes schema:BoatTrip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:BoatTerminal ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1755> .\n\nschema:arrivalBusStop a rdf:Property ;\n    rdfs:label \"arrivalBusStop\" ;\n    rdfs:comment \"The stop or station from which the bus arrives.\" ;\n    schema:domainIncludes schema:BusTrip ;\n    schema:rangeIncludes schema:BusStation,\n        schema:BusStop .\n\nschema:arrivalGate a rdf:Property ;\n    rdfs:label \"arrivalGate\" ;\n    rdfs:comment \"Identifier of the flight's arrival gate.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Text .\n\nschema:arrivalPlatform a rdf:Property ;\n    rdfs:label \"arrivalPlatform\" ;\n    rdfs:comment \"The platform where the train arrives.\" ;\n    schema:domainIncludes schema:TrainTrip ;\n    schema:rangeIncludes schema:Text .\n\nschema:arrivalStation a rdf:Property ;\n    rdfs:label \"arrivalStation\" ;\n    rdfs:comment \"The station where the train trip ends.\" ;\n    schema:domainIncludes schema:TrainTrip ;\n    schema:rangeIncludes schema:TrainStation .\n\nschema:arrivalTerminal a rdf:Property ;\n    rdfs:label \"arrivalTerminal\" ;\n    rdfs:comment \"Identifier of the flight's arrival terminal.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Text .\n\nschema:arrivalTime a rdf:Property ;\n    rdfs:label \"arrivalTime\" ;\n    rdfs:comment \"The expected arrival time.\" ;\n    schema:domainIncludes schema:Trip ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Time .\n\nschema:artEdition a rdf:Property ;\n    rdfs:label \"artEdition\" ;\n    rdfs:comment \"The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example \\\\\"20\\\\\").\" ;\n    schema:domainIncludes schema:VisualArtwork ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text .\n\nschema:artMedium a rdf:Property ;\n    rdfs:label \"artMedium\" ;\n    rdfs:comment \"The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)\" ;\n    rdfs:subPropertyOf schema:material ;\n    schema:domainIncludes schema:VisualArtwork ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:artform a rdf:Property ;\n    rdfs:label \"artform\" ;\n    rdfs:comment \"e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.\" ;\n    schema:domainIncludes schema:VisualArtwork ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:articleBody a rdf:Property ;\n    rdfs:label \"articleBody\" ;\n    rdfs:comment \"The actual body of the article.\" ;\n    schema:domainIncludes schema:Article ;\n    schema:rangeIncludes schema:Text .\n\nschema:articleSection a rdf:Property ;\n    rdfs:label \"articleSection\" ;\n    rdfs:comment \"Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.\" ;\n    schema:domainIncludes schema:Article ;\n    schema:rangeIncludes schema:Text .\n\nschema:artist a rdf:Property ;\n    rdfs:label \"artist\" ;\n    rdfs:comment \"\"\"The primary artist for a work\n    \tin a medium other than pencils or digital line art--for example, if the\n    \tprimary artwork is done in watercolors or digital paints.\"\"\" ;\n    schema:domainIncludes schema:ComicIssue,\n        schema:ComicStory,\n        schema:VisualArtwork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Person .\n\nschema:aspect a rdf:Property ;\n    rdfs:label \"aspect\" ;\n    rdfs:comment \"An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.\" ;\n    schema:domainIncludes schema:MedicalWebPage ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:mainContentOfPage .\n\nschema:assembly a rdf:Property ;\n    rdfs:label \"assembly\" ;\n    rdfs:comment \"Library file name e.g., mscorlib.dll, system.web.dll.\" ;\n    schema:domainIncludes schema:APIReference ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:executableLibraryName .\n\nschema:assemblyVersion a rdf:Property ;\n    rdfs:label \"assemblyVersion\" ;\n    rdfs:comment \"Associated product/technology version. e.g., .NET Framework 4.5.\" ;\n    schema:domainIncludes schema:APIReference ;\n    schema:rangeIncludes schema:Text .\n\nschema:assesses a rdf:Property ;\n    rdfs:label \"assesses\" ;\n    rdfs:comment \"The item being described is intended to assess the competency or learning outcome defined by the referenced term.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:EducationEvent,\n        schema:LearningResource ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2427> .\n\nschema:associatedAnatomy a rdf:Property ;\n    rdfs:label \"associatedAnatomy\" ;\n    rdfs:comment \"The anatomy of the underlying organ system or structures associated with this entity.\" ;\n    schema:domainIncludes schema:MedicalCondition,\n        schema:PhysicalActivity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure,\n        schema:AnatomicalSystem,\n        schema:SuperficialAnatomy .\n\nschema:associatedArticle a rdf:Property ;\n    rdfs:label \"associatedArticle\" ;\n    rdfs:comment \"A NewsArticle associated with the Media Object.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:NewsArticle .\n\nschema:associatedMedia a rdf:Property ;\n    rdfs:label \"associatedMedia\" ;\n    rdfs:comment \"A media object that encodes this CreativeWork. This property is a synonym for encoding.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:HyperToc,\n        schema:HyperTocEntry ;\n    schema:rangeIncludes schema:MediaObject .\n\nschema:associatedPathophysiology a rdf:Property ;\n    rdfs:label \"associatedPathophysiology\" ;\n    rdfs:comment \"If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.\" ;\n    schema:domainIncludes schema:AnatomicalStructure,\n        schema:AnatomicalSystem,\n        schema:SuperficialAnatomy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:athlete a rdf:Property ;\n    rdfs:label \"athlete\" ;\n    rdfs:comment \"A person that acts as performing member of a sports team; a player as opposed to a coach.\" ;\n    schema:domainIncludes schema:SportsTeam ;\n    schema:rangeIncludes schema:Person .\n\nschema:attendees a rdf:Property ;\n    rdfs:label \"attendees\" ;\n    rdfs:comment \"A person attending the event.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:supersededBy schema:attendee .\n\nschema:audienceType a rdf:Property ;\n    rdfs:label \"audienceType\" ;\n    rdfs:comment \"The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).\" ;\n    schema:domainIncludes schema:Audience ;\n    schema:rangeIncludes schema:Text .\n\nschema:audio a rdf:Property ;\n    rdfs:label \"audio\" ;\n    rdfs:comment \"An embedded audio object.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:AudioObject,\n        schema:Clip,\n        schema:MusicRecording ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2420> .\n\nschema:authenticator a rdf:Property ;\n    rdfs:label \"authenticator\" ;\n    rdfs:comment \"The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.\" ;\n    schema:domainIncludes schema:MediaSubscription ;\n    schema:rangeIncludes schema:Organization ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:author a rdf:Property ;\n    rdfs:label \"author\" ;\n    rdfs:comment \"The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Rating ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:availability a rdf:Property ;\n    rdfs:label \"availability\" ;\n    rdfs:comment \"The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:ItemAvailability .\n\nschema:availabilityEnds a rdf:Property ;\n    rdfs:label \"availabilityEnds\" ;\n    rdfs:comment \"The end of the availability of the product or service included in the offer.\" ;\n    schema:domainIncludes schema:ActionAccessSpecification,\n        schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime,\n        schema:Time ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms>,\n        <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:availabilityStarts a rdf:Property ;\n    rdfs:label \"availabilityStarts\" ;\n    rdfs:comment \"The beginning of the availability of the product or service included in the offer.\" ;\n    schema:domainIncludes schema:ActionAccessSpecification,\n        schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime,\n        schema:Time ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms>,\n        <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:availableAtOrFrom a rdf:Property ;\n    rdfs:label \"availableAtOrFrom\" ;\n    rdfs:comment \"The place(s) from which the offer can be obtained (e.g. store locations).\" ;\n    rdfs:subPropertyOf schema:areaServed ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:Place ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:availableChannel a rdf:Property ;\n    rdfs:label \"availableChannel\" ;\n    rdfs:comment \"A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).\" ;\n    schema:domainIncludes schema:Service ;\n    schema:rangeIncludes schema:ServiceChannel .\n\nschema:availableDeliveryMethod a rdf:Property ;\n    rdfs:label \"availableDeliveryMethod\" ;\n    rdfs:comment \"The delivery method(s) available for this offer.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:DeliveryMethod ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:availableFrom a rdf:Property ;\n    rdfs:label \"availableFrom\" ;\n    rdfs:comment \"When the item is available for pickup from the store, locker, etc.\" ;\n    schema:domainIncludes schema:DeliveryEvent ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:availableIn a rdf:Property ;\n    rdfs:label \"availableIn\" ;\n    rdfs:comment \"The location in which the strength is available.\" ;\n    schema:domainIncludes schema:DrugStrength ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AdministrativeArea .\n\nschema:availableLanguage a rdf:Property ;\n    rdfs:label \"availableLanguage\" ;\n    rdfs:comment \"A language someone may use with or at the item, service or place. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[inLanguage]]\" ;\n    schema:domainIncludes schema:ContactPoint,\n        schema:LodgingBusiness,\n        schema:ServiceChannel,\n        schema:TouristAttraction ;\n    schema:rangeIncludes schema:Language,\n        schema:Text .\n\nschema:availableService a rdf:Property ;\n    rdfs:label \"availableService\" ;\n    rdfs:comment \"A medical service available from this provider.\" ;\n    schema:domainIncludes schema:Hospital,\n        schema:MedicalClinic,\n        schema:Physician ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalProcedure,\n        schema:MedicalTest,\n        schema:MedicalTherapy .\n\nschema:availableStrength a rdf:Property ;\n    rdfs:label \"availableStrength\" ;\n    rdfs:comment \"An available dosage strength for the drug.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DrugStrength .\n\nschema:availableTest a rdf:Property ;\n    rdfs:label \"availableTest\" ;\n    rdfs:comment \"A diagnostic test or procedure offered by this lab.\" ;\n    schema:domainIncludes schema:DiagnosticLab ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTest .\n\nschema:availableThrough a rdf:Property ;\n    rdfs:label \"availableThrough\" ;\n    rdfs:comment \"After this date, the item will no longer be available for pickup.\" ;\n    schema:domainIncludes schema:DeliveryEvent ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:awards a rdf:Property ;\n    rdfs:label \"awards\" ;\n    rdfs:comment \"Awards won by or for this item.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Organization,\n        schema:Person,\n        schema:Product ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:award .\n\nschema:awayTeam a rdf:Property ;\n    rdfs:label \"awayTeam\" ;\n    rdfs:comment \"The away team in a sports event.\" ;\n    rdfs:subPropertyOf schema:competitor ;\n    schema:domainIncludes schema:SportsEvent ;\n    schema:rangeIncludes schema:Person,\n        schema:SportsTeam .\n\nschema:backstory a rdf:Property ;\n    rdfs:label \"backstory\" ;\n    rdfs:comment \"For an [[Article]], typically a [[NewsArticle]], the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.\" ;\n    schema:domainIncludes schema:Article ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1688>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:bankAccountType a rdf:Property ;\n    rdfs:label \"bankAccountType\" ;\n    rdfs:comment \"The type of a bank account.\" ;\n    schema:domainIncludes schema:BankAccount ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:baseSalary a rdf:Property ;\n    rdfs:label \"baseSalary\" ;\n    rdfs:comment \"The base salary of the job or of an employee in an EmployeeRole.\" ;\n    schema:domainIncludes schema:EmployeeRole,\n        schema:JobPosting ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:Number,\n        schema:PriceSpecification .\n\nschema:bccRecipient a rdf:Property ;\n    rdfs:label \"bccRecipient\" ;\n    rdfs:comment \"A sub property of recipient. The recipient blind copied on a message.\" ;\n    rdfs:subPropertyOf schema:recipient ;\n    schema:domainIncludes schema:Message ;\n    schema:rangeIncludes schema:ContactPoint,\n        schema:Organization,\n        schema:Person .\n\nschema:bed a rdf:Property ;\n    rdfs:label \"bed\" ;\n    rdfs:comment \"\"\"The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.\n      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.\"\"\" ;\n    schema:domainIncludes schema:HotelRoom,\n        schema:Suite ;\n    schema:rangeIncludes schema:BedDetails,\n        schema:BedType,\n        schema:Text ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:beforeMedia a rdf:Property ;\n    rdfs:label \"beforeMedia\" ;\n    rdfs:comment \"A media object representing the circumstances before performing this direction.\" ;\n    schema:domainIncludes schema:HowToDirection ;\n    schema:rangeIncludes schema:MediaObject,\n        schema:URL .\n\nschema:beneficiaryBank a rdf:Property ;\n    rdfs:label \"beneficiaryBank\" ;\n    rdfs:comment \"A bank or bankâ€™s branch, financial institution or international financial institution operating the beneficiaryâ€™s bank account or releasing funds for the beneficiary.\" ;\n    schema:domainIncludes schema:MoneyTransfer ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:BankOrCreditUnion,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:benefits a rdf:Property ;\n    rdfs:label \"benefits\" ;\n    rdfs:comment \"Description of benefits associated with the job.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:jobBenefits .\n\nschema:benefitsSummaryUrl a rdf:Property ;\n    rdfs:label \"benefitsSummaryUrl\" ;\n    rdfs:comment \"The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:bestRating a rdf:Property ;\n    rdfs:label \"bestRating\" ;\n    rdfs:comment \"The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.\" ;\n    schema:domainIncludes schema:Rating ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:billingAddress a rdf:Property ;\n    rdfs:label \"billingAddress\" ;\n    rdfs:comment \"The billing address for the order.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:PostalAddress .\n\nschema:billingDuration a rdf:Property ;\n    rdfs:label \"billingDuration\" ;\n    rdfs:comment \"Specifies for how long this price (or price component) will be billed. Can be used, for example, to model the contractual duration of a subscription or payment plan. Type can be either a Duration or a Number (in which case the unit of measurement, for example month, is specified by the unitCode property).\" ;\n    schema:domainIncludes schema:UnitPriceSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Duration,\n        schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:billingIncrement a rdf:Property ;\n    rdfs:label \"billingIncrement\" ;\n    rdfs:comment \"This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.\" ;\n    schema:domainIncludes schema:UnitPriceSpecification ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:billingPeriod a rdf:Property ;\n    rdfs:label \"billingPeriod\" ;\n    rdfs:comment \"The time interval used to compute the invoice.\" ;\n    schema:domainIncludes schema:Invoice ;\n    schema:rangeIncludes schema:Duration .\n\nschema:billingStart a rdf:Property ;\n    rdfs:label \"billingStart\" ;\n    rdfs:comment \"Specifies after how much time this price (or price component) becomes valid and billing starts. Can be used, for example, to model a price increase after the first year of a subscription. The unit of measurement is specified by the unitCode property.\" ;\n    schema:domainIncludes schema:UnitPriceSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:biomechnicalClass a rdf:Property ;\n    rdfs:label \"biomechnicalClass\" ;\n    rdfs:comment \"The biomechanical properties of the bone.\" ;\n    schema:domainIncludes schema:Joint ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:birthDate a rdf:Property ;\n    rdfs:label \"birthDate\" ;\n    rdfs:comment \"Date of birth.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Date .\n\nschema:birthPlace a rdf:Property ;\n    rdfs:label \"birthPlace\" ;\n    rdfs:comment \"The place where the person was born.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Place .\n\nschema:bitrate a rdf:Property ;\n    rdfs:label \"bitrate\" ;\n    rdfs:comment \"The bitrate of the media object.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:blogPosts a rdf:Property ;\n    rdfs:label \"blogPosts\" ;\n    rdfs:comment \"The postings that are part of this blog.\" ;\n    schema:domainIncludes schema:Blog ;\n    schema:rangeIncludes schema:BlogPosting ;\n    schema:supersededBy schema:blogPost .\n\nschema:bloodSupply a rdf:Property ;\n    rdfs:label \"bloodSupply\" ;\n    rdfs:comment \"The blood vessel that carries blood from the heart to the muscle.\" ;\n    schema:domainIncludes schema:Muscle ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Vessel .\n\nschema:boardingGroup a rdf:Property ;\n    rdfs:label \"boardingGroup\" ;\n    rdfs:comment \"The airline-specific indicator of boarding order / preference.\" ;\n    schema:domainIncludes schema:FlightReservation ;\n    schema:rangeIncludes schema:Text .\n\nschema:boardingPolicy a rdf:Property ;\n    rdfs:label \"boardingPolicy\" ;\n    rdfs:comment \"The type of boarding policy used by the airline (e.g. zone-based or group-based).\" ;\n    schema:domainIncludes schema:Airline,\n        schema:Flight ;\n    schema:rangeIncludes schema:BoardingPolicyType .\n\nschema:bodyLocation a rdf:Property ;\n    rdfs:label \"bodyLocation\" ;\n    rdfs:comment \"Location in the body of the anatomical structure.\" ;\n    schema:domainIncludes schema:AnatomicalStructure,\n        schema:MedicalProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:bodyType a rdf:Property ;\n    rdfs:label \"bodyType\" ;\n    rdfs:comment \"Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:bookEdition a rdf:Property ;\n    rdfs:label \"bookEdition\" ;\n    rdfs:comment \"The edition of the book.\" ;\n    schema:domainIncludes schema:Book ;\n    schema:rangeIncludes schema:Text .\n\nschema:bookFormat a rdf:Property ;\n    rdfs:label \"bookFormat\" ;\n    rdfs:comment \"The format of the book.\" ;\n    schema:domainIncludes schema:Book ;\n    schema:rangeIncludes schema:BookFormatType .\n\nschema:bookingAgent a rdf:Property ;\n    rdfs:label \"bookingAgent\" ;\n    rdfs:comment \"'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:supersededBy schema:broker .\n\nschema:bookingTime a rdf:Property ;\n    rdfs:label \"bookingTime\" ;\n    rdfs:comment \"The date and time the reservation was booked.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:borrower a rdf:Property ;\n    rdfs:label \"borrower\" ;\n    rdfs:comment \"A sub property of participant. The person that borrows the object being lent.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:LendAction ;\n    schema:rangeIncludes schema:Person .\n\nschema:box a rdf:Property ;\n    rdfs:label \"box\" ;\n    rdfs:comment \"A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.\" ;\n    schema:domainIncludes schema:GeoShape ;\n    schema:rangeIncludes schema:Text .\n\nschema:branch a rdf:Property ;\n    rdfs:label \"branch\" ;\n    rdfs:comment \"The branches that delineate from the nerve bundle. Not to be confused with [[branchOf]].\" ;\n    schema:domainIncludes schema:Nerve ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure ;\n    schema:supersededBy schema:arterialBranch .\n\nschema:branchCode a rdf:Property ;\n    rdfs:label \"branchCode\" ;\n    rdfs:comment \"\"\"A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\\\\n\\\\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      \"\"\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:Text .\n\nschema:branchOf a rdf:Property ;\n    rdfs:label \"branchOf\" ;\n    rdfs:comment \"The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)[[branch]].\" ;\n    schema:domainIncludes schema:LocalBusiness ;\n    schema:rangeIncludes schema:Organization ;\n    schema:supersededBy schema:parentOrganization .\n\nschema:brand a rdf:Property ;\n    rdfs:label \"brand\" ;\n    rdfs:comment \"The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person,\n        schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:Brand,\n        schema:Organization .\n\nschema:breadcrumb a rdf:Property ;\n    rdfs:label \"breadcrumb\" ;\n    rdfs:comment \"A set of links that can help a user understand and navigate a website hierarchy.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:BreadcrumbList,\n        schema:Text .\n\nschema:breastfeedingWarning a rdf:Property ;\n    rdfs:label \"breastfeedingWarning\" ;\n    rdfs:comment \"Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:broadcastAffiliateOf a rdf:Property ;\n    rdfs:label \"broadcastAffiliateOf\" ;\n    rdfs:comment \"The media network(s) whose content is broadcast on this station.\" ;\n    schema:domainIncludes schema:BroadcastService ;\n    schema:rangeIncludes schema:Organization .\n\nschema:broadcastChannelId a rdf:Property ;\n    rdfs:label \"broadcastChannelId\" ;\n    rdfs:comment \"The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.\" ;\n    schema:domainIncludes schema:BroadcastChannel ;\n    schema:rangeIncludes schema:Text .\n\nschema:broadcastDisplayName a rdf:Property ;\n    rdfs:label \"broadcastDisplayName\" ;\n    rdfs:comment \"The name displayed in the channel guide. For many US affiliates, it is the network name.\" ;\n    schema:domainIncludes schema:BroadcastService ;\n    schema:rangeIncludes schema:Text .\n\nschema:broadcastFrequency a rdf:Property ;\n    rdfs:label \"broadcastFrequency\" ;\n    rdfs:comment \"The frequency used for over-the-air broadcasts. Numeric values or simple ranges e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. \\\\\"87 FM\\\\\".\" ;\n    schema:domainIncludes schema:BroadcastChannel,\n        schema:BroadcastService ;\n    schema:rangeIncludes schema:BroadcastFrequencySpecification,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1004> .\n\nschema:broadcastFrequencyValue a rdf:Property ;\n    rdfs:label \"broadcastFrequencyValue\" ;\n    rdfs:comment \"The frequency in MHz for a particular broadcast.\" ;\n    schema:domainIncludes schema:BroadcastFrequencySpecification ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1004> .\n\nschema:broadcastOfEvent a rdf:Property ;\n    rdfs:label \"broadcastOfEvent\" ;\n    rdfs:comment \"The event being broadcast such as a sporting event or awards ceremony.\" ;\n    schema:domainIncludes schema:BroadcastEvent ;\n    schema:rangeIncludes schema:Event .\n\nschema:broadcastServiceTier a rdf:Property ;\n    rdfs:label \"broadcastServiceTier\" ;\n    rdfs:comment \"The type of service required to have access to the channel (e.g. Standard or Premium).\" ;\n    schema:domainIncludes schema:BroadcastChannel ;\n    schema:rangeIncludes schema:Text .\n\nschema:broadcastSignalModulation a rdf:Property ;\n    rdfs:label \"broadcastSignalModulation\" ;\n    rdfs:comment \"The modulation (e.g. FM, AM, etc) used by a particular broadcast service.\" ;\n    schema:domainIncludes schema:BroadcastFrequencySpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2111> .\n\nschema:broadcastSubChannel a rdf:Property ;\n    rdfs:label \"broadcastSubChannel\" ;\n    rdfs:comment \"The subchannel used for the broadcast.\" ;\n    schema:domainIncludes schema:BroadcastFrequencySpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2111> .\n\nschema:broadcastTimezone a rdf:Property ;\n    rdfs:label \"broadcastTimezone\" ;\n    rdfs:comment \"The timezone in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601) for which the service bases its broadcasts\" ;\n    schema:domainIncludes schema:BroadcastService ;\n    schema:rangeIncludes schema:Text .\n\nschema:broadcaster a rdf:Property ;\n    rdfs:label \"broadcaster\" ;\n    rdfs:comment \"The organization owning or operating the broadcast service.\" ;\n    schema:domainIncludes schema:BroadcastService ;\n    schema:rangeIncludes schema:Organization .\n\nschema:browserRequirements a rdf:Property ;\n    rdfs:label \"browserRequirements\" ;\n    rdfs:comment \"Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.\" ;\n    schema:domainIncludes schema:WebApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:busName a rdf:Property ;\n    rdfs:label \"busName\" ;\n    rdfs:comment \"The name of the bus (e.g. Bolt Express).\" ;\n    schema:domainIncludes schema:BusTrip ;\n    schema:rangeIncludes schema:Text .\n\nschema:busNumber a rdf:Property ;\n    rdfs:label \"busNumber\" ;\n    rdfs:comment \"The unique identifier for the bus.\" ;\n    schema:domainIncludes schema:BusTrip ;\n    schema:rangeIncludes schema:Text .\n\nschema:businessDays a rdf:Property ;\n    rdfs:label \"businessDays\" ;\n    rdfs:comment \"Days of the week when the merchant typically operates, indicated via opening hours markup.\" ;\n    schema:domainIncludes schema:ShippingDeliveryTime ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:OpeningHoursSpecification ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:businessFunction a rdf:Property ;\n    rdfs:label \"businessFunction\" ;\n    rdfs:comment \"The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:TypeAndQuantityNode ;\n    schema:rangeIncludes schema:BusinessFunction ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:buyer a rdf:Property ;\n    rdfs:label \"buyer\" ;\n    rdfs:comment \"A sub property of participant. The participant/person/organization that bought the object.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:SellAction ;\n    schema:rangeIncludes schema:Person .\n\nschema:byArtist a rdf:Property ;\n    rdfs:label \"byArtist\" ;\n    rdfs:comment \"The artist that performed this album or recording.\" ;\n    schema:domainIncludes schema:MusicAlbum,\n        schema:MusicRecording ;\n    schema:rangeIncludes schema:MusicGroup,\n        schema:Person .\n\nschema:byDay a rdf:Property ;\n    rdfs:label \"byDay\" ;\n    rdfs:comment \"Defines the day(s) of the week on which a recurring [[Event]] takes place. May be specified using either [[DayOfWeek]], or alternatively [[Text]] conforming to iCal's syntax for byDay recurrence rules.\" ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DayOfWeek,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:byMonth a rdf:Property ;\n    rdfs:label \"byMonth\" ;\n    rdfs:comment \"Defines the month(s) of the year on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-12. January is 1.\" ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:byMonthDay a rdf:Property ;\n    rdfs:label \"byMonthDay\" ;\n    rdfs:comment \"Defines the day(s) of the month on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-31.\" ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:byMonthWeek a rdf:Property ;\n    rdfs:label \"byMonthWeek\" ;\n    rdfs:comment \"Defines the week(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction with byDay to indicate concepts like the first and third Mondays of a month.\" ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2599> .\n\nschema:callSign a rdf:Property ;\n    rdfs:label \"callSign\" ;\n    rdfs:comment \"A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:BroadcastService,\n        schema:Person,\n        schema:Vehicle ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2109> .\n\nschema:calories a rdf:Property ;\n    rdfs:label \"calories\" ;\n    rdfs:comment \"The number of calories.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Energy .\n\nschema:candidate a rdf:Property ;\n    rdfs:label \"candidate\" ;\n    rdfs:comment \"A sub property of object. The candidate subject of this action.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:VoteAction ;\n    schema:rangeIncludes schema:Person .\n\nschema:caption a rdf:Property ;\n    rdfs:label \"caption\" ;\n    rdfs:comment \"The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the [[encodingFormat]].\" ;\n    schema:domainIncludes schema:AudioObject,\n        schema:ImageObject,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:MediaObject,\n        schema:Text .\n\nschema:carbohydrateContent a rdf:Property ;\n    rdfs:label \"carbohydrateContent\" ;\n    rdfs:comment \"The number of grams of carbohydrates.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:cargoVolume a rdf:Property ;\n    rdfs:label \"cargoVolume\" ;\n    rdfs:comment \"The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.\\\\n\\\\nTypical unit code(s): LTR for liters, FTQ for cubic foot/feet\\\\n\\\\nNote: You can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:carrier a rdf:Property ;\n    rdfs:label \"carrier\" ;\n    rdfs:comment \"'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.\" ;\n    schema:domainIncludes schema:Flight,\n        schema:ParcelDelivery ;\n    schema:rangeIncludes schema:Organization ;\n    schema:supersededBy schema:provider .\n\nschema:carrierRequirements a rdf:Property ;\n    rdfs:label \"carrierRequirements\" ;\n    rdfs:comment \"Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).\" ;\n    schema:domainIncludes schema:MobileApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:cashBack a rdf:Property ;\n    rdfs:label \"cashBack\" ;\n    rdfs:comment \"A cardholder benefit that pays the cardholder a small percentage of their net expenditures.\" ;\n    schema:domainIncludes schema:PaymentCard ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean,\n        schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:catalog a rdf:Property ;\n    rdfs:label \"catalog\" ;\n    rdfs:comment \"A data catalog which contains this dataset.\" ;\n    schema:domainIncludes schema:Dataset ;\n    schema:rangeIncludes schema:DataCatalog ;\n    schema:supersededBy schema:includedInDataCatalog .\n\nschema:catalogNumber a rdf:Property ;\n    rdfs:label \"catalogNumber\" ;\n    rdfs:comment \"The catalog number for the release.\" ;\n    schema:domainIncludes schema:MusicRelease ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:causeOf a rdf:Property ;\n    rdfs:label \"causeOf\" ;\n    rdfs:comment \"The condition, complication, symptom, sign, etc. caused.\" ;\n    schema:domainIncludes schema:MedicalCause ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity .\n\nschema:ccRecipient a rdf:Property ;\n    rdfs:label \"ccRecipient\" ;\n    rdfs:comment \"A sub property of recipient. The recipient copied on a message.\" ;\n    rdfs:subPropertyOf schema:recipient ;\n    schema:domainIncludes schema:Message ;\n    schema:rangeIncludes schema:ContactPoint,\n        schema:Organization,\n        schema:Person .\n\nschema:character a rdf:Property ;\n    rdfs:label \"character\" ;\n    rdfs:comment \"Fictional person connected with a creative work.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Person .\n\nschema:characterAttribute a rdf:Property ;\n    rdfs:label \"characterAttribute\" ;\n    rdfs:comment \"A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).\" ;\n    schema:domainIncludes schema:Game,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Thing .\n\nschema:characterName a rdf:Property ;\n    rdfs:label \"characterName\" ;\n    rdfs:comment \"The name of a character played in some acting or performing role, i.e. in a PerformanceRole.\" ;\n    schema:domainIncludes schema:PerformanceRole ;\n    schema:rangeIncludes schema:Text .\n\nschema:cheatCode a rdf:Property ;\n    rdfs:label \"cheatCode\" ;\n    rdfs:comment \"Cheat codes to the game.\" ;\n    schema:domainIncludes schema:VideoGame,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:checkinTime a rdf:Property ;\n    rdfs:label \"checkinTime\" ;\n    rdfs:comment \"The earliest someone may check into a lodging establishment.\" ;\n    schema:domainIncludes schema:LodgingBusiness,\n        schema:LodgingReservation ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Time .\n\nschema:checkoutTime a rdf:Property ;\n    rdfs:label \"checkoutTime\" ;\n    rdfs:comment \"The latest someone may check out of a lodging establishment.\" ;\n    schema:domainIncludes schema:LodgingBusiness,\n        schema:LodgingReservation ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Time .\n\nschema:childMaxAge a rdf:Property ;\n    rdfs:label \"childMaxAge\" ;\n    rdfs:comment \"Maximal age of the child.\" ;\n    schema:domainIncludes schema:ParentAudience ;\n    schema:rangeIncludes schema:Number .\n\nschema:childMinAge a rdf:Property ;\n    rdfs:label \"childMinAge\" ;\n    rdfs:comment \"Minimal age of the child.\" ;\n    schema:domainIncludes schema:ParentAudience ;\n    schema:rangeIncludes schema:Number .\n\nschema:children a rdf:Property ;\n    rdfs:label \"children\" ;\n    rdfs:comment \"A child of the person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person .\n\nschema:cholesterolContent a rdf:Property ;\n    rdfs:label \"cholesterolContent\" ;\n    rdfs:comment \"The number of milligrams of cholesterol.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:circle a rdf:Property ;\n    rdfs:label \"circle\" ;\n    rdfs:comment \"A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.\" ;\n    schema:domainIncludes schema:GeoShape ;\n    schema:rangeIncludes schema:Text .\n\nschema:citation a rdf:Property ;\n    rdfs:label \"citation\" ;\n    rdfs:comment \"A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:Text .\n\nschema:claimReviewed a rdf:Property ;\n    rdfs:label \"claimReviewed\" ;\n    rdfs:comment \"A short summary of the specific claims reviewed in a ClaimReview.\" ;\n    schema:domainIncludes schema:ClaimReview ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1061> .\n\nschema:clincalPharmacology a rdf:Property ;\n    rdfs:label \"clincalPharmacology\" ;\n    rdfs:comment \"Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:clinicalPharmacology .\n\nschema:clipNumber a rdf:Property ;\n    rdfs:label \"clipNumber\" ;\n    rdfs:comment \"Position of the clip within an ordered group of clips.\" ;\n    rdfs:subPropertyOf schema:position ;\n    schema:domainIncludes schema:Clip ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text .\n\nschema:closes a rdf:Property ;\n    rdfs:label \"closes\" ;\n    rdfs:comment \"The closing hour of the place or service on the given day(s) of the week.\" ;\n    schema:domainIncludes schema:OpeningHoursSpecification ;\n    schema:rangeIncludes schema:Time ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:coach a rdf:Property ;\n    rdfs:label \"coach\" ;\n    rdfs:comment \"A person that acts in a coaching role for a sports team.\" ;\n    schema:domainIncludes schema:SportsTeam ;\n    schema:rangeIncludes schema:Person .\n\nschema:code a rdf:Property ;\n    rdfs:label \"code\" ;\n    rdfs:comment \"A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.\" ;\n    schema:domainIncludes schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalCode .\n\nschema:codeRepository a rdf:Property ;\n    rdfs:label \"codeRepository\" ;\n    rdfs:comment \"Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex).\" ;\n    schema:domainIncludes schema:SoftwareSourceCode ;\n    schema:rangeIncludes schema:URL .\n\nschema:codeValue a rdf:Property ;\n    rdfs:label \"codeValue\" ;\n    rdfs:comment \"A short textual code that uniquely identifies the value.\" ;\n    rdfs:subPropertyOf schema:termCode ;\n    schema:domainIncludes schema:CategoryCode,\n        schema:MedicalCode ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:codingSystem a rdf:Property ;\n    rdfs:label \"codingSystem\" ;\n    rdfs:comment \"The coding system, e.g. 'ICD-10'.\" ;\n    schema:domainIncludes schema:MedicalCode ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:colleagues a rdf:Property ;\n    rdfs:label \"colleagues\" ;\n    rdfs:comment \"A colleague of the person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:colleague .\n\nschema:collection a rdf:Property ;\n    rdfs:label \"collection\" ;\n    rdfs:comment \"A sub property of object. The collection target of the action.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:UpdateAction ;\n    schema:rangeIncludes schema:Thing ;\n    schema:supersededBy schema:targetCollection .\n\nschema:collectionSize a rdf:Property ;\n    rdfs:label \"collectionSize\"@en ;\n    rdfs:comment \"The number of items in the [[Collection]].\"@en ;\n    schema:domainIncludes schema:Collection ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1759> .\n\nschema:color a rdf:Property ;\n    rdfs:label \"color\" ;\n    rdfs:comment \"The color of the product.\" ;\n    schema:domainIncludes schema:Product ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:colorist a rdf:Property ;\n    rdfs:label \"colorist\" ;\n    rdfs:comment \"The individual who adds color to inked drawings.\" ;\n    schema:domainIncludes schema:ComicIssue,\n        schema:ComicStory,\n        schema:VisualArtwork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Person .\n\nschema:comment a rdf:Property ;\n    rdfs:label \"comment\" ;\n    rdfs:comment \"Comments, typically from users.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:RsvpAction ;\n    schema:rangeIncludes schema:Comment .\n\nschema:commentCount a rdf:Property ;\n    rdfs:label \"commentCount\" ;\n    rdfs:comment \"The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Integer .\n\nschema:commentText a rdf:Property ;\n    rdfs:label \"commentText\" ;\n    rdfs:comment \"The text of the UserComment.\" ;\n    schema:domainIncludes schema:UserComments ;\n    schema:rangeIncludes schema:Text .\n\nschema:commentTime a rdf:Property ;\n    rdfs:label \"commentTime\" ;\n    rdfs:comment \"The time at which the UserComment was made.\" ;\n    schema:domainIncludes schema:UserComments ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:competencyRequired a rdf:Property ;\n    rdfs:label \"competencyRequired\" ;\n    rdfs:comment \"Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity in order to do something such as earn an Educational Occupational Credential or understand a LearningResource.\" ;\n    schema:domainIncludes schema:EducationalOccupationalCredential,\n        schema:LearningResource ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:composer a rdf:Property ;\n    rdfs:label \"composer\" ;\n    rdfs:comment \"The person or organization who wrote a composition, or who is the composer of a work performed at some event.\" ;\n    schema:domainIncludes schema:Event,\n        schema:MusicComposition ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:comprisedOf a rdf:Property ;\n    rdfs:label \"comprisedOf\" ;\n    rdfs:comment \"Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.\" ;\n    schema:domainIncludes schema:AnatomicalSystem ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure,\n        schema:AnatomicalSystem .\n\nschema:conditionsOfAccess a rdf:Property ;\n    rdfs:label \"conditionsOfAccess\" ;\n    rdfs:comment \"Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an [[ArchiveComponent]] held by an [[ArchiveOrganization]]. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.\\\\n\\\\nFor example \\\\\"Available by appointment from the Reading Room\\\\\" or \\\\\"Accessible only from logged-in accounts \\\\\". \" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2173> .\n\nschema:confirmationNumber a rdf:Property ;\n    rdfs:label \"confirmationNumber\" ;\n    rdfs:comment \"A number that confirms the given order or payment has been received.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Invoice,\n        schema:Order ;\n    schema:rangeIncludes schema:Text .\n\nschema:connectedTo a rdf:Property ;\n    rdfs:label \"connectedTo\" ;\n    rdfs:comment \"Other anatomical structures to which this structure is connected.\" ;\n    schema:domainIncludes schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure .\n\nschema:constrainingProperty a rdf:Property ;\n    rdfs:label \"constrainingProperty\" ;\n    rdfs:comment \"\"\"Indicates a property used as a constraint to define a [[StatisticalPopulation]] with respect to the set of entities\n  corresponding to an indicated type (via [[populationType]]).\"\"\" ;\n    schema:domainIncludes schema:StatisticalPopulation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:contactOption a rdf:Property ;\n    rdfs:label \"contactOption\" ;\n    rdfs:comment \"An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).\" ;\n    schema:domainIncludes schema:ContactPoint ;\n    schema:rangeIncludes schema:ContactPointOption .\n\nschema:contactPoints a rdf:Property ;\n    rdfs:label \"contactPoints\" ;\n    rdfs:comment \"A contact point for a person or organization.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:ContactPoint ;\n    schema:supersededBy schema:contactPoint .\n\nschema:contactType a rdf:Property ;\n    rdfs:label \"contactType\" ;\n    rdfs:comment \"A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.\" ;\n    schema:domainIncludes schema:ContactPoint ;\n    schema:rangeIncludes schema:Text .\n\nschema:contactlessPayment a rdf:Property ;\n    rdfs:label \"contactlessPayment\" ;\n    rdfs:comment \"A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.\" ;\n    schema:domainIncludes schema:PaymentCard ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:containedIn a rdf:Property ;\n    rdfs:label \"containedIn\" ;\n    rdfs:comment \"The basic containment relation between a place and one that contains it.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:Place ;\n    schema:supersededBy schema:containedInPlace .\n\nschema:contentRating a rdf:Property ;\n    rdfs:label \"contentRating\" ;\n    rdfs:comment \"Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Rating,\n        schema:Text .\n\nschema:contentReferenceTime a rdf:Property ;\n    rdfs:label \"contentReferenceTime\" ;\n    rdfs:comment \"The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DateTime ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1050> .\n\nschema:contentSize a rdf:Property ;\n    rdfs:label \"contentSize\" ;\n    rdfs:comment \"File size in (mega/kilo) bytes.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:contentType a rdf:Property ;\n    rdfs:label \"contentType\" ;\n    rdfs:comment \"The supported content type(s) for an EntryPoint response.\" ;\n    schema:domainIncludes schema:EntryPoint ;\n    schema:rangeIncludes schema:Text .\n\nschema:contentUrl a rdf:Property ;\n    rdfs:label \"contentUrl\" ;\n    rdfs:comment \"Actual bytes of the media object, for example the image file or video file.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:URL .\n\nschema:contraindication a rdf:Property ;\n    rdfs:label \"contraindication\" ;\n    rdfs:comment \"A contraindication for this therapy.\" ;\n    schema:domainIncludes schema:MedicalDevice,\n        schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalContraindication,\n        schema:Text .\n\nschema:contributor a rdf:Property ;\n    rdfs:label \"contributor\" ;\n    rdfs:comment \"A secondary contributor to the CreativeWork or Event.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Event ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:cookTime a rdf:Property ;\n    rdfs:label \"cookTime\" ;\n    rdfs:comment \"The time it takes to actually cook the dish, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).\" ;\n    rdfs:subPropertyOf schema:performTime ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:Duration .\n\nschema:cookingMethod a rdf:Property ;\n    rdfs:label \"cookingMethod\" ;\n    rdfs:comment \"The method of cooking, such as Frying, Steaming, ...\" ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:Text .\n\nschema:copyrightHolder a rdf:Property ;\n    rdfs:label \"copyrightHolder\" ;\n    rdfs:comment \"The party holding the legal copyright to the CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:copyrightNotice a rdf:Property ;\n    rdfs:label \"copyrightNotice\" ;\n    rdfs:comment \"Text of a notice appropriate for describing the copyright aspects of this Creative Work, ideally indicating the owner of the copyright for the Work.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2659> .\n\nschema:copyrightYear a rdf:Property ;\n    rdfs:label \"copyrightYear\" ;\n    rdfs:comment \"The year during which the claimed copyright for the CreativeWork was first asserted.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Number .\n\nschema:correction a rdf:Property ;\n    rdfs:label \"correction\" ;\n    rdfs:comment \"Indicates a correction to a [[CreativeWork]], either via a [[CorrectionComment]], textually or in another document.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CorrectionComment,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1950>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:correctionsPolicy a rdf:Property ;\n    rdfs:label \"correctionsPolicy\" ;\n    rdfs:comment \"For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroomâ€™s) disclosure and correction policy for errors.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization,\n        schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:costCategory a rdf:Property ;\n    rdfs:label \"costCategory\" ;\n    rdfs:comment \"The category of cost, such as wholesale, retail, reimbursement cap, etc.\" ;\n    schema:domainIncludes schema:DrugCost ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DrugCostCategory .\n\nschema:costCurrency a rdf:Property ;\n    rdfs:label \"costCurrency\" ;\n    rdfs:comment \"The currency (in 3-letter of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217. \" ;\n    schema:domainIncludes schema:DrugCost ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:costOrigin a rdf:Property ;\n    rdfs:label \"costOrigin\" ;\n    rdfs:comment \"Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.\" ;\n    schema:domainIncludes schema:DrugCost ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:costPerUnit a rdf:Property ;\n    rdfs:label \"costPerUnit\" ;\n    rdfs:comment \"The cost per unit of the drug.\" ;\n    schema:domainIncludes schema:DrugCost ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Number,\n        schema:QualitativeValue,\n        schema:Text .\n\nschema:countriesNotSupported a rdf:Property ;\n    rdfs:label \"countriesNotSupported\" ;\n    rdfs:comment \"Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:countriesSupported a rdf:Property ;\n    rdfs:label \"countriesSupported\" ;\n    rdfs:comment \"Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:countryOfOrigin a rdf:Property ;\n    rdfs:label \"countryOfOrigin\" ;\n    rdfs:comment \"The country of the principal offices of the production company or individual responsible for the movie or program.\" ;\n    schema:domainIncludes schema:Movie,\n        schema:TVEpisode,\n        schema:TVSeason,\n        schema:TVSeries ;\n    schema:rangeIncludes schema:Country .\n\nschema:course a rdf:Property ;\n    rdfs:label \"course\" ;\n    rdfs:comment \"A sub property of location. The course where this action was taken.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:rangeIncludes schema:Place ;\n    schema:supersededBy schema:exerciseCourse .\n\nschema:courseCode a rdf:Property ;\n    rdfs:label \"courseCode\" ;\n    rdfs:comment \"The identifier for the [[Course]] used by the course [[provider]] (e.g. CS101 or 6.001).\" ;\n    schema:domainIncludes schema:Course ;\n    schema:rangeIncludes schema:Text .\n\nschema:courseMode a rdf:Property ;\n    rdfs:label \"courseMode\" ;\n    rdfs:comment \"The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. \\\\\"online\\\\\", \\\\\"onsite\\\\\" or \\\\\"blended\\\\\"; \\\\\"synchronous\\\\\" or \\\\\"asynchronous\\\\\"; \\\\\"full-time\\\\\" or \\\\\"part-time\\\\\") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).\" ;\n    schema:domainIncludes schema:CourseInstance ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:coursePrerequisites a rdf:Property ;\n    rdfs:label \"coursePrerequisites\" ;\n    rdfs:comment \"Requirements for taking the Course. May be completion of another [[Course]] or a textual description like \\\\\"permission of instructor\\\\\". Requirements may be a pre-requisite competency, referenced using [[AlignmentObject]].\" ;\n    schema:domainIncludes schema:Course ;\n    schema:rangeIncludes schema:AlignmentObject,\n        schema:Course,\n        schema:Text .\n\nschema:courseWorkload a rdf:Property ;\n    rdfs:label \"courseWorkload\" ;\n    rdfs:comment \"The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, \\\\\"2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week\\\\\".\" ;\n    schema:domainIncludes schema:CourseInstance ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1909> .\n\nschema:coverageEndTime a rdf:Property ;\n    rdfs:label \"coverageEndTime\" ;\n    rdfs:comment \"The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.\" ;\n    schema:domainIncludes schema:LiveBlogPosting ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:coverageStartTime a rdf:Property ;\n    rdfs:label \"coverageStartTime\" ;\n    rdfs:comment \"The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.\" ;\n    schema:domainIncludes schema:LiveBlogPosting ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:creativeWorkStatus a rdf:Property ;\n    rdfs:label \"creativeWorkStatus\" ;\n    rdfs:comment \"The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/987> .\n\nschema:credentialCategory a rdf:Property ;\n    rdfs:label \"credentialCategory\" ;\n    rdfs:comment \"The category or type of credential being described, for example \\\\\"degreeâ€, â€œcertificateâ€, â€œbadgeâ€, or more specific term.\" ;\n    schema:domainIncludes schema:EducationalOccupationalCredential ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:creditText a rdf:Property ;\n    rdfs:label \"creditText\" ;\n    rdfs:comment \"Text that can be used to credit person(s) and/or organization(s) associated with a published Creative Work.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2659> .\n\nschema:creditedTo a rdf:Property ;\n    rdfs:label \"creditedTo\" ;\n    rdfs:comment \"The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \\\\\"Stefani Germanotta Band\\\\\", but by Lady Gaga.\" ;\n    schema:domainIncludes schema:MusicRelease ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:cssSelector a rdf:Property ;\n    rdfs:label \"cssSelector\" ;\n    rdfs:comment \"A CSS selector, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \\\\\"Web page element\\\\\".\" ;\n    schema:domainIncludes schema:SpeakableSpecification,\n        schema:WebPageElement ;\n    schema:rangeIncludes schema:CssSelectorType ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1389> .\n\nschema:currenciesAccepted a rdf:Property ;\n    rdfs:label \"currenciesAccepted\" ;\n    rdfs:comment \"The currency accepted.\\\\n\\\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. \\\\\"USD\\\\\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. \\\\\"BTC\\\\\"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. \\\\\"Ithaca HOUR\\\\\".\" ;\n    schema:domainIncludes schema:LocalBusiness ;\n    schema:rangeIncludes schema:Text .\n\nschema:currency a rdf:Property ;\n    rdfs:label \"currency\" ;\n    rdfs:comment \"The currency in which the monetary amount is expressed.\\\\n\\\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. \\\\\"USD\\\\\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. \\\\\"BTC\\\\\"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. \\\\\"Ithaca HOUR\\\\\".\" ;\n    schema:domainIncludes schema:DatedMoneySpecification,\n        schema:ExchangeRateSpecification,\n        schema:LoanOrCredit,\n        schema:MonetaryAmount,\n        schema:MonetaryAmountDistribution ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:currentExchangeRate a rdf:Property ;\n    rdfs:label \"currentExchangeRate\" ;\n    rdfs:comment \"The current price of a currency.\" ;\n    schema:domainIncludes schema:ExchangeRateSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:UnitPriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:customer a rdf:Property ;\n    rdfs:label \"customer\" ;\n    rdfs:comment \"Party placing the order or paying the invoice.\" ;\n    schema:domainIncludes schema:Invoice,\n        schema:Order ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:cutoffTime a rdf:Property ;\n    rdfs:label \"cutoffTime\" ;\n    rdfs:comment \"Order cutoff time allows merchants to describe the time after which they will no longer process orders received on that day. For orders processed after cutoff time, one day gets added to the delivery time estimate. This property is expected to be most typically used via the [[ShippingRateSettings]] publication pattern. The time is indicated using the ISO-8601 Time format, e.g. \\\\\"23:30:00-05:00\\\\\" would represent 6:30 pm Eastern Standard Time (EST) which is 5 hours behind Coordinated Universal Time (UTC).\" ;\n    schema:domainIncludes schema:ShippingDeliveryTime ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Time ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:cvdCollectionDate a rdf:Property ;\n    rdfs:label \"cvdCollectionDate\" ;\n    rdfs:comment \"collectiondate - Date for which patient counts are reported.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdFacilityCounty a rdf:Property ;\n    rdfs:label \"cvdFacilityCounty\" ;\n    rdfs:comment \"Name of the County of the NHSN facility that this data record applies to. Use [[cvdFacilityId]] to identify the facility. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdFacilityId a rdf:Property ;\n    rdfs:label \"cvdFacilityId\" ;\n    rdfs:comment \"Identifier of the NHSN facility that this data record applies to. Use [[cvdFacilityCounty]] to indicate the county. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumBeds a rdf:Property ;\n    rdfs:label \"cvdNumBeds\" ;\n    rdfs:comment \"numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, licensed, and overflow (surge) beds used for inpatients.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumBedsOcc a rdf:Property ;\n    rdfs:label \"cvdNumBedsOcc\" ;\n    rdfs:comment \"numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient beds that are occupied.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumC19Died a rdf:Property ;\n    rdfs:label \"cvdNumC19Died\" ;\n    rdfs:comment \"numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumC19HOPats a rdf:Property ;\n    rdfs:label \"cvdNumC19HOPats\" ;\n    rdfs:comment \"numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient care location with onset of suspected or confirmed COVID-19 14 or more days after hospitalization.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumC19HospPats a rdf:Property ;\n    rdfs:label \"cvdNumC19HospPats\" ;\n    rdfs:comment \"numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient care location who have suspected or confirmed COVID-19.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumC19MechVentPats a rdf:Property ;\n    rdfs:label \"cvdNumC19MechVentPats\" ;\n    rdfs:comment \"numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in an NHSN inpatient care location who have suspected or confirmed COVID-19 and are on a mechanical ventilator.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumC19OFMechVentPats a rdf:Property ;\n    rdfs:label \"cvdNumC19OFMechVentPats\" ;\n    rdfs:comment \"numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumC19OverflowPats a rdf:Property ;\n    rdfs:label \"cvdNumC19OverflowPats\" ;\n    rdfs:comment \"numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumICUBeds a rdf:Property ;\n    rdfs:label \"cvdNumICUBeds\" ;\n    rdfs:comment \"numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit (ICU) beds.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumICUBedsOcc a rdf:Property ;\n    rdfs:label \"cvdNumICUBedsOcc\" ;\n    rdfs:comment \"numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds that are occupied.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumTotBeds a rdf:Property ;\n    rdfs:label \"cvdNumTotBeds\" ;\n    rdfs:comment \"numtotbeds - ALL HOSPITAL BEDS: Total number of all Inpatient and outpatient beds, including all staffed,ICU, licensed, and overflow (surge) beds used for inpatients or outpatients.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumVent a rdf:Property ;\n    rdfs:label \"cvdNumVent\" ;\n    rdfs:comment \"numvent - MECHANICAL VENTILATORS: Total number of ventilators available.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:cvdNumVentUse a rdf:Property ;\n    rdfs:label \"cvdNumVentUse\" ;\n    rdfs:comment \"numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in use.\" ;\n    schema:domainIncludes schema:CDCPMDRecord ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:dataFeedElement a rdf:Property ;\n    rdfs:label \"dataFeedElement\" ;\n    rdfs:comment \"An item within in a data feed. Data feeds may have many elements.\" ;\n    schema:domainIncludes schema:DataFeed ;\n    schema:rangeIncludes schema:DataFeedItem,\n        schema:Text,\n        schema:Thing .\n\nschema:datasetTimeInterval a rdf:Property ;\n    rdfs:label \"datasetTimeInterval\" ;\n    rdfs:comment \"The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).\" ;\n    schema:domainIncludes schema:Dataset ;\n    schema:rangeIncludes schema:DateTime ;\n    schema:supersededBy schema:temporalCoverage .\n\nschema:dateDeleted a rdf:Property ;\n    rdfs:label \"dateDeleted\" ;\n    rdfs:comment \"The datetime the item was removed from the DataFeed.\" ;\n    schema:domainIncludes schema:DataFeedItem ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:dateIssued a rdf:Property ;\n    rdfs:label \"dateIssued\" ;\n    rdfs:comment \"The date the ticket was issued.\" ;\n    schema:domainIncludes schema:Ticket ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:dateModified a rdf:Property ;\n    rdfs:label \"dateModified\" ;\n    rdfs:comment \"The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:DataFeedItem ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:datePosted a rdf:Property ;\n    rdfs:label \"datePosted\" ;\n    rdfs:comment \"Publication date of an online listing.\" ;\n    schema:domainIncludes schema:CDCPMDRecord,\n        schema:JobPosting,\n        schema:RealEstateListing,\n        schema:SpecialAnnouncement ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490>,\n        <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:datePublished a rdf:Property ;\n    rdfs:label \"datePublished\" ;\n    rdfs:comment \"Date of first broadcast/publication.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:dateRead a rdf:Property ;\n    rdfs:label \"dateRead\" ;\n    rdfs:comment \"The date/time at which the message has been read by the recipient if a single recipient exists.\" ;\n    schema:domainIncludes schema:Message ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:dateReceived a rdf:Property ;\n    rdfs:label \"dateReceived\" ;\n    rdfs:comment \"The date/time the message was received if a single recipient exists.\" ;\n    schema:domainIncludes schema:Message ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:dateSent a rdf:Property ;\n    rdfs:label \"dateSent\" ;\n    rdfs:comment \"The date/time at which the message was sent.\" ;\n    schema:domainIncludes schema:Message ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:dateVehicleFirstRegistered a rdf:Property ;\n    rdfs:label \"dateVehicleFirstRegistered\" ;\n    rdfs:comment \"The date of the first registration of the vehicle with the respective public authorities.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:dateline a rdf:Property ;\n    rdfs:label \"dateline\" ;\n    rdfs:comment \"\"\"A [dateline](https://en.wikipedia.org/wiki/Dateline) is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.\n\nStructured representations of dateline-related information can also be expressed more explicitly using [[locationCreated]] (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use [[contentLocation]].\n\nDateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: \"BEIRUT, Lebanon, June 2.\", \"Paris, France\", \"December 19, 2017 11:43AM Reporting from Washington\", \"Beijing/Moscow\", \"QUEZON CITY, Philippines\".\n      \"\"\" ;\n    schema:domainIncludes schema:NewsArticle ;\n    schema:rangeIncludes schema:Text .\n\nschema:dayOfWeek a rdf:Property ;\n    rdfs:label \"dayOfWeek\" ;\n    rdfs:comment \"The day of the week for which these opening hours are valid.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram,\n        schema:OpeningHoursSpecification ;\n    schema:rangeIncludes schema:DayOfWeek ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:deathDate a rdf:Property ;\n    rdfs:label \"deathDate\" ;\n    rdfs:comment \"Date of death.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Date .\n\nschema:deathPlace a rdf:Property ;\n    rdfs:label \"deathPlace\" ;\n    rdfs:comment \"The place where the person died.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Place .\n\nschema:defaultValue a rdf:Property ;\n    rdfs:label \"defaultValue\" ;\n    rdfs:comment \"The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Text,\n        schema:Thing .\n\nschema:deliveryAddress a rdf:Property ;\n    rdfs:label \"deliveryAddress\" ;\n    rdfs:comment \"Destination address.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:PostalAddress .\n\nschema:deliveryLeadTime a rdf:Property ;\n    rdfs:label \"deliveryLeadTime\" ;\n    rdfs:comment \"The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:deliveryMethod a rdf:Property ;\n    rdfs:label \"deliveryMethod\" ;\n    rdfs:comment \"A sub property of instrument. The method of delivery.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:OrderAction,\n        schema:ReceiveAction,\n        schema:SendAction,\n        schema:TrackAction ;\n    schema:rangeIncludes schema:DeliveryMethod .\n\nschema:deliveryStatus a rdf:Property ;\n    rdfs:label \"deliveryStatus\" ;\n    rdfs:comment \"New entry added as the package passes through each leg of its journey (from shipment to final delivery).\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:DeliveryEvent .\n\nschema:deliveryTime a rdf:Property ;\n    rdfs:label \"deliveryTime\" ;\n    rdfs:comment \"The total delay between the receipt of the order and the goods reaching the final customer.\" ;\n    schema:domainIncludes schema:DeliveryTimeSettings,\n        schema:OfferShippingDetails ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:ShippingDeliveryTime ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:department a rdf:Property ;\n    rdfs:label \"department\" ;\n    rdfs:comment \"A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Organization .\n\nschema:departureAirport a rdf:Property ;\n    rdfs:label \"departureAirport\" ;\n    rdfs:comment \"The airport where the flight originates.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Airport .\n\nschema:departureBoatTerminal a rdf:Property ;\n    rdfs:label \"departureBoatTerminal\" ;\n    rdfs:comment \"The terminal or port from which the boat departs.\" ;\n    schema:domainIncludes schema:BoatTrip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:BoatTerminal ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1755> .\n\nschema:departureBusStop a rdf:Property ;\n    rdfs:label \"departureBusStop\" ;\n    rdfs:comment \"The stop or station from which the bus departs.\" ;\n    schema:domainIncludes schema:BusTrip ;\n    schema:rangeIncludes schema:BusStation,\n        schema:BusStop .\n\nschema:departureGate a rdf:Property ;\n    rdfs:label \"departureGate\" ;\n    rdfs:comment \"Identifier of the flight's departure gate.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Text .\n\nschema:departurePlatform a rdf:Property ;\n    rdfs:label \"departurePlatform\" ;\n    rdfs:comment \"The platform from which the train departs.\" ;\n    schema:domainIncludes schema:TrainTrip ;\n    schema:rangeIncludes schema:Text .\n\nschema:departureStation a rdf:Property ;\n    rdfs:label \"departureStation\" ;\n    rdfs:comment \"The station from which the train departs.\" ;\n    schema:domainIncludes schema:TrainTrip ;\n    schema:rangeIncludes schema:TrainStation .\n\nschema:departureTerminal a rdf:Property ;\n    rdfs:label \"departureTerminal\" ;\n    rdfs:comment \"Identifier of the flight's departure terminal.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Text .\n\nschema:departureTime a rdf:Property ;\n    rdfs:label \"departureTime\" ;\n    rdfs:comment \"The expected departure time.\" ;\n    schema:domainIncludes schema:Trip ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Time .\n\nschema:dependencies a rdf:Property ;\n    rdfs:label \"dependencies\" ;\n    rdfs:comment \"Prerequisites needed to fulfill steps in article.\" ;\n    schema:domainIncludes schema:TechArticle ;\n    schema:rangeIncludes schema:Text .\n\nschema:depth a rdf:Property ;\n    rdfs:label \"depth\" ;\n    rdfs:comment \"The depth of the item.\" ;\n    schema:domainIncludes schema:Product,\n        schema:VisualArtwork ;\n    schema:rangeIncludes schema:Distance,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:device a rdf:Property ;\n    rdfs:label \"device\" ;\n    rdfs:comment \"Device required to run the application. Used in cases where a specific make/model is required to run the application.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:availableOnDevice .\n\nschema:diagnosis a rdf:Property ;\n    rdfs:label \"diagnosis\" ;\n    rdfs:comment \"One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.\" ;\n    schema:domainIncludes schema:DDxElement,\n        schema:Patient ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalCondition .\n\nschema:diagram a rdf:Property ;\n    rdfs:label \"diagram\" ;\n    rdfs:comment \"An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.\" ;\n    schema:domainIncludes schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:ImageObject .\n\nschema:diet a rdf:Property ;\n    rdfs:label \"diet\" ;\n    rdfs:comment \"A sub property of instrument. The diet used in this action.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Diet .\n\nschema:dietFeatures a rdf:Property ;\n    rdfs:label \"dietFeatures\" ;\n    rdfs:comment \"Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.\" ;\n    schema:domainIncludes schema:Diet ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:differentialDiagnosis a rdf:Property ;\n    rdfs:label \"differentialDiagnosis\" ;\n    rdfs:comment \"One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DDxElement .\n\nschema:directors a rdf:Property ;\n    rdfs:label \"directors\" ;\n    rdfs:comment \"A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.\" ;\n    schema:domainIncludes schema:Clip,\n        schema:Episode,\n        schema:Movie,\n        schema:MovieSeries,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGame,\n        schema:VideoGameSeries,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:director .\n\nschema:disambiguatingDescription a rdf:Property ;\n    rdfs:label \"disambiguatingDescription\" ;\n    rdfs:comment \"A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.\" ;\n    rdfs:subPropertyOf schema:description ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:Text .\n\nschema:discount a rdf:Property ;\n    rdfs:label \"discount\" ;\n    rdfs:comment \"Any discount applied (to an Order).\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:discountCode a rdf:Property ;\n    rdfs:label \"discountCode\" ;\n    rdfs:comment \"Code used to redeem a discount.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Text .\n\nschema:discountCurrency a rdf:Property ;\n    rdfs:label \"discountCurrency\" ;\n    rdfs:comment \"The currency of the discount.\\\\n\\\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. \\\\\"USD\\\\\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. \\\\\"BTC\\\\\"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. \\\\\"Ithaca HOUR\\\\\".\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Text .\n\nschema:discusses a rdf:Property ;\n    rdfs:label \"discusses\" ;\n    rdfs:comment \"Specifies the CreativeWork associated with the UserComment.\" ;\n    schema:domainIncludes schema:UserComments ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:discussionUrl a rdf:Property ;\n    rdfs:label \"discussionUrl\" ;\n    rdfs:comment \"A link to the page containing the comments of the CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:URL .\n\nschema:diseasePreventionInfo a rdf:Property ;\n    rdfs:label \"diseasePreventionInfo\" ;\n    rdfs:comment \"Information about disease prevention.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:diseaseSpreadStatistics a rdf:Property ;\n    rdfs:label \"diseaseSpreadStatistics\" ;\n    rdfs:comment \"\"\"Statistical information about the spread of a disease, either as [[WebContent]], or\n  described directly as a [[Dataset]], or the specific [[Observation]]s in the dataset. When a [[WebContent]] URL is\n  provided, the page indicated might also contain more such markup.\"\"\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Dataset,\n        schema:Observation,\n        schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:dissolutionDate a rdf:Property ;\n    rdfs:label \"dissolutionDate\" ;\n    rdfs:comment \"The date that this organization was dissolved.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Date .\n\nschema:distance a rdf:Property ;\n    rdfs:label \"distance\" ;\n    rdfs:comment \"The distance travelled, e.g. exercising or travelling.\" ;\n    schema:domainIncludes schema:ExerciseAction,\n        schema:TravelAction ;\n    schema:rangeIncludes schema:Distance .\n\nschema:distinguishingSign a rdf:Property ;\n    rdfs:label \"distinguishingSign\" ;\n    rdfs:comment \"One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.\" ;\n    schema:domainIncludes schema:DDxElement ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalSignOrSymptom .\n\nschema:distribution a rdf:Property ;\n    rdfs:label \"distribution\" ;\n    rdfs:comment \"A downloadable form of this dataset, at a specific location, in a specific format.\" ;\n    schema:domainIncludes schema:Dataset ;\n    schema:rangeIncludes schema:DataDownload .\n\nschema:diversityPolicy a rdf:Property ;\n    rdfs:label \"diversityPolicy\" ;\n    rdfs:comment \"Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroomâ€™s diversity policy on both staffing and sources, typically providing staffing data.\" ;\n    schema:domainIncludes schema:NewsMediaOrganization,\n        schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:diversityStaffingReport a rdf:Property ;\n    rdfs:label \"diversityStaffingReport\" ;\n    rdfs:comment \"For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization,\n        schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Article,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:documentation a rdf:Property ;\n    rdfs:label \"documentation\" ;\n    rdfs:comment \"Further documentation describing the Web API in more detail.\" ;\n    schema:domainIncludes schema:WebAPI ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1423> .\n\nschema:doesNotShip a rdf:Property ;\n    rdfs:label \"doesNotShip\" ;\n    rdfs:comment \"Indicates when shipping to a particular [[shippingDestination]] is not available.\" ;\n    schema:domainIncludes schema:OfferShippingDetails,\n        schema:ShippingRateSettings ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:domainIncludes a rdf:Property ;\n    rdfs:label \"domainIncludes\" ;\n    rdfs:comment \"Relates a property to a class that is (one of) the type(s) the property is expected to be used on.\" ;\n    schema:domainIncludes schema:Property ;\n    schema:isPartOf <https://meta.schema.org> ;\n    schema:rangeIncludes schema:Class .\n\nschema:domiciledMortgage a rdf:Property ;\n    rdfs:label \"domiciledMortgage\" ;\n    rdfs:comment \"Whether borrower is a resident of the jurisdiction where the property is located.\" ;\n    schema:domainIncludes schema:MortgageLoan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:doorTime a rdf:Property ;\n    rdfs:label \"doorTime\" ;\n    rdfs:comment \"The time admission will commence.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Time .\n\nschema:dosageForm a rdf:Property ;\n    rdfs:label \"dosageForm\" ;\n    rdfs:comment \"A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:doseSchedule a rdf:Property ;\n    rdfs:label \"doseSchedule\" ;\n    rdfs:comment \"A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.\" ;\n    schema:domainIncludes schema:Drug,\n        schema:TherapeuticProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DoseSchedule .\n\nschema:doseUnit a rdf:Property ;\n    rdfs:label \"doseUnit\" ;\n    rdfs:comment \"The unit of the dose, e.g. 'mg'.\" ;\n    schema:domainIncludes schema:DoseSchedule ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:doseValue a rdf:Property ;\n    rdfs:label \"doseValue\" ;\n    rdfs:comment \"The value of the dose, e.g. 500.\" ;\n    schema:domainIncludes schema:DoseSchedule ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Number,\n        schema:QualitativeValue .\n\nschema:downPayment a rdf:Property ;\n    rdfs:label \"downPayment\" ;\n    rdfs:comment \"a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.\" ;\n    schema:domainIncludes schema:RepaymentSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:downloadUrl a rdf:Property ;\n    rdfs:label \"downloadUrl\" ;\n    rdfs:comment \"If the file can be downloaded, URL to download the binary.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:URL .\n\nschema:downvoteCount a rdf:Property ;\n    rdfs:label \"downvoteCount\" ;\n    rdfs:comment \"The number of downvotes this question, answer or comment has received from the community.\" ;\n    schema:domainIncludes schema:Comment ;\n    schema:rangeIncludes schema:Integer .\n\nschema:drainsTo a rdf:Property ;\n    rdfs:label \"drainsTo\" ;\n    rdfs:comment \"The vasculature that the vein drains into.\" ;\n    schema:domainIncludes schema:Vein ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Vessel .\n\nschema:driveWheelConfiguration a rdf:Property ;\n    rdfs:label \"driveWheelConfiguration\" ;\n    rdfs:comment \"The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:DriveWheelConfigurationValue,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:dropoffLocation a rdf:Property ;\n    rdfs:label \"dropoffLocation\" ;\n    rdfs:comment \"Where a rental car can be dropped off.\" ;\n    schema:domainIncludes schema:RentalCarReservation ;\n    schema:rangeIncludes schema:Place .\n\nschema:dropoffTime a rdf:Property ;\n    rdfs:label \"dropoffTime\" ;\n    rdfs:comment \"When a rental car can be dropped off.\" ;\n    schema:domainIncludes schema:RentalCarReservation ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:drug a rdf:Property ;\n    rdfs:label \"drug\" ;\n    rdfs:comment \"Specifying a drug or medicine used in a medication procedure.\" ;\n    schema:domainIncludes schema:DrugClass,\n        schema:MedicalCondition,\n        schema:Patient,\n        schema:TherapeuticProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Drug .\n\nschema:drugClass a rdf:Property ;\n    rdfs:label \"drugClass\" ;\n    rdfs:comment \"The class of drug this belongs to (e.g., statins).\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DrugClass .\n\nschema:drugUnit a rdf:Property ;\n    rdfs:label \"drugUnit\" ;\n    rdfs:comment \"The unit in which the drug is measured, e.g. '5 mg tablet'.\" ;\n    schema:domainIncludes schema:Drug,\n        schema:DrugCost ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:duns a rdf:Property ;\n    rdfs:label \"duns\" ;\n    rdfs:comment \"The Dun & Bradstreet DUNS number for identifying an organization or business person.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:duplicateTherapy a rdf:Property ;\n    rdfs:label \"duplicateTherapy\" ;\n    rdfs:comment \"A therapy that duplicates or overlaps this one.\" ;\n    schema:domainIncludes schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTherapy .\n\nschema:durationOfWarranty a rdf:Property ;\n    rdfs:label \"durationOfWarranty\" ;\n    rdfs:comment \"The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.\" ;\n    schema:domainIncludes schema:WarrantyPromise ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:duringMedia a rdf:Property ;\n    rdfs:label \"duringMedia\" ;\n    rdfs:comment \"A media object representing the circumstances while performing this direction.\" ;\n    schema:domainIncludes schema:HowToDirection ;\n    schema:rangeIncludes schema:MediaObject,\n        schema:URL .\n\nschema:earlyPrepaymentPenalty a rdf:Property ;\n    rdfs:label \"earlyPrepaymentPenalty\" ;\n    rdfs:comment \"The amount to be paid as a penalty in the event of early payment of the loan.\" ;\n    schema:domainIncludes schema:RepaymentSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:editEIDR a rdf:Property ;\n    rdfs:label \"editEIDR\" ;\n    rdfs:comment \"\"\"An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing a specific edit / edition for a work of film or television.\n\nFor example, the motion picture known as \"Ghostbusters\" whose [[titleEIDR]] is \"10.5240/7EC7-228A-510A-053E-CBB8-J\", has several edits e.g. \"10.5240/1F2A-E1C5-680A-14C6-E76B-I\" and \"10.5240/8A35-3BEE-6497-5D12-9E4F-3\".\n\nSince schema.org types like [[Movie]] and [[TVEpisode]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.\n\"\"\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2469> .\n\nschema:editor a rdf:Property ;\n    rdfs:label \"editor\" ;\n    rdfs:comment \"Specifies the Person who edited the CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Person .\n\nschema:eduQuestionType a rdf:Property ;\n    rdfs:label \"eduQuestionType\" ;\n    rdfs:comment \"For questions that are part of learning resources (e.g. Quiz), eduQuestionType indicates the format of question being given. Example: \\\\\"Multiple choice\\\\\", \\\\\"Open ended\\\\\", \\\\\"Flashcard\\\\\".\" ;\n    schema:domainIncludes schema:Question,\n        schema:SolveMathAction ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2636> .\n\nschema:educationRequirements a rdf:Property ;\n    rdfs:label \"educationRequirements\" ;\n    rdfs:comment \"Educational background needed for the position or Occupation.\" ;\n    schema:domainIncludes schema:JobPosting,\n        schema:Occupation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EducationalOccupationalCredential,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698>,\n        <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:educationalAlignment a rdf:Property ;\n    rdfs:label \"educationalAlignment\" ;\n    rdfs:comment \"\"\"An alignment to an established educational framework.\n\nThis property should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.\"\"\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:LearningResource ;\n    schema:rangeIncludes schema:AlignmentObject .\n\nschema:educationalCredentialAwarded a rdf:Property ;\n    rdfs:label \"educationalCredentialAwarded\" ;\n    rdfs:comment \"A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.\" ;\n    schema:domainIncludes schema:Course,\n        schema:EducationalOccupationalProgram ;\n    schema:rangeIncludes schema:EducationalOccupationalCredential,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:educationalFramework a rdf:Property ;\n    rdfs:label \"educationalFramework\" ;\n    rdfs:comment \"The framework to which the resource being described is aligned.\" ;\n    schema:domainIncludes schema:AlignmentObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:educationalLevel a rdf:Property ;\n    rdfs:label \"educationalLevel\" ;\n    rdfs:comment \"The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:EducationEvent,\n        schema:EducationalOccupationalCredential,\n        schema:LearningResource ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:educationalProgramMode a rdf:Property ;\n    rdfs:label \"educationalProgramMode\" ;\n    rdfs:comment \"Similar to courseMode, The medium or means of delivery of the program as a whole. The value may either be a text label (e.g. \\\\\"online\\\\\", \\\\\"onsite\\\\\" or \\\\\"blended\\\\\"; \\\\\"synchronous\\\\\" or \\\\\"asynchronous\\\\\"; \\\\\"full-time\\\\\" or \\\\\"part-time\\\\\") or a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:educationalRole a rdf:Property ;\n    rdfs:label \"educationalRole\" ;\n    rdfs:comment \"An educationalRole of an EducationalAudience.\" ;\n    schema:domainIncludes schema:EducationalAudience ;\n    schema:rangeIncludes schema:Text .\n\nschema:educationalUse a rdf:Property ;\n    rdfs:label \"educationalUse\" ;\n    rdfs:comment \"The purpose of a work in the context of education; for example, 'assignment', 'group work'.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:LearningResource ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text .\n\nschema:elevation a rdf:Property ;\n    rdfs:label \"elevation\" ;\n    rdfs:comment \"The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). Values may be of the form 'NUMBER UNIT_OF_MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.\" ;\n    schema:domainIncludes schema:GeoCoordinates,\n        schema:GeoShape ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:eligibilityToWorkRequirement a rdf:Property ;\n    rdfs:label \"eligibilityToWorkRequirement\" ;\n    rdfs:comment \"The legal requirements such as citizenship, visa and other documentation required for an applicant to this job.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2384> .\n\nschema:eligibleCustomerType a rdf:Property ;\n    rdfs:label \"eligibleCustomerType\" ;\n    rdfs:comment \"The type(s) of customers for which the given offer is valid.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:BusinessEntityType ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:eligibleDuration a rdf:Property ;\n    rdfs:label \"eligibleDuration\" ;\n    rdfs:comment \"The duration for which the given offer is valid.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:eligibleQuantity a rdf:Property ;\n    rdfs:label \"eligibleQuantity\" ;\n    rdfs:comment \"The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:PriceSpecification ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:eligibleRegion a rdf:Property ;\n    rdfs:label \"eligibleRegion\" ;\n    rdfs:comment \"\"\"The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\\\\n\\\\nSee also [[ineligibleRegion]].\n    \"\"\" ;\n    rdfs:subPropertyOf schema:areaServed ;\n    schema:domainIncludes schema:ActionAccessSpecification,\n        schema:DeliveryChargeSpecification,\n        schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:GeoShape,\n        schema:Place,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms>,\n        <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:eligibleTransactionVolume a rdf:Property ;\n    rdfs:label \"eligibleTransactionVolume\" ;\n    rdfs:comment \"The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:PriceSpecification ;\n    schema:rangeIncludes schema:PriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:email a rdf:Property ;\n    rdfs:label \"email\" ;\n    rdfs:comment \"Email address.\" ;\n    schema:domainIncludes schema:ContactPoint,\n        schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Text .\n\nschema:embedUrl a rdf:Property ;\n    rdfs:label \"embedUrl\" ;\n    rdfs:comment \"A URL pointing to a player for a specific video. In general, this is the information in the \\`\\`\\`src\\`\\`\\` element of an \\`\\`\\`embed\\`\\`\\` tag and should not be the same as the content of the \\`\\`\\`loc\\`\\`\\` tag.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:URL .\n\nschema:emissionsCO2 a rdf:Property ;\n    rdfs:label \"emissionsCO2\" ;\n    rdfs:comment \"The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put \\\\\"g/km\\\\\" into the unitText property of that value, since there is no UN/CEFACT Common Code for \\\\\"g/km\\\\\".\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:employees a rdf:Property ;\n    rdfs:label \"employees\" ;\n    rdfs:comment \"People working for this organization.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:employee .\n\nschema:employerOverview a rdf:Property ;\n    rdfs:label \"employerOverview\" ;\n    rdfs:comment \"A description of the employer, career opportunities and work environment for this position.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2396> .\n\nschema:employmentType a rdf:Property ;\n    rdfs:label \"employmentType\" ;\n    rdfs:comment \"Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text .\n\nschema:employmentUnit a rdf:Property ;\n    rdfs:label \"employmentUnit\" ;\n    rdfs:comment \"Indicates the department, unit and/or facility where the employee reports and/or in which the job is to be performed.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Organization ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2296> .\n\nschema:encodingType a rdf:Property ;\n    rdfs:label \"encodingType\" ;\n    rdfs:comment \"The supported encoding type(s) for an EntryPoint request.\" ;\n    schema:domainIncludes schema:EntryPoint ;\n    schema:rangeIncludes schema:Text .\n\nschema:encodings a rdf:Property ;\n    rdfs:label \"encodings\" ;\n    rdfs:comment \"A media object that encodes this CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:MediaObject ;\n    schema:supersededBy schema:encoding .\n\nschema:endDate a rdf:Property ;\n    rdfs:label \"endDate\" ;\n    rdfs:comment \"The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).\" ;\n    schema:domainIncludes schema:CreativeWorkSeason,\n        schema:CreativeWorkSeries,\n        schema:DatedMoneySpecification,\n        schema:EducationalOccupationalProgram,\n        schema:Event,\n        schema:Role,\n        schema:Schedule ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2486> .\n\nschema:endOffset a rdf:Property ;\n    rdfs:label \"endOffset\" ;\n    rdfs:comment \"The end time of the clip expressed as the number of seconds from the beginning of the work.\" ;\n    schema:domainIncludes schema:Clip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HyperTocEntry,\n        schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2021> .\n\nschema:endTime a rdf:Property ;\n    rdfs:label \"endTime\" ;\n    rdfs:comment \"The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to *December*. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\\\\n\\\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.\" ;\n    schema:domainIncludes schema:Action,\n        schema:FoodEstablishmentReservation,\n        schema:MediaObject,\n        schema:Schedule ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Time ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2493> .\n\nschema:endorsee a rdf:Property ;\n    rdfs:label \"endorsee\" ;\n    rdfs:comment \"A sub property of participant. The person/organization being supported.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:EndorseAction ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:endorsers a rdf:Property ;\n    rdfs:label \"endorsers\" ;\n    rdfs:comment \"People or organizations that endorse the plan.\" ;\n    schema:domainIncludes schema:Diet ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:energyEfficiencyScaleMax a rdf:Property ;\n    rdfs:label \"energyEfficiencyScaleMax\" ;\n    rdfs:comment \"Specifies the most energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.\" ;\n    schema:domainIncludes schema:EnergyConsumptionDetails ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EUEnergyEfficiencyEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:energyEfficiencyScaleMin a rdf:Property ;\n    rdfs:label \"energyEfficiencyScaleMin\" ;\n    rdfs:comment \"Specifies the least energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.\" ;\n    schema:domainIncludes schema:EnergyConsumptionDetails ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EUEnergyEfficiencyEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:engineDisplacement a rdf:Property ;\n    rdfs:label \"engineDisplacement\" ;\n    rdfs:comment \"The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. \\\\n\\\\nTypical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches\\\\\\\\n* Note 1: You can link to information about how the given value has been determined using the [[valueReference]] property.\\\\\\\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:EngineSpecification ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:enginePower a rdf:Property ;\n    rdfs:label \"enginePower\" ;\n    rdfs:comment \"\"\"The power of the vehicle's engine.\n    Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)\\\\n\\\\n* Note 1: There are many different ways of measuring an engine's power. For an overview, see  [http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes](http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes).\\\\\\\\n* Note 2: You can link to information about how the given value has been determined using the [[valueReference]] property.\\\\\\\\n* Note 3: You can use [[minValue]] and [[maxValue]] to indicate ranges.\"\"\" ;\n    schema:domainIncludes schema:EngineSpecification ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:engineType a rdf:Property ;\n    rdfs:label \"engineType\" ;\n    rdfs:comment \"The type of engine or engines powering the vehicle.\" ;\n    schema:domainIncludes schema:EngineSpecification ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:entertainmentBusiness a rdf:Property ;\n    rdfs:label \"entertainmentBusiness\" ;\n    rdfs:comment \"A sub property of location. The entertainment business where the action occurred.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:PerformAction ;\n    schema:rangeIncludes schema:EntertainmentBusiness .\n\nschema:epidemiology a rdf:Property ;\n    rdfs:label \"epidemiology\" ;\n    rdfs:comment \"The characteristics of associated patients, such as age, gender, race etc.\" ;\n    schema:domainIncludes schema:MedicalCondition,\n        schema:PhysicalActivity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:episodeNumber a rdf:Property ;\n    rdfs:label \"episodeNumber\" ;\n    rdfs:comment \"Position of the episode within an ordered group of episodes.\" ;\n    rdfs:subPropertyOf schema:position ;\n    schema:domainIncludes schema:Episode ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text .\n\nschema:episodes a rdf:Property ;\n    rdfs:label \"episodes\" ;\n    rdfs:comment \"An episode of a TV/radio series or season.\" ;\n    schema:domainIncludes schema:CreativeWorkSeason,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Episode ;\n    schema:supersededBy schema:episode .\n\nschema:equal a rdf:Property ;\n    rdfs:label \"equal\" ;\n    rdfs:comment \"This ordering relation for qualitative values indicates that the subject is equal to the object.\" ;\n    schema:domainIncludes schema:QualitativeValue ;\n    schema:rangeIncludes schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:error a rdf:Property ;\n    rdfs:label \"error\" ;\n    rdfs:comment \"For failed actions, more information on the cause of the failure.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:Thing .\n\nschema:estimatedCost a rdf:Property ;\n    rdfs:label \"estimatedCost\" ;\n    rdfs:comment \"The estimated cost of the supply or supplies consumed when performing instructions.\" ;\n    schema:domainIncludes schema:HowTo,\n        schema:HowToSupply ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:Text .\n\nschema:estimatedFlightDuration a rdf:Property ;\n    rdfs:label \"estimatedFlightDuration\" ;\n    rdfs:comment \"The estimated time the flight will take.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Duration,\n        schema:Text .\n\nschema:estimatedSalary a rdf:Property ;\n    rdfs:label \"estimatedSalary\" ;\n    rdfs:comment \"An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.\" ;\n    schema:domainIncludes schema:JobPosting,\n        schema:Occupation ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:MonetaryAmountDistribution,\n        schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:estimatesRiskOf a rdf:Property ;\n    rdfs:label \"estimatesRiskOf\" ;\n    rdfs:comment \"The condition, complication, or symptom whose risk is being estimated.\" ;\n    schema:domainIncludes schema:MedicalRiskEstimator ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity .\n\nschema:ethicsPolicy a rdf:Property ;\n    rdfs:label \"ethicsPolicy\" ;\n    rdfs:comment \"Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.\" ;\n    schema:domainIncludes schema:NewsMediaOrganization,\n        schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525> .\n\nschema:eventAttendanceMode a rdf:Property ;\n    rdfs:label \"eventAttendanceMode\" ;\n    rdfs:comment \"The eventAttendanceMode of an event indicates whether it occurs online, offline, or a mix.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EventAttendanceModeEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:eventSchedule a rdf:Property ;\n    rdfs:label \"eventSchedule\" ;\n    rdfs:comment \"\"\"Associates an [[Event]] with a [[Schedule]]. There are circumstances where it is preferable to share a schedule for a series of\n      repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly\n      gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An [[Event]] that\n      is associated with a [[Schedule]] using this property should not have [[startDate]] or [[endDate]] properties. These are instead defined within the associated\n      [[Schedule]], this avoids any ambiguity for clients using the data. The property might have repeated values to specify different schedules, e.g. for different months\n      or seasons.\"\"\" ;\n    schema:domainIncludes schema:Event ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Schedule ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:eventStatus a rdf:Property ;\n    rdfs:label \"eventStatus\" ;\n    rdfs:comment \"An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:EventStatusType .\n\nschema:events a rdf:Property ;\n    rdfs:label \"events\" ;\n    rdfs:comment \"Upcoming or past events associated with this place or organization.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Place ;\n    schema:rangeIncludes schema:Event ;\n    schema:supersededBy schema:event .\n\nschema:evidenceLevel a rdf:Property ;\n    rdfs:label \"evidenceLevel\" ;\n    rdfs:comment \"Strength of evidence of the data used to formulate the guideline (enumerated).\" ;\n    schema:domainIncludes schema:MedicalGuideline ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEvidenceLevel .\n\nschema:evidenceOrigin a rdf:Property ;\n    rdfs:label \"evidenceOrigin\" ;\n    rdfs:comment \"Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.\" ;\n    schema:domainIncludes schema:MedicalGuideline ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:exceptDate a rdf:Property ;\n    rdfs:label \"exceptDate\" ;\n    rdfs:comment \"\"\"Defines a [[Date]] or [[DateTime]] during which a scheduled [[Event]] will not take place. The property allows exceptions to\n      a [[Schedule]] to be specified. If an exception is specified as a [[DateTime]] then only the event that would have started at that specific date and time\n      should be excluded from the schedule. If an exception is specified as a [[Date]] then any event that is scheduled for that 24 hour period should be\n      excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.\"\"\" ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:exchangeRateSpread a rdf:Property ;\n    rdfs:label \"exchangeRateSpread\" ;\n    rdfs:comment \"The difference between the price at which a broker or other intermediary buys and sells foreign currency.\" ;\n    schema:domainIncludes schema:ExchangeRateSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:exercisePlan a rdf:Property ;\n    rdfs:label \"exercisePlan\" ;\n    rdfs:comment \"A sub property of instrument. The exercise plan used on this action.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:ExercisePlan .\n\nschema:exerciseRelatedDiet a rdf:Property ;\n    rdfs:label \"exerciseRelatedDiet\" ;\n    rdfs:comment \"A sub property of instrument. The diet used in this action.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Diet .\n\nschema:exerciseType a rdf:Property ;\n    rdfs:label \"exerciseType\" ;\n    rdfs:comment \"Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.\" ;\n    schema:domainIncludes schema:ExerciseAction,\n        schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:exifData a rdf:Property ;\n    rdfs:label \"exifData\" ;\n    rdfs:comment \"exif data for this object.\" ;\n    schema:domainIncludes schema:ImageObject ;\n    schema:rangeIncludes schema:PropertyValue,\n        schema:Text .\n\nschema:expectedArrivalFrom a rdf:Property ;\n    rdfs:label \"expectedArrivalFrom\" ;\n    rdfs:comment \"The earliest date the package may arrive.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:expectedArrivalUntil a rdf:Property ;\n    rdfs:label \"expectedArrivalUntil\" ;\n    rdfs:comment \"The latest date the package may arrive.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:expectedPrognosis a rdf:Property ;\n    rdfs:label \"expectedPrognosis\" ;\n    rdfs:comment \"The likely outcome in either the short term or long term of the medical condition.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:expectsAcceptanceOf a rdf:Property ;\n    rdfs:label \"expectsAcceptanceOf\" ;\n    rdfs:comment \"An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.\" ;\n    schema:domainIncludes schema:ActionAccessSpecification,\n        schema:ConsumeAction,\n        schema:MediaSubscription ;\n    schema:rangeIncludes schema:Offer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:experienceInPlaceOfEducation a rdf:Property ;\n    rdfs:label \"experienceInPlaceOfEducation\" ;\n    rdfs:comment \"Indicates whether a [[JobPosting]] will accept experience (as indicated by [[OccupationalExperienceRequirements]]) in place of its formal educational qualifications (as indicated by [[educationRequirements]]). If true, indicates that satisfying one of these requirements is sufficient.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2681> .\n\nschema:experienceRequirements a rdf:Property ;\n    rdfs:label \"experienceRequirements\" ;\n    rdfs:comment \"Description of skills and experience needed for the position or Occupation.\" ;\n    schema:domainIncludes schema:JobPosting,\n        schema:Occupation ;\n    schema:rangeIncludes schema:OccupationalExperienceRequirements,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:expertConsiderations a rdf:Property ;\n    rdfs:label \"expertConsiderations\" ;\n    rdfs:comment \"Medical expert advice related to the plan.\" ;\n    schema:domainIncludes schema:Diet ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:expires a rdf:Property ;\n    rdfs:label \"expires\" ;\n    rdfs:comment \"Date the content expires and is no longer useful or available. For example a [[VideoObject]] or [[NewsArticle]] whose availability or relevance is time-limited, or a [[ClaimReview]] fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Date .\n\nschema:familyName a rdf:Property ;\n    rdfs:label \"familyName\" ;\n    rdfs:comment \"Family name. In the U.S., the last name of a Person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Text .\n\nschema:fatContent a rdf:Property ;\n    rdfs:label \"fatContent\" ;\n    rdfs:comment \"The number of grams of fat.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:faxNumber a rdf:Property ;\n    rdfs:label \"faxNumber\" ;\n    rdfs:comment \"The fax number.\" ;\n    schema:domainIncludes schema:ContactPoint,\n        schema:Organization,\n        schema:Person,\n        schema:Place ;\n    schema:rangeIncludes schema:Text .\n\nschema:featureList a rdf:Property ;\n    rdfs:label \"featureList\" ;\n    rdfs:comment \"Features or modules provided by this application (and possibly required by other applications).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:feesAndCommissionsSpecification a rdf:Property ;\n    rdfs:label \"feesAndCommissionsSpecification\" ;\n    rdfs:comment \"Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.\" ;\n    schema:domainIncludes schema:FinancialProduct,\n        schema:FinancialService ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:fiberContent a rdf:Property ;\n    rdfs:label \"fiberContent\" ;\n    rdfs:comment \"The number of grams of fiber.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:fileFormat a rdf:Property ;\n    rdfs:label \"fileFormat\" ;\n    rdfs:comment \"Media type, typically MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml)) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:supersededBy schema:encodingFormat .\n\nschema:fileSize a rdf:Property ;\n    rdfs:label \"fileSize\" ;\n    rdfs:comment \"Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:financialAidEligible a rdf:Property ;\n    rdfs:label \"financialAidEligible\" ;\n    rdfs:comment \"A financial aid type or program which students may use to pay for tuition or fees associated with the program.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2418> .\n\nschema:firstAppearance a rdf:Property ;\n    rdfs:label \"firstAppearance\" ;\n    rdfs:comment \"Indicates the first known occurence of a [[Claim]] in some [[CreativeWork]].\" ;\n    rdfs:subPropertyOf schema:workExample ;\n    schema:domainIncludes schema:Claim ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1828> .\n\nschema:firstPerformance a rdf:Property ;\n    rdfs:label \"firstPerformance\" ;\n    rdfs:comment \"The date and place the work was first performed.\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:Event ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:flightDistance a rdf:Property ;\n    rdfs:label \"flightDistance\" ;\n    rdfs:comment \"The distance of the flight.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Distance,\n        schema:Text .\n\nschema:flightNumber a rdf:Property ;\n    rdfs:label \"flightNumber\" ;\n    rdfs:comment \"The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Text .\n\nschema:floorLevel a rdf:Property ;\n    rdfs:label \"floorLevel\" ;\n    rdfs:comment \"\"\"The floor level for an [[Accommodation]] in a multi-storey building. Since counting\n  systems [vary internationally](https://en.wikipedia.org/wiki/Storey#Consecutive_number_floor_designations), the local system should be used where possible.\"\"\" ;\n    schema:domainIncludes schema:Accommodation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:floorLimit a rdf:Property ;\n    rdfs:label \"floorLimit\" ;\n    rdfs:comment \"A floor limit is the amount of money above which credit card transactions must be authorized.\" ;\n    schema:domainIncludes schema:PaymentCard ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:floorSize a rdf:Property ;\n    rdfs:label \"floorSize\" ;\n    rdfs:comment \"\"\"The size of the accommodation, e.g. in square meter or squarefoot.\nTypical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard \"\"\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:FloorPlan ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:followee a rdf:Property ;\n    rdfs:label \"followee\" ;\n    rdfs:comment \"A sub property of object. The person or organization being followed.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:FollowAction ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:follows a rdf:Property ;\n    rdfs:label \"follows\" ;\n    rdfs:comment \"The most generic uni-directional social relation.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person .\n\nschema:followup a rdf:Property ;\n    rdfs:label \"followup\" ;\n    rdfs:comment \"Typical or recommended followup care after the procedure is performed.\" ;\n    schema:domainIncludes schema:MedicalProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:foodEstablishment a rdf:Property ;\n    rdfs:label \"foodEstablishment\" ;\n    rdfs:comment \"A sub property of location. The specific food establishment where the action occurred.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:CookAction ;\n    schema:rangeIncludes schema:FoodEstablishment,\n        schema:Place .\n\nschema:foodEvent a rdf:Property ;\n    rdfs:label \"foodEvent\" ;\n    rdfs:comment \"A sub property of location. The specific food event where the action occurred.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:CookAction ;\n    schema:rangeIncludes schema:FoodEvent .\n\nschema:foodWarning a rdf:Property ;\n    rdfs:label \"foodWarning\" ;\n    rdfs:comment \"Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:founders a rdf:Property ;\n    rdfs:label \"founders\" ;\n    rdfs:comment \"A person who founded this organization.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:founder .\n\nschema:foundingDate a rdf:Property ;\n    rdfs:label \"foundingDate\" ;\n    rdfs:comment \"The date that this organization was founded.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Date .\n\nschema:foundingLocation a rdf:Property ;\n    rdfs:label \"foundingLocation\" ;\n    rdfs:comment \"The place where the Organization was founded.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Place .\n\nschema:free a rdf:Property ;\n    rdfs:label \"free\" ;\n    rdfs:comment \"A flag to signal that the item, event, or place is accessible for free.\" ;\n    schema:domainIncludes schema:PublicationEvent ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:supersededBy schema:isAccessibleForFree .\n\nschema:freeShippingThreshold a rdf:Property ;\n    rdfs:label \"freeShippingThreshold\" ;\n    rdfs:comment \"A monetary value above which (or equal to) the shipping rate becomes free. Intended to be used via an [[OfferShippingDetails]] with [[shippingSettingsLink]] matching this [[ShippingRateSettings]].\" ;\n    schema:domainIncludes schema:ShippingRateSettings ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DeliveryChargeSpecification,\n        schema:MonetaryAmount ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:fromLocation a rdf:Property ;\n    rdfs:label \"fromLocation\" ;\n    rdfs:comment \"A sub property of location. The original location of the object or the agent before the action.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:ExerciseAction,\n        schema:MoveAction,\n        schema:TransferAction ;\n    schema:rangeIncludes schema:Place .\n\nschema:fuelCapacity a rdf:Property ;\n    rdfs:label \"fuelCapacity\" ;\n    rdfs:comment \"The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.\\\\n\\\\nTypical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:fuelConsumption a rdf:Property ;\n    rdfs:label \"fuelConsumption\" ;\n    rdfs:comment \"The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).\\\\n\\\\n* Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use [[unitText]] to indicate the unit of measurement, e.g. L/100 km.\\\\\\\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\\\\\\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\\\\\"at 80 km/h\\\\\") or usage pattern (\\\\\"city traffic\\\\\"). You can use [[valueReference]] to link the value for the fuel consumption to another value.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:fuelEfficiency a rdf:Property ;\n    rdfs:label \"fuelEfficiency\" ;\n    rdfs:comment \"The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).\\\\n\\\\n* Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use [[unitText]] to indicate the unit of measurement, e.g. mpg or km/L.\\\\\\\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\\\\\\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\\\\\"at 80 km/h\\\\\") or usage pattern (\\\\\"city traffic\\\\\"). You can use [[valueReference]] to link the value for the fuel economy to another value.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:fuelType a rdf:Property ;\n    rdfs:label \"fuelType\" ;\n    rdfs:comment \"The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.\" ;\n    schema:domainIncludes schema:EngineSpecification,\n        schema:Vehicle ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:functionalClass a rdf:Property ;\n    rdfs:label \"functionalClass\" ;\n    rdfs:comment \"The degree of mobility the joint allows.\" ;\n    schema:domainIncludes schema:Joint ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity,\n        schema:Text .\n\nschema:fundedItem a rdf:Property ;\n    rdfs:label \"fundedItem\" ;\n    rdfs:comment \"Indicates an item funded or sponsored through a [[Grant]].\" ;\n    schema:domainIncludes schema:Grant ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Thing ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1950>,\n        <https://github.com/schemaorg/schemaorg/issues/383>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:funder a rdf:Property ;\n    rdfs:label \"funder\" ;\n    rdfs:comment \"A person or organization that supports (sponsors) something through some kind of financial contribution.\" ;\n    rdfs:subPropertyOf schema:sponsor ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Event,\n        schema:MonetaryGrant,\n        schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:gameItem a rdf:Property ;\n    rdfs:label \"gameItem\" ;\n    rdfs:comment \"An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.\" ;\n    schema:domainIncludes schema:Game,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Thing .\n\nschema:gameLocation a rdf:Property ;\n    rdfs:label \"gameLocation\" ;\n    rdfs:comment \"Real or fictional location of the game (or part of game).\" ;\n    schema:domainIncludes schema:Game,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Place,\n        schema:PostalAddress,\n        schema:URL .\n\nschema:gamePlatform a rdf:Property ;\n    rdfs:label \"gamePlatform\" ;\n    rdfs:comment \"The electronic systems used to play <a href=\\\\\"http://en.wikipedia.org/wiki/Category:Video_game_platforms\\\\\">video games</a>.\" ;\n    schema:domainIncludes schema:VideoGame,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Text,\n        schema:Thing,\n        schema:URL .\n\nschema:gameTip a rdf:Property ;\n    rdfs:label \"gameTip\" ;\n    rdfs:comment \"Links to tips, tactics, etc.\" ;\n    schema:domainIncludes schema:VideoGame ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:gender a rdf:Property ;\n    rdfs:label \"gender\" ;\n    rdfs:comment \"Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While https://schema.org/Male and https://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of \\\\\"Mixed\\\\\".\" ;\n    schema:domainIncludes schema:Person,\n        schema:SportsTeam ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:GenderType,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2341> .\n\nschema:geo a rdf:Property ;\n    rdfs:label \"geo\" ;\n    rdfs:comment \"The geo coordinates of the place.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:GeoCoordinates,\n        schema:GeoShape .\n\nschema:geoContains a rdf:Property ;\n    rdfs:label \"geoContains\" ;\n    rdfs:comment \"Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. \\\\\"a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a\\\\\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoCoveredBy a rdf:Property ;\n    rdfs:label \"geoCoveredBy\" ;\n    rdfs:comment \"Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoCovers a rdf:Property ;\n    rdfs:label \"geoCovers\" ;\n    rdfs:comment \"Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. \\\\\"Every point of b is a point of (the interior or boundary of) a\\\\\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoCrosses a rdf:Property ;\n    rdfs:label \"geoCrosses\" ;\n    rdfs:comment \"Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: \\\\\"a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them\\\\\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoDisjoint a rdf:Property ;\n    rdfs:label \"geoDisjoint\" ;\n    rdfs:comment \"Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries.\\\\\" (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM))\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoEquals a rdf:Property ;\n    rdfs:label \"geoEquals\" ;\n    rdfs:comment \"Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). \\\\\"Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other\\\\\" (a symmetric relationship)\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoIntersects a rdf:Property ;\n    rdfs:label \"geoIntersects\" ;\n    rdfs:comment \"Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoMidpoint a rdf:Property ;\n    rdfs:label \"geoMidpoint\" ;\n    rdfs:comment \"Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle.\" ;\n    schema:domainIncludes schema:GeoCircle ;\n    schema:rangeIncludes schema:GeoCoordinates .\n\nschema:geoOverlaps a rdf:Property ;\n    rdfs:label \"geoOverlaps\" ;\n    rdfs:comment \"Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoRadius a rdf:Property ;\n    rdfs:label \"geoRadius\" ;\n    rdfs:comment \"Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).\" ;\n    schema:domainIncludes schema:GeoCircle ;\n    schema:rangeIncludes schema:Distance,\n        schema:Number,\n        schema:Text .\n\nschema:geoTouches a rdf:Property ;\n    rdfs:label \"geoTouches\" ;\n    rdfs:comment \"Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points.\\\\\" (a symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM) )\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geoWithin a rdf:Property ;\n    rdfs:label \"geoWithin\" ;\n    rdfs:comment \"Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).\" ;\n    schema:domainIncludes schema:GeospatialGeometry,\n        schema:Place ;\n    schema:rangeIncludes schema:GeospatialGeometry,\n        schema:Place .\n\nschema:geographicArea a rdf:Property ;\n    rdfs:label \"geographicArea\" ;\n    rdfs:comment \"The geographic area associated with the audience.\" ;\n    schema:domainIncludes schema:Audience ;\n    schema:rangeIncludes schema:AdministrativeArea .\n\nschema:gettingTestedInfo a rdf:Property ;\n    rdfs:label \"gettingTestedInfo\" ;\n    rdfs:comment \"Information about getting tested (for a [[MedicalCondition]]), e.g. in the context of a pandemic.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:givenName a rdf:Property ;\n    rdfs:label \"givenName\" ;\n    rdfs:comment \"Given name. In the U.S., the first name of a Person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Text .\n\nschema:globalLocationNumber a rdf:Property ;\n    rdfs:label \"globalLocationNumber\" ;\n    rdfs:comment \"The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Organization,\n        schema:Person,\n        schema:Place ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:governmentBenefitsInfo a rdf:Property ;\n    rdfs:label \"governmentBenefitsInfo\" ;\n    rdfs:comment \"governmentBenefitsInfo provides information about government benefits associated with a SpecialAnnouncement.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:GovernmentService ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:gracePeriod a rdf:Property ;\n    rdfs:label \"gracePeriod\" ;\n    rdfs:comment \"The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.\" ;\n    schema:domainIncludes schema:LoanOrCredit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Duration ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:grantee a rdf:Property ;\n    rdfs:label \"grantee\" ;\n    rdfs:comment \"The person, organization, contact point, or audience that has been granted this permission.\" ;\n    schema:domainIncludes schema:DigitalDocumentPermission ;\n    schema:rangeIncludes schema:Audience,\n        schema:ContactPoint,\n        schema:Organization,\n        schema:Person .\n\nschema:greater a rdf:Property ;\n    rdfs:label \"greater\" ;\n    rdfs:comment \"This ordering relation for qualitative values indicates that the subject is greater than the object.\" ;\n    schema:domainIncludes schema:QualitativeValue ;\n    schema:rangeIncludes schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:greaterOrEqual a rdf:Property ;\n    rdfs:label \"greaterOrEqual\" ;\n    rdfs:comment \"This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.\" ;\n    schema:domainIncludes schema:QualitativeValue ;\n    schema:rangeIncludes schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:gtin12 a rdf:Property ;\n    rdfs:label \"gtin12\" ;\n    rdfs:comment \"The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.\" ;\n    rdfs:subPropertyOf schema:gtin,\n        schema:identifier ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:rangeIncludes schema:Text .\n\nschema:gtin13 a rdf:Property ;\n    rdfs:label \"gtin13\" ;\n    rdfs:comment \"The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.\" ;\n    rdfs:subPropertyOf schema:gtin,\n        schema:identifier ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:gtin14 a rdf:Property ;\n    rdfs:label \"gtin14\" ;\n    rdfs:comment \"The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.\" ;\n    rdfs:subPropertyOf schema:gtin,\n        schema:identifier ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:gtin8 a rdf:Property ;\n    rdfs:label \"gtin8\" ;\n    rdfs:comment \"The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.\" ;\n    rdfs:subPropertyOf schema:gtin,\n        schema:identifier ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:guideline a rdf:Property ;\n    rdfs:label \"guideline\" ;\n    rdfs:comment \"A medical guideline related to this entity.\" ;\n    schema:domainIncludes schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalGuideline .\n\nschema:guidelineDate a rdf:Property ;\n    rdfs:label \"guidelineDate\" ;\n    rdfs:comment \"Date on which this guideline's recommendation was made.\" ;\n    schema:domainIncludes schema:MedicalGuideline ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Date .\n\nschema:guidelineSubject a rdf:Property ;\n    rdfs:label \"guidelineSubject\" ;\n    rdfs:comment \"The medical conditions, treatments, etc. that are the subject of the guideline.\" ;\n    schema:domainIncludes schema:MedicalGuideline ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity .\n\nschema:handlingTime a rdf:Property ;\n    rdfs:label \"handlingTime\" ;\n    rdfs:comment \"The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup. Typical properties: minValue, maxValue, unitCode (d for DAY).  This is by common convention assumed to mean business days (if a unitCode is used, coded as \\\\\"d\\\\\"), i.e. only counting days when the business normally operates.\" ;\n    schema:domainIncludes schema:ShippingDeliveryTime ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:hasCategoryCode a rdf:Property ;\n    rdfs:label \"hasCategoryCode\" ;\n    rdfs:comment \"A Category code contained in this code set.\" ;\n    rdfs:subPropertyOf schema:hasDefinedTerm ;\n    schema:domainIncludes schema:CategoryCodeSet ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CategoryCode ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:hasCourse a rdf:Property ;\n    rdfs:label \"hasCourse\" ;\n    rdfs:comment \"A course or class that is one of the learning opportunities that constitute an educational / occupational program. No information is implied about whether the course is mandatory or optional; no guarantee is implied about whether the course will be available to everyone on the program.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Course ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2483> .\n\nschema:hasCourseInstance a rdf:Property ;\n    rdfs:label \"hasCourseInstance\" ;\n    rdfs:comment \"An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.\" ;\n    schema:domainIncludes schema:Course ;\n    schema:rangeIncludes schema:CourseInstance .\n\nschema:hasCredential a rdf:Property ;\n    rdfs:label \"hasCredential\" ;\n    rdfs:comment \"A credential awarded to the Person or Organization.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EducationalOccupationalCredential ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:hasDeliveryMethod a rdf:Property ;\n    rdfs:label \"hasDeliveryMethod\" ;\n    rdfs:comment \"Method used for delivery or shipping.\" ;\n    schema:domainIncludes schema:DeliveryEvent,\n        schema:ParcelDelivery ;\n    schema:rangeIncludes schema:DeliveryMethod .\n\nschema:hasDigitalDocumentPermission a rdf:Property ;\n    rdfs:label \"hasDigitalDocumentPermission\" ;\n    rdfs:comment \"A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to \\\\\"public\\\\\".\" ;\n    schema:domainIncludes schema:DigitalDocument ;\n    schema:rangeIncludes schema:DigitalDocumentPermission .\n\nschema:hasDriveThroughService a rdf:Property ;\n    rdfs:label \"hasDriveThroughService\" ;\n    rdfs:comment \"Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) offers a service that can be used by driving through in a car. In the case of [[CovidTestingFacility]] such facilities could potentially help with social distancing from other potentially-infected users.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:hasEnergyConsumptionDetails a rdf:Property ;\n    rdfs:label \"hasEnergyConsumptionDetails\" ;\n    rdfs:comment \"Defines the energy efficiency Category (also known as \\\\\"class\\\\\" or \\\\\"rating\\\\\") for a product according to an international energy efficiency standard.\" ;\n    schema:domainIncludes schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EnergyConsumptionDetails ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:hasEnergyEfficiencyCategory a rdf:Property ;\n    rdfs:label \"hasEnergyEfficiencyCategory\" ;\n    rdfs:comment \"Defines the energy efficiency Category (which could be either a rating out of range of values or a yes/no certification) for a product according to an international energy efficiency standard.\" ;\n    schema:domainIncludes schema:EnergyConsumptionDetails ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EnergyEfficiencyEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2670> .\n\nschema:hasHealthAspect a rdf:Property ;\n    rdfs:label \"hasHealthAspect\" ;\n    rdfs:comment \"Indicates the aspect or aspects specifically addressed in some [[HealthTopicContent]]. For example, that the content is an overview, or that it talks about treatment, self-care, treatments or their side-effects.\" ;\n    schema:domainIncludes schema:HealthTopicContent ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HealthAspectEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:hasMeasurement a rdf:Property ;\n    rdfs:label \"hasMeasurement\" ;\n    rdfs:comment \"A product measurement, for example the inseam of pants, the wheel size of a bicycle, or the gauge of a screw. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.\" ;\n    schema:domainIncludes schema:Offer,\n        schema:Product,\n        schema:SizeSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:hasMenuItem a rdf:Property ;\n    rdfs:label \"hasMenuItem\" ;\n    rdfs:comment \"A food or drink item contained in a menu or menu section.\" ;\n    schema:domainIncludes schema:Menu,\n        schema:MenuSection ;\n    schema:rangeIncludes schema:MenuItem .\n\nschema:hasMenuSection a rdf:Property ;\n    rdfs:label \"hasMenuSection\" ;\n    rdfs:comment \"A subgrouping of the menu (by dishes, course, serving time period, etc.).\" ;\n    schema:domainIncludes schema:Menu,\n        schema:MenuSection ;\n    schema:rangeIncludes schema:MenuSection .\n\nschema:hasMerchantReturnPolicy a rdf:Property ;\n    rdfs:label \"hasMerchantReturnPolicy\" ;\n    rdfs:comment \"Indicates a MerchantReturnPolicy that may be applicable.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MerchantReturnPolicy ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:hasOccupation a rdf:Property ;\n    rdfs:label \"hasOccupation\" ;\n    rdfs:comment \"The Person's occupation. For past professions, use Role for expressing dates.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Occupation ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:hasOfferCatalog a rdf:Property ;\n    rdfs:label \"hasOfferCatalog\" ;\n    rdfs:comment \"Indicates an OfferCatalog listing for this Organization, Person, or Service.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person,\n        schema:Service ;\n    schema:rangeIncludes schema:OfferCatalog .\n\nschema:hasPOS a rdf:Property ;\n    rdfs:label \"hasPOS\" ;\n    rdfs:comment \"Points-of-Sales operated by the organization or person.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Place ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:headline a rdf:Property ;\n    rdfs:label \"headline\" ;\n    rdfs:comment \"Headline of the article.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:healthCondition a rdf:Property ;\n    rdfs:label \"healthCondition\" ;\n    rdfs:comment \"Specifying the health condition(s) of a patient, medical study, or other target audience.\" ;\n    schema:domainIncludes schema:MedicalStudy,\n        schema:Patient,\n        schema:PeopleAudience ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalCondition .\n\nschema:healthPlanCoinsuranceOption a rdf:Property ;\n    rdfs:label \"healthPlanCoinsuranceOption\" ;\n    rdfs:comment \"Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?\" ;\n    schema:domainIncludes schema:HealthPlanCostSharingSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanCoinsuranceRate a rdf:Property ;\n    rdfs:label \"healthPlanCoinsuranceRate\" ;\n    rdfs:comment \"Whether The rate of coinsurance expressed as a number between 0.0 and 1.0.\" ;\n    schema:domainIncludes schema:HealthPlanCostSharingSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanCopay a rdf:Property ;\n    rdfs:label \"healthPlanCopay\" ;\n    rdfs:comment \"Whether The copay amount.\" ;\n    schema:domainIncludes schema:HealthPlanCostSharingSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:PriceSpecification ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanCopayOption a rdf:Property ;\n    rdfs:label \"healthPlanCopayOption\" ;\n    rdfs:comment \"Whether the copay is before or after deductible, etc. TODO: Is this a closed set?\" ;\n    schema:domainIncludes schema:HealthPlanCostSharingSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanCostSharing a rdf:Property ;\n    rdfs:label \"healthPlanCostSharing\" ;\n    rdfs:comment \"Whether The costs to the patient for services under this network or formulary.\" ;\n    schema:domainIncludes schema:HealthPlanFormulary,\n        schema:HealthPlanNetwork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanDrugOption a rdf:Property ;\n    rdfs:label \"healthPlanDrugOption\" ;\n    rdfs:comment \"TODO.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanDrugTier a rdf:Property ;\n    rdfs:label \"healthPlanDrugTier\" ;\n    rdfs:comment \"The tier(s) of drugs offered by this formulary or insurance plan.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan,\n        schema:HealthPlanFormulary ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanId a rdf:Property ;\n    rdfs:label \"healthPlanId\" ;\n    rdfs:comment \"The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)\" ;\n    schema:domainIncludes schema:HealthInsurancePlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanMarketingUrl a rdf:Property ;\n    rdfs:label \"healthPlanMarketingUrl\" ;\n    rdfs:comment \"The URL that goes directly to the plan brochure for the specific standard plan or plan variation.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanNetworkId a rdf:Property ;\n    rdfs:label \"healthPlanNetworkId\" ;\n    rdfs:comment \"Name or unique ID of network. (Networks are often reused across different insurance plans).\" ;\n    schema:domainIncludes schema:HealthPlanNetwork,\n        schema:MedicalOrganization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanNetworkTier a rdf:Property ;\n    rdfs:label \"healthPlanNetworkTier\" ;\n    rdfs:comment \"The tier(s) for this network.\" ;\n    schema:domainIncludes schema:HealthPlanNetwork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthPlanPharmacyCategory a rdf:Property ;\n    rdfs:label \"healthPlanPharmacyCategory\" ;\n    rdfs:comment \"The category or type of pharmacy associated with this cost sharing.\" ;\n    schema:domainIncludes schema:HealthPlanCostSharingSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:healthcareReportingData a rdf:Property ;\n    rdfs:label \"healthcareReportingData\" ;\n    rdfs:comment \"Indicates data describing a hospital, e.g. a CDC [[CDCPMDRecord]] or as some kind of [[Dataset]].\" ;\n    schema:domainIncludes schema:Hospital ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CDCPMDRecord,\n        schema:Dataset ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2521> .\n\nschema:height a rdf:Property ;\n    rdfs:label \"height\" ;\n    rdfs:comment \"The height of the item.\" ;\n    schema:domainIncludes schema:MediaObject,\n        schema:Person,\n        schema:Product,\n        schema:VisualArtwork ;\n    schema:rangeIncludes schema:Distance,\n        schema:QuantitativeValue .\n\nschema:highPrice a rdf:Property ;\n    rdfs:label \"highPrice\" ;\n    rdfs:comment \"The highest price of all offers available.\\\\n\\\\nUsage guidelines:\\\\n\\\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\\\\\\\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\" ;\n    schema:domainIncludes schema:AggregateOffer ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:hiringOrganization a rdf:Property ;\n    rdfs:label \"hiringOrganization\" ;\n    rdfs:comment \"Organization offering the job position.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Organization .\n\nschema:homeLocation a rdf:Property ;\n    rdfs:label \"homeLocation\" ;\n    rdfs:comment \"A contact location for a person's residence.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:ContactPoint,\n        schema:Place .\n\nschema:homeTeam a rdf:Property ;\n    rdfs:label \"homeTeam\" ;\n    rdfs:comment \"The home team in a sports event.\" ;\n    rdfs:subPropertyOf schema:competitor ;\n    schema:domainIncludes schema:SportsEvent ;\n    schema:rangeIncludes schema:Person,\n        schema:SportsTeam .\n\nschema:honorificPrefix a rdf:Property ;\n    rdfs:label \"honorificPrefix\" ;\n    rdfs:comment \"An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Text .\n\nschema:honorificSuffix a rdf:Property ;\n    rdfs:label \"honorificSuffix\" ;\n    rdfs:comment \"An honorific suffix following a Person's name such as M.D. /PhD/MSCSW.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Text .\n\nschema:hospitalAffiliation a rdf:Property ;\n    rdfs:label \"hospitalAffiliation\" ;\n    rdfs:comment \"A hospital with which the physician or office is affiliated.\" ;\n    schema:domainIncludes schema:Physician ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Hospital .\n\nschema:hostingOrganization a rdf:Property ;\n    rdfs:label \"hostingOrganization\" ;\n    rdfs:comment \"The organization (airline, travelers' club, etc.) the membership is made with.\" ;\n    schema:domainIncludes schema:ProgramMembership ;\n    schema:rangeIncludes schema:Organization .\n\nschema:hoursAvailable a rdf:Property ;\n    rdfs:label \"hoursAvailable\" ;\n    rdfs:comment \"The hours during which this service or contact is available.\" ;\n    schema:domainIncludes schema:ContactPoint,\n        schema:LocationFeatureSpecification,\n        schema:Service ;\n    schema:rangeIncludes schema:OpeningHoursSpecification .\n\nschema:howPerformed a rdf:Property ;\n    rdfs:label \"howPerformed\" ;\n    rdfs:comment \"How the procedure is performed.\" ;\n    schema:domainIncludes schema:MedicalProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:httpMethod a rdf:Property ;\n    rdfs:label \"httpMethod\" ;\n    rdfs:comment \"An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.\" ;\n    schema:domainIncludes schema:EntryPoint ;\n    schema:rangeIncludes schema:Text .\n\nschema:iataCode a rdf:Property ;\n    rdfs:label \"iataCode\" ;\n    rdfs:comment \"IATA identifier for an airline or airport.\" ;\n    schema:domainIncludes schema:Airline,\n        schema:Airport ;\n    schema:rangeIncludes schema:Text .\n\nschema:icaoCode a rdf:Property ;\n    rdfs:label \"icaoCode\" ;\n    rdfs:comment \"ICAO identifier for an airport.\" ;\n    schema:domainIncludes schema:Airport ;\n    schema:rangeIncludes schema:Text .\n\nschema:identifyingExam a rdf:Property ;\n    rdfs:label \"identifyingExam\" ;\n    rdfs:comment \"A physical examination that can identify this sign.\" ;\n    schema:domainIncludes schema:MedicalSign ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:PhysicalExam .\n\nschema:identifyingTest a rdf:Property ;\n    rdfs:label \"identifyingTest\" ;\n    rdfs:comment \"A diagnostic test that can identify this sign.\" ;\n    schema:domainIncludes schema:MedicalSign ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTest .\n\nschema:illustrator a rdf:Property ;\n    rdfs:label \"illustrator\" ;\n    rdfs:comment \"The illustrator of the book.\" ;\n    schema:domainIncludes schema:Book ;\n    schema:rangeIncludes schema:Person .\n\nschema:imagingTechnique a rdf:Property ;\n    rdfs:label \"imagingTechnique\" ;\n    rdfs:comment \"Imaging technique used.\" ;\n    schema:domainIncludes schema:ImagingTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalImagingTechnique .\n\nschema:inAlbum a rdf:Property ;\n    rdfs:label \"inAlbum\" ;\n    rdfs:comment \"The album to which this recording belongs.\" ;\n    schema:domainIncludes schema:MusicRecording ;\n    schema:rangeIncludes schema:MusicAlbum .\n\nschema:inBroadcastLineup a rdf:Property ;\n    rdfs:label \"inBroadcastLineup\" ;\n    rdfs:comment \"The CableOrSatelliteService offering the channel.\" ;\n    schema:domainIncludes schema:BroadcastChannel ;\n    schema:rangeIncludes schema:CableOrSatelliteService .\n\nschema:inCodeSet a rdf:Property ;\n    rdfs:label \"inCodeSet\" ;\n    rdfs:comment \"A [[CategoryCodeSet]] that contains this category code.\" ;\n    rdfs:subPropertyOf schema:inDefinedTermSet ;\n    schema:domainIncludes schema:CategoryCode ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CategoryCodeSet,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:inPlaylist a rdf:Property ;\n    rdfs:label \"inPlaylist\" ;\n    rdfs:comment \"The playlist to which this recording belongs.\" ;\n    schema:domainIncludes schema:MusicRecording ;\n    schema:rangeIncludes schema:MusicPlaylist .\n\nschema:inProductGroupWithID a rdf:Property ;\n    rdfs:label \"inProductGroupWithID\" ;\n    rdfs:comment \"Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]]. \" ;\n    schema:domainIncludes schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1797> .\n\nschema:inStoreReturnsOffered a rdf:Property ;\n    rdfs:label \"inStoreReturnsOffered\" ;\n    rdfs:comment \"Are in-store returns offered?\" ;\n    schema:domainIncludes schema:MerchantReturnPolicy ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:inSupportOf a rdf:Property ;\n    rdfs:label \"inSupportOf\" ;\n    rdfs:comment \"Qualification, candidature, degree, application that Thesis supports.\" ;\n    schema:domainIncludes schema:Thesis ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:incentives a rdf:Property ;\n    rdfs:label \"incentives\" ;\n    rdfs:comment \"Description of bonus and commission compensation aspects of the job.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:incentiveCompensation .\n\nschema:includedComposition a rdf:Property ;\n    rdfs:label \"includedComposition\" ;\n    rdfs:comment \"Smaller compositions included in this work (e.g. a movement in a symphony).\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:MusicComposition ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:includedDataCatalog a rdf:Property ;\n    rdfs:label \"includedDataCatalog\" ;\n    rdfs:comment \"A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').\" ;\n    schema:domainIncludes schema:Dataset ;\n    schema:rangeIncludes schema:DataCatalog ;\n    schema:supersededBy schema:includedInDataCatalog .\n\nschema:includedInHealthInsurancePlan a rdf:Property ;\n    rdfs:label \"includedInHealthInsurancePlan\" ;\n    rdfs:comment \"The insurance plans that cover this drug.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HealthInsurancePlan ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:includedRiskFactor a rdf:Property ;\n    rdfs:label \"includedRiskFactor\" ;\n    rdfs:comment \"A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.\" ;\n    schema:domainIncludes schema:MedicalRiskEstimator ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalRiskFactor .\n\nschema:includesAttraction a rdf:Property ;\n    rdfs:label \"includesAttraction\" ;\n    rdfs:comment \"Attraction located at destination.\" ;\n    schema:domainIncludes schema:TouristDestination ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:TouristAttraction ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism>,\n        <https://github.com/schemaorg/schemaorg/issues/1810> .\n\nschema:includesHealthPlanFormulary a rdf:Property ;\n    rdfs:label \"includesHealthPlanFormulary\" ;\n    rdfs:comment \"Formularies covered by this plan.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HealthPlanFormulary ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:includesHealthPlanNetwork a rdf:Property ;\n    rdfs:label \"includesHealthPlanNetwork\" ;\n    rdfs:comment \"Networks covered by this plan.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HealthPlanNetwork ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:includesObject a rdf:Property ;\n    rdfs:label \"includesObject\" ;\n    rdfs:comment \"This links to a node or nodes indicating the exact quantity of the products included in  an [[Offer]] or [[ProductCollection]].\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:ProductCollection ;\n    schema:rangeIncludes schema:TypeAndQuantityNode ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:increasesRiskOf a rdf:Property ;\n    rdfs:label \"increasesRiskOf\" ;\n    rdfs:comment \"The condition, complication, etc. influenced by this factor.\" ;\n    schema:domainIncludes schema:MedicalRiskFactor ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity .\n\nschema:industry a rdf:Property ;\n    rdfs:label \"industry\" ;\n    rdfs:comment \"The industry associated with the job position.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text .\n\nschema:ineligibleRegion a rdf:Property ;\n    rdfs:label \"ineligibleRegion\" ;\n    rdfs:comment \"\"\"The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\\\\n\\\\nSee also [[eligibleRegion]].\n      \"\"\" ;\n    schema:domainIncludes schema:ActionAccessSpecification,\n        schema:DeliveryChargeSpecification,\n        schema:Demand,\n        schema:MediaObject,\n        schema:Offer ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:GeoShape,\n        schema:Place,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2242> .\n\nschema:infectiousAgent a rdf:Property ;\n    rdfs:label \"infectiousAgent\" ;\n    rdfs:comment \"The actual infectious agent, such as a specific bacterium.\" ;\n    schema:domainIncludes schema:InfectiousDisease ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:infectiousAgentClass a rdf:Property ;\n    rdfs:label \"infectiousAgentClass\" ;\n    rdfs:comment \"The class of infectious agent (bacteria, prion, etc.) that causes the disease.\" ;\n    schema:domainIncludes schema:InfectiousDisease ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:InfectiousAgentClass .\n\nschema:ingredients a rdf:Property ;\n    rdfs:label \"ingredients\" ;\n    rdfs:comment \"A single ingredient used in the recipe, e.g. sugar, flour or garlic.\" ;\n    rdfs:subPropertyOf schema:supply ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:recipeIngredient .\n\nschema:inker a rdf:Property ;\n    rdfs:label \"inker\" ;\n    rdfs:comment \"The individual who traces over the pencil drawings in ink after pencils are complete.\" ;\n    schema:domainIncludes schema:ComicIssue,\n        schema:ComicStory,\n        schema:VisualArtwork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Person .\n\nschema:insertion a rdf:Property ;\n    rdfs:label \"insertion\" ;\n    rdfs:comment \"The place of attachment of a muscle, or what the muscle moves.\" ;\n    schema:domainIncludes schema:Muscle ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure .\n\nschema:installUrl a rdf:Property ;\n    rdfs:label \"installUrl\" ;\n    rdfs:comment \"URL at which the app may be installed, if different from the URL of the item.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:URL .\n\nschema:instructor a rdf:Property ;\n    rdfs:label \"instructor\" ;\n    rdfs:comment \"A person assigned to instruct or provide instructional assistance for the [[CourseInstance]].\" ;\n    schema:domainIncludes schema:CourseInstance ;\n    schema:rangeIncludes schema:Person .\n\nschema:intensity a rdf:Property ;\n    rdfs:label \"intensity\" ;\n    rdfs:comment \"Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.\" ;\n    schema:domainIncludes schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue,\n        schema:Text .\n\nschema:interactingDrug a rdf:Property ;\n    rdfs:label \"interactingDrug\" ;\n    rdfs:comment \"Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Drug .\n\nschema:interactionCount a rdf:Property ;\n    rdfs:label \"interactionCount\" ;\n    rdfs:comment \"This property is deprecated, alongside the UserInteraction types on which it depended.\" ;\n    schema:supersededBy schema:interactionStatistic .\n\nschema:interactionService a rdf:Property ;\n    rdfs:label \"interactionService\" ;\n    rdfs:comment \"The WebSite or SoftwareApplication where the interactions took place.\" ;\n    schema:domainIncludes schema:InteractionCounter ;\n    schema:rangeIncludes schema:SoftwareApplication,\n        schema:WebSite .\n\nschema:interactionType a rdf:Property ;\n    rdfs:label \"interactionType\" ;\n    rdfs:comment \"The Action representing the type of interaction. For up votes, +1s, etc. use [[LikeAction]]. For down votes use [[DislikeAction]]. Otherwise, use the most specific Action.\" ;\n    schema:domainIncludes schema:InteractionCounter ;\n    schema:rangeIncludes schema:Action .\n\nschema:interactivityType a rdf:Property ;\n    rdfs:label \"interactivityType\" ;\n    rdfs:comment \"The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:interestRate a rdf:Property ;\n    rdfs:label \"interestRate\" ;\n    rdfs:comment \"The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.\" ;\n    schema:domainIncludes schema:FinancialProduct ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:inventoryLevel a rdf:Property ;\n    rdfs:label \"inventoryLevel\" ;\n    rdfs:comment \"The current approximate inventory level for the item or items.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:SomeProducts ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:inverseOf a rdf:Property ;\n    rdfs:label \"inverseOf\" ;\n    rdfs:comment \"Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.\" ;\n    schema:domainIncludes schema:Property ;\n    schema:isPartOf <https://meta.schema.org> ;\n    schema:rangeIncludes schema:Property .\n\nschema:isAcceptingNewPatients a rdf:Property ;\n    rdfs:label \"isAcceptingNewPatients\" ;\n    rdfs:comment \"Whether the provider is accepting new patients.\" ;\n    schema:domainIncludes schema:MedicalOrganization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:isAccessoryOrSparePartFor a rdf:Property ;\n    rdfs:label \"isAccessoryOrSparePartFor\" ;\n    rdfs:comment \"A pointer to another product (or multiple products) for which this product is an accessory or spare part.\" ;\n    schema:domainIncludes schema:Product ;\n    schema:rangeIncludes schema:Product ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:isAvailableGenerically a rdf:Property ;\n    rdfs:label \"isAvailableGenerically\" ;\n    rdfs:comment \"True if the drug is available in a generic form (regardless of name).\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:isBasedOnUrl a rdf:Property ;\n    rdfs:label \"isBasedOnUrl\" ;\n    rdfs:comment \"A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:Product,\n        schema:URL ;\n    schema:supersededBy schema:isBasedOn .\n\nschema:isConsumableFor a rdf:Property ;\n    rdfs:label \"isConsumableFor\" ;\n    rdfs:comment \"A pointer to another product (or multiple products) for which this product is a consumable.\" ;\n    schema:domainIncludes schema:Product ;\n    schema:rangeIncludes schema:Product ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:isFamilyFriendly a rdf:Property ;\n    rdfs:label \"isFamilyFriendly\" ;\n    rdfs:comment \"Indicates whether this content is family friendly.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:isGift a rdf:Property ;\n    rdfs:label \"isGift\" ;\n    rdfs:comment \"Was the offer accepted as a gift for someone other than the buyer.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:isLiveBroadcast a rdf:Property ;\n    rdfs:label \"isLiveBroadcast\" ;\n    rdfs:comment \"True if the broadcast is of a live event.\" ;\n    schema:domainIncludes schema:BroadcastEvent ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:isPlanForApartment a rdf:Property ;\n    rdfs:label \"isPlanForApartment\" ;\n    rdfs:comment \"Indicates some accommodation that this floor plan describes.\" ;\n    schema:domainIncludes schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Accommodation ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:isProprietary a rdf:Property ;\n    rdfs:label \"isProprietary\" ;\n    rdfs:comment \"True if this item's name is a proprietary/brand name (vs. generic name).\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:isRelatedTo a rdf:Property ;\n    rdfs:label \"isRelatedTo\" ;\n    rdfs:comment \"A pointer to another, somehow related product (or multiple products).\" ;\n    schema:domainIncludes schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:Product,\n        schema:Service ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:isResizable a rdf:Property ;\n    rdfs:label \"isResizable\" ;\n    rdfs:comment \"Whether the 3DModel allows resizing. For example, room layout applications often do not allow 3DModel elements to be resized to reflect reality.\" ;\n    schema:domainIncludes schema:3DModel ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2394> .\n\nschema:isSimilarTo a rdf:Property ;\n    rdfs:label \"isSimilarTo\" ;\n    rdfs:comment \"A pointer to another, functionally similar product (or multiple products).\" ;\n    schema:domainIncludes schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:Product,\n        schema:Service ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:isUnlabelledFallback a rdf:Property ;\n    rdfs:label \"isUnlabelledFallback\" ;\n    rdfs:comment \"This can be marked 'true' to indicate that some published [[DeliveryTimeSettings]] or [[ShippingRateSettings]] are intended to apply to all [[OfferShippingDetails]] published by the same merchant, when referenced by a [[shippingSettingsLink]] in those settings. It is not meaningful to use a 'true' value for this property alongside a transitTimeLabel (for [[DeliveryTimeSettings]]) or shippingLabel (for [[ShippingRateSettings]]), since this property is for use with unlabelled settings.\" ;\n    schema:domainIncludes schema:DeliveryTimeSettings,\n        schema:ShippingRateSettings ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:isbn a rdf:Property ;\n    rdfs:label \"isbn\" ;\n    rdfs:comment \"The ISBN of the book.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    ns2:equivalentProperty <http://purl.org/ontology/bibo/isbn> ;\n    schema:domainIncludes schema:Book ;\n    schema:rangeIncludes schema:Text .\n\nschema:isicV4 a rdf:Property ;\n    rdfs:label \"isicV4\" ;\n    rdfs:comment \"The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person,\n        schema:Place ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:isrcCode a rdf:Property ;\n    rdfs:label \"isrcCode\" ;\n    rdfs:comment \"The International Standard Recording Code for the recording.\" ;\n    schema:domainIncludes schema:MusicRecording ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:issn a rdf:Property ;\n    rdfs:label \"issn\" ;\n    rdfs:comment \"The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    ns2:equivalentProperty <http://purl.org/ontology/bibo/issn> ;\n    schema:domainIncludes schema:Blog,\n        schema:CreativeWorkSeries,\n        schema:Dataset,\n        schema:WebSite ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:issueNumber a rdf:Property ;\n    rdfs:label \"issueNumber\" ;\n    rdfs:comment \"Identifies the issue of publication; for example, \\\\\"iii\\\\\" or \\\\\"2\\\\\".\" ;\n    rdfs:subPropertyOf schema:position ;\n    ns2:equivalentProperty <http://purl.org/ontology/bibo/issue> ;\n    schema:domainIncludes schema:PublicationIssue ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:issuedBy a rdf:Property ;\n    rdfs:label \"issuedBy\" ;\n    rdfs:comment \"The organization issuing the ticket or permit.\" ;\n    schema:domainIncludes schema:Permit,\n        schema:Ticket ;\n    schema:rangeIncludes schema:Organization .\n\nschema:issuedThrough a rdf:Property ;\n    rdfs:label \"issuedThrough\" ;\n    rdfs:comment \"The service through with the permit was granted.\" ;\n    schema:domainIncludes schema:Permit ;\n    schema:rangeIncludes schema:Service .\n\nschema:iswcCode a rdf:Property ;\n    rdfs:label \"iswcCode\" ;\n    rdfs:comment \"The International Standard Musical Work Code for the composition.\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:item a rdf:Property ;\n    rdfs:label \"item\" ;\n    rdfs:comment \"An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')â€™.\" ;\n    schema:domainIncludes schema:DataFeedItem,\n        schema:ListItem ;\n    schema:rangeIncludes schema:Thing .\n\nschema:itemCondition a rdf:Property ;\n    rdfs:label \"itemCondition\" ;\n    rdfs:comment \"A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:rangeIncludes schema:OfferItemCondition .\n\nschema:itemListElement a rdf:Property ;\n    rdfs:label \"itemListElement\" ;\n    rdfs:comment \"For itemListElement values, you can use simple strings (e.g. \\\\\"Peter\\\\\", \\\\\"Paul\\\\\", \\\\\"Mary\\\\\"), existing entities, or use ListItem.\\\\n\\\\nText values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.\\\\n\\\\nNote: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.\" ;\n    schema:domainIncludes schema:ItemList ;\n    schema:rangeIncludes schema:ListItem,\n        schema:Text,\n        schema:Thing .\n\nschema:itemListOrder a rdf:Property ;\n    rdfs:label \"itemListOrder\" ;\n    rdfs:comment \"Type of ordering (e.g. Ascending, Descending, Unordered).\" ;\n    schema:domainIncludes schema:ItemList ;\n    schema:rangeIncludes schema:ItemListOrderType,\n        schema:Text .\n\nschema:itemLocation a rdf:Property ;\n    rdfs:label \"itemLocation\"@en ;\n    rdfs:comment \"Current location of the item.\"@en ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:ArchiveComponent ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Place,\n        schema:PostalAddress,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1758> .\n\nschema:itemReviewed a rdf:Property ;\n    rdfs:label \"itemReviewed\" ;\n    rdfs:comment \"The item that is being reviewed/rated.\" ;\n    schema:domainIncludes schema:AggregateRating,\n        schema:Review ;\n    schema:rangeIncludes schema:Thing .\n\nschema:itemShipped a rdf:Property ;\n    rdfs:label \"itemShipped\" ;\n    rdfs:comment \"Item(s) being shipped.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:Product .\n\nschema:itinerary a rdf:Property ;\n    rdfs:label \"itinerary\" ;\n    rdfs:comment \"Destination(s) ( [[Place]] ) that make up a trip. For a trip where destination order is important use [[ItemList]] to specify that order (see examples).\" ;\n    schema:domainIncludes schema:Trip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:ItemList,\n        schema:Place ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism>,\n        <https://github.com/schemaorg/schemaorg/issues/1810> .\n\nschema:jobImmediateStart a rdf:Property ;\n    rdfs:label \"jobImmediateStart\" ;\n    rdfs:comment \"An indicator as to whether a position is available for an immediate start.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2244> .\n\nschema:jobLocation a rdf:Property ;\n    rdfs:label \"jobLocation\" ;\n    rdfs:comment \"A (typically single) geographic location associated with the job position.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Place .\n\nschema:jobLocationType a rdf:Property ;\n    rdfs:label \"jobLocationType\" ;\n    rdfs:comment \"A description of the job location (e.g TELECOMMUTE for telecommute jobs).\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1591> .\n\nschema:jobStartDate a rdf:Property ;\n    rdfs:label \"jobStartDate\" ;\n    rdfs:comment \"The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Date,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2244> .\n\nschema:jobTitle a rdf:Property ;\n    rdfs:label \"jobTitle\" ;\n    rdfs:comment \"The job title of the person (for example, Financial Manager).\" ;\n    schema:domainIncludes schema:Person ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2192> .\n\nschema:keywords a rdf:Property ;\n    rdfs:label \"keywords\" ;\n    rdfs:comment \"Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text,\n        schema:URL .\n\nschema:knownVehicleDamages a rdf:Property ;\n    rdfs:label \"knownVehicleDamages\" ;\n    rdfs:comment \"A textual description of known damages, both repaired and unrepaired.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:knows a rdf:Property ;\n    rdfs:label \"knows\" ;\n    rdfs:comment \"The most generic bi-directional social/work relation.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person .\n\nschema:knowsAbout a rdf:Property ;\n    rdfs:label \"knowsAbout\" ;\n    rdfs:comment \"Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:Thing,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1688>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:knowsLanguage a rdf:Property ;\n    rdfs:label \"knowsLanguage\" ;\n    rdfs:comment \"Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Language,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1688>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:labelDetails a rdf:Property ;\n    rdfs:label \"labelDetails\" ;\n    rdfs:comment \"Link to the drug's label details.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:URL .\n\nschema:landlord a rdf:Property ;\n    rdfs:label \"landlord\" ;\n    rdfs:comment \"A sub property of participant. The owner of the real estate property.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:RentAction ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:language a rdf:Property ;\n    rdfs:label \"language\" ;\n    rdfs:comment \"A sub property of instrument. The language used on this action.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:CommunicateAction,\n        schema:WriteAction ;\n    schema:rangeIncludes schema:Language ;\n    schema:supersededBy schema:inLanguage .\n\nschema:lastReviewed a rdf:Property ;\n    rdfs:label \"lastReviewed\" ;\n    rdfs:comment \"Date on which the content on this web page was last reviewed for accuracy and/or completeness.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:Date .\n\nschema:latitude a rdf:Property ;\n    rdfs:label \"latitude\" ;\n    rdfs:comment \"The latitude of a location. For example \\`\\`\\`37.42242\\`\\`\\` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).\" ;\n    schema:domainIncludes schema:GeoCoordinates,\n        schema:Place ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:layoutImage a rdf:Property ;\n    rdfs:label \"layoutImage\" ;\n    rdfs:comment \"A schematic image showing the floorplan layout.\" ;\n    rdfs:subPropertyOf schema:image ;\n    schema:domainIncludes schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:ImageObject,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2690> .\n\nschema:learningResourceType a rdf:Property ;\n    rdfs:label \"learningResourceType\" ;\n    rdfs:comment \"The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:LearningResource ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text .\n\nschema:leaseLength a rdf:Property ;\n    rdfs:label \"leaseLength\" ;\n    rdfs:comment \"Length of the lease for some [[Accommodation]], either particular to some [[Offer]] or in some cases intrinsic to the property.\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:Offer,\n        schema:RealEstateListing ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Duration,\n        schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:legalName a rdf:Property ;\n    rdfs:label \"legalName\" ;\n    rdfs:comment \"The official name of the organization, e.g. the registered company name.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:legalStatus a rdf:Property ;\n    rdfs:label \"legalStatus\" ;\n    rdfs:comment \"The drug or supplement's legal status, including any controlled substance schedules that apply.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug,\n        schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DrugLegalStatus,\n        schema:MedicalEnumeration,\n        schema:Text .\n\nschema:legislationChanges a rdf:Property ;\n    rdfs:label \"legislationChanges\" ;\n    rdfs:comment \"Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href=\\\\\"/legislationConsolidates\\\\\">legislationConsolidates</a> property.\" ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#changes> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#changes> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Legislation ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationConsolidates a rdf:Property ;\n    rdfs:label \"legislationConsolidates\" ;\n    rdfs:comment \"Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.\" ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#consolidates> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#consolidates> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Legislation ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationDate a rdf:Property ;\n    rdfs:label \"legislationDate\" ;\n    rdfs:comment \"The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.\" ;\n    rdfs:subPropertyOf schema:dateCreated ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#date_document> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#date_document> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationDateVersion a rdf:Property ;\n    rdfs:label \"legislationDateVersion\" ;\n    rdfs:comment \"The point-in-time at which the provided description of the legislation is valid (e.g. : when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the \\\\\"National Insurance Contributions Act 2015\\\\\")\" ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#version_date> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#version_date> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationIdentifier a rdf:Property ;\n    rdfs:label \"legislationIdentifier\" ;\n    rdfs:comment \"An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    ns1:closeMatch <http://data.europa.eu/eli/ontology#id_local> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationJurisdiction a rdf:Property ;\n    rdfs:label \"legislationJurisdiction\" ;\n    rdfs:comment \"The jurisdiction from which the legislation originates.\" ;\n    rdfs:subPropertyOf schema:jurisdiction,\n        schema:spatialCoverage ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#jurisdiction> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#jurisdiction> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:AdministrativeArea,\n        schema:Text ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationLegalForce a rdf:Property ;\n    rdfs:label \"legislationLegalForce\" ;\n    rdfs:comment \"Whether the legislation is currently in force, not in force, or partially in force.\" ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#in_force> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#in_force> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:LegalForceStatus ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationLegalValue a rdf:Property ;\n    rdfs:label \"legislationLegalValue\" ;\n    rdfs:comment \"The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a \\\\\"stronger\\\\\" legal value than the HTML file of the same act.\" ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#legal_value> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#legal_value> ;\n    schema:domainIncludes schema:LegislationObject ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:LegalValueLevel ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationPassedBy a rdf:Property ;\n    rdfs:label \"legislationPassedBy\" ;\n    rdfs:comment \"The person or organization that originally passed or made the law : typically parliament (for primary legislation) or government (for secondary legislation). This indicates the \\\\\"legal author\\\\\" of the law, as opposed to its physical author.\" ;\n    rdfs:subPropertyOf schema:creator ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#passed_by> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#passed_by> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationResponsible a rdf:Property ;\n    rdfs:label \"legislationResponsible\" ;\n    rdfs:comment \"An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.\" ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#responsibility_of> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#responsibility_of> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationTransposes a rdf:Property ;\n    rdfs:label \"legislationTransposes\" ;\n    rdfs:comment \"Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.\" ;\n    rdfs:subPropertyOf schema:legislationApplies ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#transposes> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#transposes> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Legislation ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:legislationType a rdf:Property ;\n    rdfs:label \"legislationType\" ;\n    rdfs:comment \"The type of the legislation. Examples of values are \\\\\"law\\\\\", \\\\\"act\\\\\", \\\\\"directive\\\\\", \\\\\"decree\\\\\", \\\\\"regulation\\\\\", \\\\\"statutory instrument\\\\\", \\\\\"loi organique\\\\\", \\\\\"rÃ¨glement grand-ducal\\\\\", etc., depending on the country.\" ;\n    rdfs:subPropertyOf schema:genre ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#type_document> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#type_document> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CategoryCode,\n        schema:Text ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:leiCode a rdf:Property ;\n    rdfs:label \"leiCode\" ;\n    rdfs:comment \"An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF> .\n\nschema:lender a rdf:Property ;\n    rdfs:label \"lender\" ;\n    rdfs:comment \"A sub property of participant. The person that lends the object being borrowed.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:BorrowAction ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:lesser a rdf:Property ;\n    rdfs:label \"lesser\" ;\n    rdfs:comment \"This ordering relation for qualitative values indicates that the subject is lesser than the object.\" ;\n    schema:domainIncludes schema:QualitativeValue ;\n    schema:rangeIncludes schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:lesserOrEqual a rdf:Property ;\n    rdfs:label \"lesserOrEqual\" ;\n    rdfs:comment \"This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.\" ;\n    schema:domainIncludes schema:QualitativeValue ;\n    schema:rangeIncludes schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:letterer a rdf:Property ;\n    rdfs:label \"letterer\" ;\n    rdfs:comment \"The individual who adds lettering, including speech balloons and sound effects, to artwork.\" ;\n    schema:domainIncludes schema:ComicIssue,\n        schema:ComicStory,\n        schema:VisualArtwork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Person .\n\nschema:license a rdf:Property ;\n    rdfs:label \"license\" ;\n    rdfs:comment \"A license document that applies to this content, typically indicated by URL.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL .\n\nschema:line a rdf:Property ;\n    rdfs:label \"line\" ;\n    rdfs:comment \"A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.\" ;\n    schema:domainIncludes schema:GeoShape ;\n    schema:rangeIncludes schema:Text .\n\nschema:linkRelationship a rdf:Property ;\n    rdfs:label \"linkRelationship\" ;\n    rdfs:comment \"Indicates the relationship type of a Web link. \" ;\n    schema:domainIncludes schema:LinkRole ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1045> .\n\nschema:liveBlogUpdate a rdf:Property ;\n    rdfs:label \"liveBlogUpdate\" ;\n    rdfs:comment \"An update to the LiveBlog.\" ;\n    schema:domainIncludes schema:LiveBlogPosting ;\n    schema:rangeIncludes schema:BlogPosting .\n\nschema:loanMortgageMandateAmount a rdf:Property ;\n    rdfs:label \"loanMortgageMandateAmount\" ;\n    rdfs:comment \"Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.\" ;\n    schema:domainIncludes schema:MortgageLoan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:loanPaymentAmount a rdf:Property ;\n    rdfs:label \"loanPaymentAmount\" ;\n    rdfs:comment \"The amount of money to pay in a single payment.\" ;\n    schema:domainIncludes schema:RepaymentSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:loanPaymentFrequency a rdf:Property ;\n    rdfs:label \"loanPaymentFrequency\" ;\n    rdfs:comment \"Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.\" ;\n    schema:domainIncludes schema:RepaymentSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:loanRepaymentForm a rdf:Property ;\n    rdfs:label \"loanRepaymentForm\" ;\n    rdfs:comment \"A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.\" ;\n    schema:domainIncludes schema:LoanOrCredit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:RepaymentSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:loanTerm a rdf:Property ;\n    rdfs:label \"loanTerm\" ;\n    rdfs:comment \"The duration of the loan or credit agreement.\" ;\n    rdfs:subPropertyOf schema:duration ;\n    schema:domainIncludes schema:LoanOrCredit ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:loanType a rdf:Property ;\n    rdfs:label \"loanType\" ;\n    rdfs:comment \"The type of a loan or credit.\" ;\n    schema:domainIncludes schema:LoanOrCredit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:locationCreated a rdf:Property ;\n    rdfs:label \"locationCreated\" ;\n    rdfs:comment \"The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Place .\n\nschema:lodgingUnitDescription a rdf:Property ;\n    rdfs:label \"lodgingUnitDescription\" ;\n    rdfs:comment \"A full description of the lodging unit.\" ;\n    schema:domainIncludes schema:LodgingReservation ;\n    schema:rangeIncludes schema:Text .\n\nschema:lodgingUnitType a rdf:Property ;\n    rdfs:label \"lodgingUnitType\" ;\n    rdfs:comment \"Textual description of the unit type (including suite vs. room, size of bed, etc.).\" ;\n    schema:domainIncludes schema:LodgingReservation ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text .\n\nschema:logo a rdf:Property ;\n    rdfs:label \"logo\" ;\n    rdfs:comment \"An associated logo.\" ;\n    rdfs:subPropertyOf schema:image ;\n    schema:domainIncludes schema:Brand,\n        schema:Organization,\n        schema:Place,\n        schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:ImageObject,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:longitude a rdf:Property ;\n    rdfs:label \"longitude\" ;\n    rdfs:comment \"The longitude of a location. For example \\`\\`\\`-122.08585\\`\\`\\` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).\" ;\n    schema:domainIncludes schema:GeoCoordinates,\n        schema:Place ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:loser a rdf:Property ;\n    rdfs:label \"loser\" ;\n    rdfs:comment \"A sub property of participant. The loser of the action.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:WinAction ;\n    schema:rangeIncludes schema:Person .\n\nschema:lowPrice a rdf:Property ;\n    rdfs:label \"lowPrice\" ;\n    rdfs:comment \"The lowest price of all offers available.\\\\n\\\\nUsage guidelines:\\\\n\\\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\\\\\\\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\" ;\n    schema:domainIncludes schema:AggregateOffer ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:lyricist a rdf:Property ;\n    rdfs:label \"lyricist\" ;\n    rdfs:comment \"The person who wrote the words.\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:Person ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:lyrics a rdf:Property ;\n    rdfs:label \"lyrics\" ;\n    rdfs:comment \"The words in the song.\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:maintainer a rdf:Property ;\n    rdfs:label \"maintainer\" ;\n    rdfs:comment \"\"\"A maintainer of a [[Dataset]], software package ([[SoftwareApplication]]), or other [[Project]]. A maintainer is a [[Person]] or [[Organization]] that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \"upstream\" sources. When [[maintainer]] is applied to a specific version of something e.g. a particular version or packaging of a [[Dataset]], it is always  possible that the upstream source has a different maintainer. The [[isBasedOn]] property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.\n      \"\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2311> .\n\nschema:manufacturer a rdf:Property ;\n    rdfs:label \"manufacturer\" ;\n    rdfs:comment \"The manufacturer of the product.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug,\n        schema:Product ;\n    schema:rangeIncludes schema:Organization .\n\nschema:map a rdf:Property ;\n    rdfs:label \"map\" ;\n    rdfs:comment \"A URL to a map of the place.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:URL ;\n    schema:supersededBy schema:hasMap .\n\nschema:mapType a rdf:Property ;\n    rdfs:label \"mapType\" ;\n    rdfs:comment \"Indicates the kind of Map, from the MapCategoryType Enumeration.\" ;\n    schema:domainIncludes schema:Map ;\n    schema:rangeIncludes schema:MapCategoryType .\n\nschema:maps a rdf:Property ;\n    rdfs:label \"maps\" ;\n    rdfs:comment \"A URL to a map of the place.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:URL ;\n    schema:supersededBy schema:hasMap .\n\nschema:marginOfError a rdf:Property ;\n    rdfs:label \"marginOfError\" ;\n    rdfs:comment \"A marginOfError for an [[Observation]].\" ;\n    schema:domainIncludes schema:Observation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:masthead a rdf:Property ;\n    rdfs:label \"masthead\" ;\n    rdfs:comment \"For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:materialExtent a rdf:Property ;\n    rdfs:label \"materialExtent\"@en ;\n    rdfs:comment \"The quantity of the materials being described or an expression of the physical space they occupy.\"@en ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1759> .\n\nschema:mathExpression a rdf:Property ;\n    rdfs:label \"mathExpression\" ;\n    rdfs:comment \"A mathematical expression (e.g. 'x^2-3x=0') that may be solved for a specific variable, simplified, or transformed. This can take many formats, e.g. LaTeX, Ascii-Math, or math as you would write with a keyboard.\" ;\n    schema:domainIncludes schema:MathSolver ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:SolveMathAction,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2740> .\n\nschema:maxPrice a rdf:Property ;\n    rdfs:label \"maxPrice\" ;\n    rdfs:comment \"The highest price if the price is a range.\" ;\n    schema:domainIncludes schema:PriceSpecification ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:maxValue a rdf:Property ;\n    rdfs:label \"maxValue\" ;\n    rdfs:comment \"The upper value of some characteristic or property.\" ;\n    schema:domainIncludes schema:MonetaryAmount,\n        schema:PropertyValue,\n        schema:PropertyValueSpecification,\n        schema:QuantitativeValue ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:maximumAttendeeCapacity a rdf:Property ;\n    rdfs:label \"maximumAttendeeCapacity\" ;\n    rdfs:comment \"The total number of individuals that may attend an event or venue.\" ;\n    schema:domainIncludes schema:Event,\n        schema:Place ;\n    schema:rangeIncludes schema:Integer .\n\nschema:maximumEnrollment a rdf:Property ;\n    rdfs:label \"maximumEnrollment\" ;\n    rdfs:comment \"The maximum number of students who may be enrolled in the program.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:maximumIntake a rdf:Property ;\n    rdfs:label \"maximumIntake\" ;\n    rdfs:comment \"Recommended intake of this supplement for a given population as defined by a specific recommending authority.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug,\n        schema:DrugStrength,\n        schema:Substance ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MaximumDoseSchedule .\n\nschema:maximumPhysicalAttendeeCapacity a rdf:Property ;\n    rdfs:label \"maximumPhysicalAttendeeCapacity\" ;\n    rdfs:comment \"The maximum physical attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OfflineEventAttendanceMode]] (or the offline aspects, in the case of a [[MixedEventAttendanceMode]]). \" ;\n    schema:domainIncludes schema:Event ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:maximumVirtualAttendeeCapacity a rdf:Property ;\n    rdfs:label \"maximumVirtualAttendeeCapacity\" ;\n    rdfs:comment \"The maximum physical attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OnlineEventAttendanceMode]] (or the online aspects, in the case of a [[MixedEventAttendanceMode]]). \" ;\n    schema:domainIncludes schema:Event ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1842> .\n\nschema:mealService a rdf:Property ;\n    rdfs:label \"mealService\" ;\n    rdfs:comment \"Description of the meals that will be provided or available for purchase.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:Text .\n\nschema:measuredProperty a rdf:Property ;\n    rdfs:label \"measuredProperty\" ;\n    rdfs:comment \"The measuredProperty of an [[Observation]], either a schema.org property, a property from other RDF-compatible systems e.g. W3C RDF Data Cube, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).\" ;\n    schema:domainIncludes schema:Observation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Property ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:measuredValue a rdf:Property ;\n    rdfs:label \"measuredValue\" ;\n    rdfs:comment \"The measuredValue of an [[Observation]].\" ;\n    schema:domainIncludes schema:Observation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DataType ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:measurementTechnique a rdf:Property ;\n    rdfs:label \"measurementTechnique\" ;\n    rdfs:comment \"\"\"A technique or technology used in a [[Dataset]] (or [[DataDownload]], [[DataCatalog]]),\ncorresponding to the method used for measuring the corresponding variable(s) (described using [[variableMeasured]]). This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but rather as a high level summary for dataset discovery.\n\nFor example, if [[variableMeasured]] is: molecule concentration, [[measurementTechnique]] could be: \"mass spectrometry\" or \"nmr spectroscopy\" or \"colorimetry\" or \"immunofluorescence\".\n\nIf the [[variableMeasured]] is \"depression rating\", the [[measurementTechnique]] could be \"Zung Scale\" or \"HAM-D\" or \"Beck Depression Inventory\".\n\nIf there are several [[variableMeasured]] properties recorded for some given data object, use a [[PropertyValue]] for each [[variableMeasured]] and attach the corresponding [[measurementTechnique]].\n      \"\"\" ;\n    schema:domainIncludes schema:DataCatalog,\n        schema:DataDownload,\n        schema:Dataset,\n        schema:PropertyValue ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1425> .\n\nschema:mechanismOfAction a rdf:Property ;\n    rdfs:label \"mechanismOfAction\" ;\n    rdfs:comment \"The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:mediaAuthenticityCategory a rdf:Property ;\n    rdfs:label \"mediaAuthenticityCategory\" ;\n    rdfs:comment \"Indicates a MediaManipulationRatingEnumeration classification of a media object (in the context of how it was published or shared).\" ;\n    schema:domainIncludes schema:MediaReview ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MediaManipulationRatingEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2450> .\n\nschema:median a rdf:Property ;\n    rdfs:label \"median\" ;\n    rdfs:comment \"The median value.\" ;\n    schema:domainIncludes schema:QuantitativeValueDistribution ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:medicalAudience a rdf:Property ;\n    rdfs:label \"medicalAudience\" ;\n    rdfs:comment \"Medical audience for page.\" ;\n    schema:domainIncludes schema:MedicalWebPage ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalAudience,\n        schema:MedicalAudienceType .\n\nschema:medicalSpecialty a rdf:Property ;\n    rdfs:label \"medicalSpecialty\" ;\n    rdfs:comment \"A medical specialty of the provider.\" ;\n    schema:domainIncludes schema:Hospital,\n        schema:MedicalClinic,\n        schema:MedicalOrganization,\n        schema:Physician ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalSpecialty .\n\nschema:medicineSystem a rdf:Property ;\n    rdfs:label \"medicineSystem\" ;\n    rdfs:comment \"The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.\" ;\n    schema:domainIncludes schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicineSystem .\n\nschema:meetsEmissionStandard a rdf:Property ;\n    rdfs:label \"meetsEmissionStandard\" ;\n    rdfs:comment \"Indicates that the vehicle meets the respective emission standard.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:members a rdf:Property ;\n    rdfs:label \"members\" ;\n    rdfs:comment \"A member of this organization.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:ProgramMembership ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:supersededBy schema:member .\n\nschema:membershipNumber a rdf:Property ;\n    rdfs:label \"membershipNumber\" ;\n    rdfs:comment \"A unique identifier for the membership.\" ;\n    schema:domainIncludes schema:ProgramMembership ;\n    schema:rangeIncludes schema:Text .\n\nschema:membershipPointsEarned a rdf:Property ;\n    rdfs:label \"membershipPointsEarned\" ;\n    rdfs:comment \"The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (e.g. stars, miles, etc.)\" ;\n    schema:domainIncludes schema:ProgramMembership ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2085> .\n\nschema:memoryRequirements a rdf:Property ;\n    rdfs:label \"memoryRequirements\" ;\n    rdfs:comment \"Minimum memory requirements.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:mentions a rdf:Property ;\n    rdfs:label \"mentions\" ;\n    rdfs:comment \"Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Thing .\n\nschema:menu a rdf:Property ;\n    rdfs:label \"menu\" ;\n    rdfs:comment \"Either the actual menu as a structured representation, as text, or a URL of the menu.\" ;\n    schema:domainIncludes schema:FoodEstablishment ;\n    schema:rangeIncludes schema:Menu,\n        schema:Text,\n        schema:URL ;\n    schema:supersededBy schema:hasMenu .\n\nschema:menuAddOn a rdf:Property ;\n    rdfs:label \"menuAddOn\" ;\n    rdfs:comment \"Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.\" ;\n    schema:domainIncludes schema:MenuItem ;\n    schema:rangeIncludes schema:MenuItem,\n        schema:MenuSection ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1541> .\n\nschema:merchant a rdf:Property ;\n    rdfs:label \"merchant\" ;\n    rdfs:comment \"'merchant' is an out-dated term for 'seller'.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:supersededBy schema:seller .\n\nschema:merchantReturnDays a rdf:Property ;\n    rdfs:label \"merchantReturnDays\" ;\n    rdfs:comment \"The merchantReturnDays property indicates the number of days (from purchase) within which relevant merchant return policy is applicable.\" ;\n    schema:domainIncludes schema:MerchantReturnPolicy ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:merchantReturnLink a rdf:Property ;\n    rdfs:label \"merchantReturnLink\" ;\n    rdfs:comment \"Indicates a Web page or service by URL, for product return.\" ;\n    schema:domainIncludes schema:MerchantReturnPolicy ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:messageAttachment a rdf:Property ;\n    rdfs:label \"messageAttachment\" ;\n    rdfs:comment \"A CreativeWork attached to the message.\" ;\n    schema:domainIncludes schema:Message ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:mileageFromOdometer a rdf:Property ;\n    rdfs:label \"mileageFromOdometer\" ;\n    rdfs:comment \"The total distance travelled by the particular vehicle since its initial production, as read from its odometer.\\\\n\\\\nTypical unit code(s): KMT for kilometers, SMI for statute miles\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:minPrice a rdf:Property ;\n    rdfs:label \"minPrice\" ;\n    rdfs:comment \"The lowest price if the price is a range.\" ;\n    schema:domainIncludes schema:PriceSpecification ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:minValue a rdf:Property ;\n    rdfs:label \"minValue\" ;\n    rdfs:comment \"The lower value of some characteristic or property.\" ;\n    schema:domainIncludes schema:MonetaryAmount,\n        schema:PropertyValue,\n        schema:PropertyValueSpecification,\n        schema:QuantitativeValue ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:minimumPaymentDue a rdf:Property ;\n    rdfs:label \"minimumPaymentDue\" ;\n    rdfs:comment \"The minimum payment required at this time.\" ;\n    schema:domainIncludes schema:Invoice ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:PriceSpecification .\n\nschema:missionCoveragePrioritiesPolicy a rdf:Property ;\n    rdfs:label \"missionCoveragePrioritiesPolicy\" ;\n    rdfs:comment \"For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:model a rdf:Property ;\n    rdfs:label \"model\" ;\n    rdfs:comment \"The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.\" ;\n    schema:domainIncludes schema:Product ;\n    schema:rangeIncludes schema:ProductModel,\n        schema:Text .\n\nschema:modelDate a rdf:Property ;\n    rdfs:label \"modelDate\" ;\n    rdfs:comment \"The release date of a vehicle model (often used to differentiate versions of the same make and model).\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:modifiedTime a rdf:Property ;\n    rdfs:label \"modifiedTime\" ;\n    rdfs:comment \"The date and time the reservation was modified.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:monthlyMinimumRepaymentAmount a rdf:Property ;\n    rdfs:label \"monthlyMinimumRepaymentAmount\" ;\n    rdfs:comment \"The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.\" ;\n    schema:domainIncludes schema:PaymentCard ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:monthsOfExperience a rdf:Property ;\n    rdfs:label \"monthsOfExperience\" ;\n    rdfs:comment \"Indicates the minimal number of months of experience required for a position.\" ;\n    schema:domainIncludes schema:OccupationalExperienceRequirements ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2681> .\n\nschema:mpn a rdf:Property ;\n    rdfs:label \"mpn\" ;\n    rdfs:comment \"The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:multipleValues a rdf:Property ;\n    rdfs:label \"multipleValues\" ;\n    rdfs:comment \"Whether multiple values are allowed for the property.  Default is false.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:muscleAction a rdf:Property ;\n    rdfs:label \"muscleAction\" ;\n    rdfs:comment \"The movement the muscle generates.\" ;\n    schema:domainIncludes schema:Muscle ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:musicArrangement a rdf:Property ;\n    rdfs:label \"musicArrangement\" ;\n    rdfs:comment \"An arrangement derived from the composition.\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:MusicComposition ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:musicBy a rdf:Property ;\n    rdfs:label \"musicBy\" ;\n    rdfs:comment \"The composer of the soundtrack.\" ;\n    schema:domainIncludes schema:Clip,\n        schema:Episode,\n        schema:Movie,\n        schema:MovieSeries,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGame,\n        schema:VideoGameSeries,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:MusicGroup,\n        schema:Person .\n\nschema:musicCompositionForm a rdf:Property ;\n    rdfs:label \"musicCompositionForm\" ;\n    rdfs:comment \"The type of composition (e.g. overture, sonata, symphony, etc.).\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:musicGroupMember a rdf:Property ;\n    rdfs:label \"musicGroupMember\" ;\n    rdfs:comment \"A member of a music group&#x2014;for example, John, Paul, George, or Ringo.\" ;\n    schema:domainIncludes schema:MusicGroup ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:member .\n\nschema:musicReleaseFormat a rdf:Property ;\n    rdfs:label \"musicReleaseFormat\" ;\n    rdfs:comment \"Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).\" ;\n    schema:domainIncludes schema:MusicRelease ;\n    schema:rangeIncludes schema:MusicReleaseFormatType ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:musicalKey a rdf:Property ;\n    rdfs:label \"musicalKey\" ;\n    rdfs:comment \"The key, mode, or scale this composition uses.\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:naics a rdf:Property ;\n    rdfs:label \"naics\" ;\n    rdfs:comment \"The North American Industry Classification System (NAICS) code for a particular organization or business person.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:name a rdf:Property ;\n    rdfs:label \"name\" ;\n    rdfs:comment \"The name of the item.\" ;\n    rdfs:subPropertyOf rdfs:label ;\n    ns2:equivalentProperty <http://purl.org/dc/terms/title> ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:Text .\n\nschema:namedPosition a rdf:Property ;\n    rdfs:label \"namedPosition\" ;\n    rdfs:comment \"A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.\" ;\n    schema:domainIncludes schema:Role ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:supersededBy schema:roleName .\n\nschema:nationality a rdf:Property ;\n    rdfs:label \"nationality\" ;\n    rdfs:comment \"Nationality of the person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Country .\n\nschema:naturalProgression a rdf:Property ;\n    rdfs:label \"naturalProgression\" ;\n    rdfs:comment \"The expected progression of the condition if it is not treated and allowed to progress naturally.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:nerve a rdf:Property ;\n    rdfs:label \"nerve\" ;\n    rdfs:comment \"The underlying innervation associated with the muscle.\" ;\n    schema:domainIncludes schema:Muscle ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Nerve .\n\nschema:nerveMotor a rdf:Property ;\n    rdfs:label \"nerveMotor\" ;\n    rdfs:comment \"The neurological pathway extension that involves muscle control.\" ;\n    schema:domainIncludes schema:Nerve ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Muscle .\n\nschema:netWorth a rdf:Property ;\n    rdfs:label \"netWorth\" ;\n    rdfs:comment \"The total financial value of the person as calculated by subtracting assets from liabilities.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:PriceSpecification .\n\nschema:newsUpdatesAndGuidelines a rdf:Property ;\n    rdfs:label \"newsUpdatesAndGuidelines\" ;\n    rdfs:comment \"Indicates a page with news updates and guidelines. This could often be (but is not required to be) the main page containing [[SpecialAnnouncement]] markup on a site.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:nextItem a rdf:Property ;\n    rdfs:label \"nextItem\" ;\n    rdfs:comment \"A link to the ListItem that follows the current one.\" ;\n    schema:domainIncludes schema:ListItem ;\n    schema:rangeIncludes schema:ListItem .\n\nschema:noBylinesPolicy a rdf:Property ;\n    rdfs:label \"noBylinesPolicy\" ;\n    rdfs:comment \"For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1688>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:nonEqual a rdf:Property ;\n    rdfs:label \"nonEqual\" ;\n    rdfs:comment \"This ordering relation for qualitative values indicates that the subject is not equal to the object.\" ;\n    schema:domainIncludes schema:QualitativeValue ;\n    schema:rangeIncludes schema:QualitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:nonProprietaryName a rdf:Property ;\n    rdfs:label \"nonProprietaryName\" ;\n    rdfs:comment \"The generic name of this drug or supplement.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:nonprofitStatus a rdf:Property ;\n    rdfs:label \"nonprofitStatus\" ;\n    rdfs:comment \"nonprofit Status indicates the legal status of a non-profit organization in its primary place of business.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:NonprofitType ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2543> .\n\nschema:normalRange a rdf:Property ;\n    rdfs:label \"normalRange\" ;\n    rdfs:comment \"Range of acceptable values for a typical patient, when applicable.\" ;\n    schema:domainIncludes schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEnumeration,\n        schema:Text .\n\nschema:nsn a rdf:Property ;\n    rdfs:label \"nsn\" ;\n    rdfs:comment \"Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]]. \" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2126> .\n\nschema:numAdults a rdf:Property ;\n    rdfs:label \"numAdults\" ;\n    rdfs:comment \"The number of adults staying in the unit.\" ;\n    schema:domainIncludes schema:LodgingReservation ;\n    schema:rangeIncludes schema:Integer,\n        schema:QuantitativeValue .\n\nschema:numChildren a rdf:Property ;\n    rdfs:label \"numChildren\" ;\n    rdfs:comment \"The number of children staying in the unit.\" ;\n    schema:domainIncludes schema:LodgingReservation ;\n    schema:rangeIncludes schema:Integer,\n        schema:QuantitativeValue .\n\nschema:numConstraints a rdf:Property ;\n    rdfs:label \"numConstraints\" ;\n    rdfs:comment \"Indicates the number of constraints (not counting [[populationType]]) defined for a particular [[StatisticalPopulation]]. This helps applications understand if they have access to a sufficiently complete description of a [[StatisticalPopulation]].\" ;\n    schema:domainIncludes schema:StatisticalPopulation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:numTracks a rdf:Property ;\n    rdfs:label \"numTracks\" ;\n    rdfs:comment \"The number of tracks in this album or playlist.\" ;\n    schema:domainIncludes schema:MusicPlaylist ;\n    schema:rangeIncludes schema:Integer .\n\nschema:numberOfAccommodationUnits a rdf:Property ;\n    rdfs:label \"numberOfAccommodationUnits\" ;\n    rdfs:comment \"Indicates the total (available plus unavailable) number of accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAvailableAccommodationUnits]].\" ;\n    schema:domainIncludes schema:ApartmentComplex,\n        schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:numberOfAirbags a rdf:Property ;\n    rdfs:label \"numberOfAirbags\" ;\n    rdfs:comment \"The number or type of airbags in the vehicle.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Number,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:numberOfAvailableAccommodationUnits a rdf:Property ;\n    rdfs:label \"numberOfAvailableAccommodationUnits\" ;\n    rdfs:comment \"Indicates the number of available accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAccommodationUnits]].\" ;\n    schema:domainIncludes schema:ApartmentComplex,\n        schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:numberOfAxles a rdf:Property ;\n    rdfs:label \"numberOfAxles\" ;\n    rdfs:comment \"The number of axles.\\\\n\\\\nTypical unit code(s): C62\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:numberOfBathroomsTotal a rdf:Property ;\n    rdfs:label \"numberOfBathroomsTotal\" ;\n    rdfs:comment \"The total integer number of bathrooms in a some [[Accommodation]], following real estate conventions as [documented in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsTotalInteger+Field): \\\\\"The simple sum of the number of bathrooms. For example for a property with two Full Bathrooms and one Half Bathroom, the Bathrooms Total Integer will be 3.\\\\\". See also [[numberOfRooms]].\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:numberOfBedrooms a rdf:Property ;\n    rdfs:label \"numberOfBedrooms\" ;\n    rdfs:comment \"The total integer number of bedrooms in a some [[Accommodation]], [[ApartmentComplex]] or [[FloorPlan]].\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:ApartmentComplex,\n        schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:numberOfBeds a rdf:Property ;\n    rdfs:label \"numberOfBeds\" ;\n    rdfs:comment \"The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.\" ;\n    schema:domainIncludes schema:BedDetails ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:numberOfCredits a rdf:Property ;\n    rdfs:label \"numberOfCredits\" ;\n    rdfs:comment \"The number of credits or units awarded by a Course or required to complete an EducationalOccupationalProgram.\" ;\n    schema:domainIncludes schema:Course,\n        schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer,\n        schema:StructuredValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:numberOfDoors a rdf:Property ;\n    rdfs:label \"numberOfDoors\" ;\n    rdfs:comment \"The number of doors.\\\\n\\\\nTypical unit code(s): C62\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:numberOfEmployees a rdf:Property ;\n    rdfs:label \"numberOfEmployees\" ;\n    rdfs:comment \"The number of employees in an organization e.g. business.\" ;\n    schema:domainIncludes schema:BusinessAudience,\n        schema:Organization ;\n    schema:rangeIncludes schema:QuantitativeValue .\n\nschema:numberOfEpisodes a rdf:Property ;\n    rdfs:label \"numberOfEpisodes\" ;\n    rdfs:comment \"The number of episodes in this season or series.\" ;\n    schema:domainIncludes schema:CreativeWorkSeason,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Integer .\n\nschema:numberOfForwardGears a rdf:Property ;\n    rdfs:label \"numberOfForwardGears\" ;\n    rdfs:comment \"The total number of forward gears available for the transmission system of the vehicle.\\\\n\\\\nTypical unit code(s): C62\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:numberOfFullBathrooms a rdf:Property ;\n    rdfs:label \"numberOfFullBathrooms\" ;\n    rdfs:comment \"Number of full bathrooms - The total number of full and Â¾ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsFull field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsFull+Field).\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:numberOfItems a rdf:Property ;\n    rdfs:label \"numberOfItems\" ;\n    rdfs:comment \"The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.\" ;\n    schema:domainIncludes schema:ItemList ;\n    schema:rangeIncludes schema:Integer .\n\nschema:numberOfLoanPayments a rdf:Property ;\n    rdfs:label \"numberOfLoanPayments\" ;\n    rdfs:comment \"The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.\" ;\n    schema:domainIncludes schema:RepaymentSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:numberOfPages a rdf:Property ;\n    rdfs:label \"numberOfPages\" ;\n    rdfs:comment \"The number of pages in the book.\" ;\n    schema:domainIncludes schema:Book ;\n    schema:rangeIncludes schema:Integer .\n\nschema:numberOfPartialBathrooms a rdf:Property ;\n    rdfs:label \"numberOfPartialBathrooms\" ;\n    rdfs:comment \"Number of partial bathrooms - The total number of half and Â¼ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsPartial field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsPartial+Field). \" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:FloorPlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:numberOfPlayers a rdf:Property ;\n    rdfs:label \"numberOfPlayers\" ;\n    rdfs:comment \"Indicate how many people can play this game (minimum, maximum, or range).\" ;\n    schema:domainIncludes schema:Game,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:QuantitativeValue .\n\nschema:numberOfPreviousOwners a rdf:Property ;\n    rdfs:label \"numberOfPreviousOwners\" ;\n    rdfs:comment \"The number of owners of the vehicle, including the current one.\\\\n\\\\nTypical unit code(s): C62\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:numberOfRooms a rdf:Property ;\n    rdfs:label \"numberOfRooms\" ;\n    rdfs:comment \"\"\"The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.\nTypical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.\"\"\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:Apartment,\n        schema:FloorPlan,\n        schema:House,\n        schema:LodgingBusiness,\n        schema:SingleFamilyResidence,\n        schema:Suite ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:numberOfSeasons a rdf:Property ;\n    rdfs:label \"numberOfSeasons\" ;\n    rdfs:comment \"The number of seasons in this series.\" ;\n    schema:domainIncludes schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Integer .\n\nschema:numberedPosition a rdf:Property ;\n    rdfs:label \"numberedPosition\" ;\n    rdfs:comment \"A number associated with a role in an organization, for example, the number on an athlete's jersey.\" ;\n    schema:domainIncludes schema:OrganizationRole ;\n    schema:rangeIncludes schema:Number .\n\nschema:nutrition a rdf:Property ;\n    rdfs:label \"nutrition\" ;\n    rdfs:comment \"Nutrition information about the recipe or menu item.\" ;\n    schema:domainIncludes schema:MenuItem,\n        schema:Recipe ;\n    schema:rangeIncludes schema:NutritionInformation .\n\nschema:observationDate a rdf:Property ;\n    rdfs:label \"observationDate\" ;\n    rdfs:comment \"The observationDate of an [[Observation]].\" ;\n    schema:domainIncludes schema:Observation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DateTime ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:observedNode a rdf:Property ;\n    rdfs:label \"observedNode\" ;\n    rdfs:comment \"The observedNode of an [[Observation]], often a [[StatisticalPopulation]].\" ;\n    schema:domainIncludes schema:Observation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:StatisticalPopulation ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:occupancy a rdf:Property ;\n    rdfs:label \"occupancy\" ;\n    rdfs:comment \"\"\"The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).\nTypical unit code(s): C62 for person\"\"\" ;\n    schema:domainIncludes schema:Apartment,\n        schema:HotelRoom,\n        schema:SingleFamilyResidence,\n        schema:Suite ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:occupationLocation a rdf:Property ;\n    rdfs:label \"occupationLocation\" ;\n    rdfs:comment \" The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.\" ;\n    schema:domainIncludes schema:Occupation ;\n    schema:rangeIncludes schema:AdministrativeArea ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:occupationalCategory a rdf:Property ;\n    rdfs:label \"occupationalCategory\" ;\n    rdfs:comment \"\"\"A category describing the job, preferably using a term from a taxonomy such as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.\\\\\\\\n\nNote: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.\"\"\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram,\n        schema:JobPosting,\n        schema:Occupation,\n        schema:WorkBasedProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CategoryCode,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698>,\n        <https://github.com/schemaorg/schemaorg/issues/2192>,\n        <https://github.com/schemaorg/schemaorg/issues/2289>,\n        <https://github.com/schemaorg/schemaorg/issues/2460> .\n\nschema:occupationalCredentialAwarded a rdf:Property ;\n    rdfs:label \"occupationalCredentialAwarded\" ;\n    rdfs:comment \"A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.\" ;\n    schema:domainIncludes schema:Course,\n        schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EducationalOccupationalCredential,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:offerCount a rdf:Property ;\n    rdfs:label \"offerCount\" ;\n    rdfs:comment \"The number of offers for the product.\" ;\n    schema:domainIncludes schema:AggregateOffer ;\n    schema:rangeIncludes schema:Integer .\n\nschema:offersPrescriptionByMail a rdf:Property ;\n    rdfs:label \"offersPrescriptionByMail\" ;\n    rdfs:comment \"Whether prescriptions can be delivered by mail.\" ;\n    schema:domainIncludes schema:HealthPlanFormulary ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:openingHours a rdf:Property ;\n    rdfs:label \"openingHours\" ;\n    rdfs:comment \"The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.\\\\n\\\\n* Days are specified using the following two-letter combinations: \\`\\`\\`Mo\\`\\`\\`, \\`\\`\\`Tu\\`\\`\\`, \\`\\`\\`We\\`\\`\\`, \\`\\`\\`Th\\`\\`\\`, \\`\\`\\`Fr\\`\\`\\`, \\`\\`\\`Sa\\`\\`\\`, \\`\\`\\`Su\\`\\`\\`.\\\\\\\\n* Times are specified using 24:00 format. For example, 3pm is specified as \\`\\`\\`15:00\\`\\`\\`, 10am as \\`\\`\\`10:00\\`\\`\\`. \\\\\\\\n* Here is an example: <code>&lt;time itemprop=\\\\\"openingHours\\\\\" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.\\\\\\\\n* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.\" ;\n    schema:domainIncludes schema:CivicStructure,\n        schema:LocalBusiness ;\n    schema:rangeIncludes schema:Text .\n\nschema:openingHoursSpecification a rdf:Property ;\n    rdfs:label \"openingHoursSpecification\" ;\n    rdfs:comment \"The opening hours of a certain place.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:OpeningHoursSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:opens a rdf:Property ;\n    rdfs:label \"opens\" ;\n    rdfs:comment \"The opening hour of the place or service on the given day(s) of the week.\" ;\n    schema:domainIncludes schema:OpeningHoursSpecification ;\n    schema:rangeIncludes schema:Time ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:operatingSystem a rdf:Property ;\n    rdfs:label \"operatingSystem\" ;\n    rdfs:comment \"Operating systems supported (Windows 7, OSX 10.6, Android 1.6).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:opponent a rdf:Property ;\n    rdfs:label \"opponent\" ;\n    rdfs:comment \"A sub property of participant. The opponent on this action.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:rangeIncludes schema:Person .\n\nschema:option a rdf:Property ;\n    rdfs:label \"option\" ;\n    rdfs:comment \"A sub property of object. The options subject to this action.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:ChooseAction ;\n    schema:rangeIncludes schema:Text,\n        schema:Thing ;\n    schema:supersededBy schema:actionOption .\n\nschema:orderDate a rdf:Property ;\n    rdfs:label \"orderDate\" ;\n    rdfs:comment \"Date order was placed.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:orderDelivery a rdf:Property ;\n    rdfs:label \"orderDelivery\" ;\n    rdfs:comment \"The delivery of the parcel related to this order or order item.\" ;\n    schema:domainIncludes schema:Order,\n        schema:OrderItem ;\n    schema:rangeIncludes schema:ParcelDelivery .\n\nschema:orderItemNumber a rdf:Property ;\n    rdfs:label \"orderItemNumber\" ;\n    rdfs:comment \"The identifier of the order item.\" ;\n    schema:domainIncludes schema:OrderItem ;\n    schema:rangeIncludes schema:Text .\n\nschema:orderItemStatus a rdf:Property ;\n    rdfs:label \"orderItemStatus\" ;\n    rdfs:comment \"The current status of the order item.\" ;\n    schema:domainIncludes schema:OrderItem ;\n    schema:rangeIncludes schema:OrderStatus .\n\nschema:orderNumber a rdf:Property ;\n    rdfs:label \"orderNumber\" ;\n    rdfs:comment \"The identifier of the transaction.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Text .\n\nschema:orderQuantity a rdf:Property ;\n    rdfs:label \"orderQuantity\" ;\n    rdfs:comment \"The number of the item ordered. If the property is not set, assume the quantity is one.\" ;\n    schema:domainIncludes schema:OrderItem ;\n    schema:rangeIncludes schema:Number .\n\nschema:orderStatus a rdf:Property ;\n    rdfs:label \"orderStatus\" ;\n    rdfs:comment \"The current status of the order.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:OrderStatus .\n\nschema:orderedItem a rdf:Property ;\n    rdfs:label \"orderedItem\" ;\n    rdfs:comment \"The item ordered.\" ;\n    schema:domainIncludes schema:Order,\n        schema:OrderItem ;\n    schema:rangeIncludes schema:OrderItem,\n        schema:Product,\n        schema:Service .\n\nschema:organizer a rdf:Property ;\n    rdfs:label \"organizer\" ;\n    rdfs:comment \"An organizer of an Event.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:originAddress a rdf:Property ;\n    rdfs:label \"originAddress\" ;\n    rdfs:comment \"Shipper's address.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:PostalAddress .\n\nschema:originatesFrom a rdf:Property ;\n    rdfs:label \"originatesFrom\" ;\n    rdfs:comment \"The vasculature the lymphatic structure originates, or afferents, from.\" ;\n    schema:domainIncludes schema:LymphaticVessel ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Vessel .\n\nschema:overdosage a rdf:Property ;\n    rdfs:label \"overdosage\" ;\n    rdfs:comment \"Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:ownedFrom a rdf:Property ;\n    rdfs:label \"ownedFrom\" ;\n    rdfs:comment \"The date and time of obtaining the product.\" ;\n    schema:domainIncludes schema:OwnershipInfo ;\n    schema:rangeIncludes schema:DateTime ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:ownedThrough a rdf:Property ;\n    rdfs:label \"ownedThrough\" ;\n    rdfs:comment \"The date and time of giving up ownership on the product.\" ;\n    schema:domainIncludes schema:OwnershipInfo ;\n    schema:rangeIncludes schema:DateTime ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:ownershipFundingInfo a rdf:Property ;\n    rdfs:label \"ownershipFundingInfo\" ;\n    rdfs:comment \"For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization,\n        schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:AboutPage,\n        schema:CreativeWork,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:owns a rdf:Property ;\n    rdfs:label \"owns\" ;\n    rdfs:comment \"Products owned by the organization or person.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:OwnershipInfo,\n        schema:Product ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:pageEnd a rdf:Property ;\n    rdfs:label \"pageEnd\" ;\n    rdfs:comment \"The page on which the work ends; for example \\\\\"138\\\\\" or \\\\\"xvi\\\\\".\" ;\n    ns2:equivalentProperty <http://purl.org/ontology/bibo/pageEnd> ;\n    schema:domainIncludes schema:Article,\n        schema:Chapter,\n        schema:PublicationIssue,\n        schema:PublicationVolume ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:pageStart a rdf:Property ;\n    rdfs:label \"pageStart\" ;\n    rdfs:comment \"The page on which the work starts; for example \\\\\"135\\\\\" or \\\\\"xiii\\\\\".\" ;\n    ns2:equivalentProperty <http://purl.org/ontology/bibo/pageStart> ;\n    schema:domainIncludes schema:Article,\n        schema:Chapter,\n        schema:PublicationIssue,\n        schema:PublicationVolume ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:pagination a rdf:Property ;\n    rdfs:label \"pagination\" ;\n    rdfs:comment \"Any description of pages that is not separated into pageStart and pageEnd; for example, \\\\\"1-6, 9, 55\\\\\" or \\\\\"10-12, 46-49\\\\\".\" ;\n    ns2:equivalentProperty <http://purl.org/ontology/bibo/pages> ;\n    schema:domainIncludes schema:Article,\n        schema:Chapter,\n        schema:PublicationIssue,\n        schema:PublicationVolume ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:parentItem a rdf:Property ;\n    rdfs:label \"parentItem\" ;\n    rdfs:comment \"The parent of a question, answer or item in general.\" ;\n    schema:domainIncludes schema:Comment ;\n    schema:rangeIncludes schema:Comment .\n\nschema:parentService a rdf:Property ;\n    rdfs:label \"parentService\" ;\n    rdfs:comment \"A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.\" ;\n    schema:domainIncludes schema:BroadcastService ;\n    schema:rangeIncludes schema:BroadcastService .\n\nschema:parents a rdf:Property ;\n    rdfs:label \"parents\" ;\n    rdfs:comment \"A parents of the person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:parent .\n\nschema:partOfEpisode a rdf:Property ;\n    rdfs:label \"partOfEpisode\" ;\n    rdfs:comment \"The episode to which this clip belongs.\" ;\n    rdfs:subPropertyOf schema:isPartOf ;\n    schema:domainIncludes schema:Clip ;\n    schema:rangeIncludes schema:Episode .\n\nschema:partOfInvoice a rdf:Property ;\n    rdfs:label \"partOfInvoice\" ;\n    rdfs:comment \"The order is being paid as part of the referenced Invoice.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:Invoice .\n\nschema:partOfOrder a rdf:Property ;\n    rdfs:label \"partOfOrder\" ;\n    rdfs:comment \"The overall order the items in this delivery were included in.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:Order .\n\nschema:partOfSeason a rdf:Property ;\n    rdfs:label \"partOfSeason\" ;\n    rdfs:comment \"The season to which this episode belongs.\" ;\n    rdfs:subPropertyOf schema:isPartOf ;\n    schema:domainIncludes schema:Clip,\n        schema:Episode ;\n    schema:rangeIncludes schema:CreativeWorkSeason .\n\nschema:partOfSystem a rdf:Property ;\n    rdfs:label \"partOfSystem\" ;\n    rdfs:comment \"The anatomical or organ system that this structure is part of.\" ;\n    schema:domainIncludes schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalSystem .\n\nschema:partOfTVSeries a rdf:Property ;\n    rdfs:label \"partOfTVSeries\" ;\n    rdfs:comment \"The TV series to which this episode or season belongs.\" ;\n    rdfs:subPropertyOf schema:isPartOf ;\n    schema:domainIncludes schema:TVClip,\n        schema:TVEpisode,\n        schema:TVSeason ;\n    schema:rangeIncludes schema:TVSeries ;\n    schema:supersededBy schema:partOfSeries .\n\nschema:partySize a rdf:Property ;\n    rdfs:label \"partySize\" ;\n    rdfs:comment \"Number of people the reservation should accommodate.\" ;\n    schema:domainIncludes schema:FoodEstablishmentReservation,\n        schema:TaxiReservation ;\n    schema:rangeIncludes schema:Integer,\n        schema:QuantitativeValue .\n\nschema:passengerPriorityStatus a rdf:Property ;\n    rdfs:label \"passengerPriorityStatus\" ;\n    rdfs:comment \"The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).\" ;\n    schema:domainIncludes schema:FlightReservation ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text .\n\nschema:passengerSequenceNumber a rdf:Property ;\n    rdfs:label \"passengerSequenceNumber\" ;\n    rdfs:comment \"The passenger's sequence number as assigned by the airline.\" ;\n    schema:domainIncludes schema:FlightReservation ;\n    schema:rangeIncludes schema:Text .\n\nschema:pathophysiology a rdf:Property ;\n    rdfs:label \"pathophysiology\" ;\n    rdfs:comment \"Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.\" ;\n    schema:domainIncludes schema:MedicalCondition,\n        schema:PhysicalActivity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:pattern a rdf:Property ;\n    rdfs:label \"pattern\" ;\n    rdfs:comment \"A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1797> .\n\nschema:payload a rdf:Property ;\n    rdfs:label \"payload\" ;\n    rdfs:comment \"The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.\\\\n\\\\nTypical unit code(s): KGM for kilogram, LBR for pound\\\\n\\\\n* Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of [[weight]] and [[payload]]\\\\\\\\n* Note 2: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\\\\\\\n* Note 3: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\\\\\\\n* Note 4: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:paymentAccepted a rdf:Property ;\n    rdfs:label \"paymentAccepted\" ;\n    rdfs:comment \"Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.\" ;\n    schema:domainIncludes schema:LocalBusiness ;\n    schema:rangeIncludes schema:Text .\n\nschema:paymentDue a rdf:Property ;\n    rdfs:label \"paymentDue\" ;\n    rdfs:comment \"The date that payment is due.\" ;\n    schema:domainIncludes schema:Invoice,\n        schema:Order ;\n    schema:rangeIncludes schema:DateTime ;\n    schema:supersededBy schema:paymentDueDate .\n\nschema:paymentMethod a rdf:Property ;\n    rdfs:label \"paymentMethod\" ;\n    rdfs:comment \"The name of the credit card or other method of payment for the order.\" ;\n    schema:domainIncludes schema:Invoice,\n        schema:Order ;\n    schema:rangeIncludes schema:PaymentMethod .\n\nschema:paymentMethodId a rdf:Property ;\n    rdfs:label \"paymentMethodId\" ;\n    rdfs:comment \"An identifier for the method of payment used (e.g. the last 4 digits of the credit card).\" ;\n    schema:domainIncludes schema:Invoice,\n        schema:Order ;\n    schema:rangeIncludes schema:Text .\n\nschema:paymentStatus a rdf:Property ;\n    rdfs:label \"paymentStatus\" ;\n    rdfs:comment \"The status of payment; whether the invoice has been paid or not.\" ;\n    schema:domainIncludes schema:Invoice ;\n    schema:rangeIncludes schema:PaymentStatusType,\n        schema:Text .\n\nschema:paymentUrl a rdf:Property ;\n    rdfs:label \"paymentUrl\" ;\n    rdfs:comment \"The URL for sending a payment.\" ;\n    schema:domainIncludes schema:Order ;\n    schema:rangeIncludes schema:URL .\n\nschema:penciler a rdf:Property ;\n    rdfs:label \"penciler\" ;\n    rdfs:comment \"The individual who draws the primary narrative artwork.\" ;\n    schema:domainIncludes schema:ComicIssue,\n        schema:ComicStory,\n        schema:VisualArtwork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Person .\n\nschema:percentile10 a rdf:Property ;\n    rdfs:label \"percentile10\" ;\n    rdfs:comment \"The 10th percentile value.\" ;\n    schema:domainIncludes schema:QuantitativeValueDistribution ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:percentile25 a rdf:Property ;\n    rdfs:label \"percentile25\" ;\n    rdfs:comment \"The 25th percentile value.\" ;\n    schema:domainIncludes schema:QuantitativeValueDistribution ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:percentile75 a rdf:Property ;\n    rdfs:label \"percentile75\" ;\n    rdfs:comment \"The 75th percentile value.\" ;\n    schema:domainIncludes schema:QuantitativeValueDistribution ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:percentile90 a rdf:Property ;\n    rdfs:label \"percentile90\" ;\n    rdfs:comment \"The 90th percentile value.\" ;\n    schema:domainIncludes schema:QuantitativeValueDistribution ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:performerIn a rdf:Property ;\n    rdfs:label \"performerIn\" ;\n    rdfs:comment \"Event that this person is a performer or participant in.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Event .\n\nschema:performers a rdf:Property ;\n    rdfs:label \"performers\" ;\n    rdfs:comment \"The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:supersededBy schema:performer .\n\nschema:permissionType a rdf:Property ;\n    rdfs:label \"permissionType\" ;\n    rdfs:comment \"The type of permission granted the person, organization, or audience.\" ;\n    schema:domainIncludes schema:DigitalDocumentPermission ;\n    schema:rangeIncludes schema:DigitalDocumentPermissionType .\n\nschema:permissions a rdf:Property ;\n    rdfs:label \"permissions\" ;\n    rdfs:comment \"Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:permitAudience a rdf:Property ;\n    rdfs:label \"permitAudience\" ;\n    rdfs:comment \"The target audience for this permit.\" ;\n    schema:domainIncludes schema:Permit ;\n    schema:rangeIncludes schema:Audience .\n\nschema:permittedUsage a rdf:Property ;\n    rdfs:label \"permittedUsage\" ;\n    rdfs:comment \"Indications regarding the permitted usage of the accommodation.\" ;\n    schema:domainIncludes schema:Accommodation ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:petsAllowed a rdf:Property ;\n    rdfs:label \"petsAllowed\" ;\n    rdfs:comment \"Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:ApartmentComplex,\n        schema:FloorPlan,\n        schema:LodgingBusiness ;\n    schema:rangeIncludes schema:Boolean,\n        schema:Text ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:phoneticText a rdf:Property ;\n    rdfs:label \"phoneticText\" ;\n    rdfs:comment \"Representation of a text [[textValue]] using the specified [[speechToTextMarkup]]. For example the city name of Houston in IPA: /ËˆhjuËstÉ™n/.\" ;\n    schema:domainIncludes schema:PronounceableText ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2108> .\n\nschema:photos a rdf:Property ;\n    rdfs:label \"photos\" ;\n    rdfs:comment \"Photographs of this place.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:ImageObject,\n        schema:Photograph ;\n    schema:supersededBy schema:photo .\n\nschema:physicalRequirement a rdf:Property ;\n    rdfs:label \"physicalRequirement\" ;\n    rdfs:comment \"A description of the types of physical activity associated with the job. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2384> .\n\nschema:physiologicalBenefits a rdf:Property ;\n    rdfs:label \"physiologicalBenefits\" ;\n    rdfs:comment \"Specific physiologic benefits associated to the plan.\" ;\n    schema:domainIncludes schema:Diet ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:pickupLocation a rdf:Property ;\n    rdfs:label \"pickupLocation\" ;\n    rdfs:comment \"Where a taxi will pick up a passenger or a rental car can be picked up.\" ;\n    schema:domainIncludes schema:RentalCarReservation,\n        schema:TaxiReservation ;\n    schema:rangeIncludes schema:Place .\n\nschema:pickupTime a rdf:Property ;\n    rdfs:label \"pickupTime\" ;\n    rdfs:comment \"When a taxi will pickup a passenger or a rental car can be picked up.\" ;\n    schema:domainIncludes schema:RentalCarReservation,\n        schema:TaxiReservation ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:playMode a rdf:Property ;\n    rdfs:label \"playMode\" ;\n    rdfs:comment \"Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.\" ;\n    schema:domainIncludes schema:VideoGame,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:GamePlayMode .\n\nschema:playerType a rdf:Property ;\n    rdfs:label \"playerType\" ;\n    rdfs:comment \"Player type required&#x2014;for example, Flash or Silverlight.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:playersOnline a rdf:Property ;\n    rdfs:label \"playersOnline\" ;\n    rdfs:comment \"Number of players on the server.\" ;\n    schema:domainIncludes schema:GameServer ;\n    schema:rangeIncludes schema:Integer .\n\nschema:polygon a rdf:Property ;\n    rdfs:label \"polygon\" ;\n    rdfs:comment \"A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.\" ;\n    schema:domainIncludes schema:GeoShape ;\n    schema:rangeIncludes schema:Text .\n\nschema:populationType a rdf:Property ;\n    rdfs:label \"populationType\" ;\n    rdfs:comment \"Indicates the populationType common to all members of a [[StatisticalPopulation]].\" ;\n    schema:domainIncludes schema:StatisticalPopulation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Class ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2291> .\n\nschema:possibleComplication a rdf:Property ;\n    rdfs:label \"possibleComplication\" ;\n    rdfs:comment \"A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:possibleTreatment a rdf:Property ;\n    rdfs:label \"possibleTreatment\" ;\n    rdfs:comment \"A possible treatment to address this condition, sign or symptom.\" ;\n    schema:domainIncludes schema:MedicalCondition,\n        schema:MedicalSignOrSymptom ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTherapy .\n\nschema:postOfficeBoxNumber a rdf:Property ;\n    rdfs:label \"postOfficeBoxNumber\" ;\n    rdfs:comment \"The post office box number for PO box addresses.\" ;\n    schema:domainIncludes schema:PostalAddress ;\n    schema:rangeIncludes schema:Text .\n\nschema:postOp a rdf:Property ;\n    rdfs:label \"postOp\" ;\n    rdfs:comment \"A description of the postoperative procedures, care, and/or followups for this device.\" ;\n    schema:domainIncludes schema:MedicalDevice ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:postalCode a rdf:Property ;\n    rdfs:label \"postalCode\" ;\n    rdfs:comment \"The postal code. For example, 94043.\" ;\n    schema:domainIncludes schema:DefinedRegion,\n        schema:GeoCoordinates,\n        schema:GeoShape,\n        schema:PostalAddress ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:postalCodeBegin a rdf:Property ;\n    rdfs:label \"postalCodeBegin\" ;\n    rdfs:comment \"First postal code in a range (included).\" ;\n    schema:domainIncludes schema:PostalCodeRangeSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:postalCodeEnd a rdf:Property ;\n    rdfs:label \"postalCodeEnd\" ;\n    rdfs:comment \"Last postal code in the range (included). Needs to be after [[postalCodeBegin]].\" ;\n    schema:domainIncludes schema:PostalCodeRangeSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:postalCodePrefix a rdf:Property ;\n    rdfs:label \"postalCodePrefix\" ;\n    rdfs:comment \"A defined range of postal codes indicated by a common textual prefix. Used for non-numeric systems such as UK.\" ;\n    schema:domainIncludes schema:DefinedRegion ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:postalCodeRange a rdf:Property ;\n    rdfs:label \"postalCodeRange\" ;\n    rdfs:comment \"A defined range of postal codes.\" ;\n    schema:domainIncludes schema:DefinedRegion ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:PostalCodeRangeSpecification ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:potentialAction a rdf:Property ;\n    rdfs:label \"potentialAction\" ;\n    rdfs:comment \"Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.\" ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:Action .\n\nschema:preOp a rdf:Property ;\n    rdfs:label \"preOp\" ;\n    rdfs:comment \"A description of the workup, testing, and other preparations required before implanting this device.\" ;\n    schema:domainIncludes schema:MedicalDevice ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:predecessorOf a rdf:Property ;\n    rdfs:label \"predecessorOf\" ;\n    rdfs:comment \"A pointer from a previous, often discontinued variant of the product to its newer variant.\" ;\n    schema:domainIncludes schema:ProductModel ;\n    schema:rangeIncludes schema:ProductModel ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:pregnancyCategory a rdf:Property ;\n    rdfs:label \"pregnancyCategory\" ;\n    rdfs:comment \"Pregnancy category of this drug.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DrugPregnancyCategory .\n\nschema:pregnancyWarning a rdf:Property ;\n    rdfs:label \"pregnancyWarning\" ;\n    rdfs:comment \"Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:prepTime a rdf:Property ;\n    rdfs:label \"prepTime\" ;\n    rdfs:comment \"The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).\" ;\n    schema:domainIncludes schema:HowTo,\n        schema:HowToDirection ;\n    schema:rangeIncludes schema:Duration .\n\nschema:preparation a rdf:Property ;\n    rdfs:label \"preparation\" ;\n    rdfs:comment \"Typical preparation that a patient must undergo before having the procedure performed.\" ;\n    schema:domainIncludes schema:MedicalProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity,\n        schema:Text .\n\nschema:prescribingInfo a rdf:Property ;\n    rdfs:label \"prescribingInfo\" ;\n    rdfs:comment \"Link to prescribing information for the drug.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:URL .\n\nschema:prescriptionStatus a rdf:Property ;\n    rdfs:label \"prescriptionStatus\" ;\n    rdfs:comment \"Indicates the status of drug prescription eg. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:DrugPrescriptionStatus,\n        schema:Text .\n\nschema:previousItem a rdf:Property ;\n    rdfs:label \"previousItem\" ;\n    rdfs:comment \"A link to the ListItem that preceeds the current one.\" ;\n    schema:domainIncludes schema:ListItem ;\n    schema:rangeIncludes schema:ListItem .\n\nschema:previousStartDate a rdf:Property ;\n    rdfs:label \"previousStartDate\" ;\n    rdfs:comment \"Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Date .\n\nschema:price a rdf:Property ;\n    rdfs:label \"price\" ;\n    rdfs:comment \"\"\"The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\\\\n\\\\nUsage guidelines:\\\\n\\\\n* Use the [[priceCurrency]] property (with standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. \"BTC\"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. \"Ithaca HOUR\") instead of including [ambiguous symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) such as '$' in the value.\\\\\\\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\\\\\\\\n* Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.\\\\\\\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\n      \"\"\" ;\n    schema:domainIncludes schema:Offer,\n        schema:PriceSpecification,\n        schema:TradeAction ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:priceComponent a rdf:Property ;\n    rdfs:label \"priceComponent\" ;\n    rdfs:comment \"This property links to all [[UnitPriceSpecification]] nodes that apply in parallel for the [[CompoundPriceSpecification]] node.\" ;\n    schema:domainIncludes schema:CompoundPriceSpecification ;\n    schema:rangeIncludes schema:UnitPriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:priceComponentType a rdf:Property ;\n    rdfs:label \"priceComponentType\" ;\n    rdfs:comment \"Identifies a price component (for example, a line item on an invoice), part of the total price for an offer.\" ;\n    schema:domainIncludes schema:UnitPriceSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:PriceComponentTypeEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2689> .\n\nschema:priceCurrency a rdf:Property ;\n    rdfs:label \"priceCurrency\" ;\n    rdfs:comment \"The currency of the price, or a price component when attached to [[PriceSpecification]] and its subtypes.\\\\n\\\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217) e.g. \\\\\"USD\\\\\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies e.g. \\\\\"BTC\\\\\"; well known names for [Local Exchange Tradings Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types e.g. \\\\\"Ithaca HOUR\\\\\".\" ;\n    schema:domainIncludes schema:Offer,\n        schema:PriceSpecification,\n        schema:Reservation,\n        schema:Ticket,\n        schema:TradeAction ;\n    schema:rangeIncludes schema:Text .\n\nschema:priceRange a rdf:Property ;\n    rdfs:label \"priceRange\" ;\n    rdfs:comment \"The price range of the business, for example \\`\\`\\`$$$\\`\\`\\`.\" ;\n    schema:domainIncludes schema:LocalBusiness ;\n    schema:rangeIncludes schema:Text .\n\nschema:priceSpecification a rdf:Property ;\n    rdfs:label \"priceSpecification\" ;\n    rdfs:comment \"One or more detailed price specifications, indicating the unit price and delivery or payment charges.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:TradeAction ;\n    schema:rangeIncludes schema:PriceSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:priceType a rdf:Property ;\n    rdfs:label \"priceType\" ;\n    rdfs:comment \"Defines the type of a price specified for an offered product, for example a list price, a (temporary) sale price or a manufacturer suggested retail price. If multiple prices are specified for an offer the [[priceType]] property can be used to identify the type of each such specified price. The value of priceType can be specified as a value from enumeration PriceTypeEnumeration or as a free form text string for price types that are not already predefined in PriceTypeEnumeration.\" ;\n    schema:domainIncludes schema:CompoundPriceSpecification,\n        schema:UnitPriceSpecification ;\n    schema:rangeIncludes schema:PriceTypeEnumeration,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:priceValidUntil a rdf:Property ;\n    rdfs:label \"priceValidUntil\" ;\n    rdfs:comment \"The date after which the price is no longer available.\" ;\n    schema:domainIncludes schema:Offer ;\n    schema:rangeIncludes schema:Date .\n\nschema:primaryImageOfPage a rdf:Property ;\n    rdfs:label \"primaryImageOfPage\" ;\n    rdfs:comment \"Indicates the main image on the page.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:ImageObject .\n\nschema:primaryPrevention a rdf:Property ;\n    rdfs:label \"primaryPrevention\" ;\n    rdfs:comment \"A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTherapy .\n\nschema:printColumn a rdf:Property ;\n    rdfs:label \"printColumn\" ;\n    rdfs:comment \"The number of the column in which the NewsArticle appears in the print edition.\" ;\n    schema:domainIncludes schema:NewsArticle ;\n    schema:rangeIncludes schema:Text .\n\nschema:printEdition a rdf:Property ;\n    rdfs:label \"printEdition\" ;\n    rdfs:comment \"The edition of the print product in which the NewsArticle appears.\" ;\n    schema:domainIncludes schema:NewsArticle ;\n    schema:rangeIncludes schema:Text .\n\nschema:printPage a rdf:Property ;\n    rdfs:label \"printPage\" ;\n    rdfs:comment \"If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).\" ;\n    schema:domainIncludes schema:NewsArticle ;\n    schema:rangeIncludes schema:Text .\n\nschema:printSection a rdf:Property ;\n    rdfs:label \"printSection\" ;\n    rdfs:comment \"If this NewsArticle appears in print, this field indicates the print section in which the article appeared.\" ;\n    schema:domainIncludes schema:NewsArticle ;\n    schema:rangeIncludes schema:Text .\n\nschema:procedure a rdf:Property ;\n    rdfs:label \"procedure\" ;\n    rdfs:comment \"A description of the procedure involved in setting up, using, and/or installing the device.\" ;\n    schema:domainIncludes schema:MedicalDevice ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:procedureType a rdf:Property ;\n    rdfs:label \"procedureType\" ;\n    rdfs:comment \"The type of procedure, for example Surgical, Noninvasive, or Percutaneous.\" ;\n    schema:domainIncludes schema:MedicalProcedure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalProcedureType .\n\nschema:processingTime a rdf:Property ;\n    rdfs:label \"processingTime\" ;\n    rdfs:comment \"Estimated processing time for the service using this channel.\" ;\n    schema:domainIncludes schema:ServiceChannel ;\n    schema:rangeIncludes schema:Duration .\n\nschema:processorRequirements a rdf:Property ;\n    rdfs:label \"processorRequirements\" ;\n    rdfs:comment \"Processor architecture required to run the application (e.g. IA64).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:producer a rdf:Property ;\n    rdfs:label \"producer\" ;\n    rdfs:comment \"The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:produces a rdf:Property ;\n    rdfs:label \"produces\" ;\n    rdfs:comment \"The tangible thing generated by the service, e.g. a passport, permit, etc.\" ;\n    schema:domainIncludes schema:Service ;\n    schema:rangeIncludes schema:Thing ;\n    schema:supersededBy schema:serviceOutput .\n\nschema:productGroupID a rdf:Property ;\n    rdfs:label \"productGroupID\" ;\n    rdfs:comment \"Indicates a textual identifier for a ProductGroup.\" ;\n    schema:domainIncludes schema:ProductGroup ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1797> .\n\nschema:productID a rdf:Property ;\n    rdfs:label \"productID\" ;\n    rdfs:comment \"The product identifier, such as ISBN. For example: \\`\\`\\` meta itemprop=\\\\\"productID\\\\\" content=\\\\\"isbn:123-456-789\\\\\" \\`\\`\\`.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Product ;\n    schema:rangeIncludes schema:Text .\n\nschema:productSupported a rdf:Property ;\n    rdfs:label \"productSupported\" ;\n    rdfs:comment \"The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \\\\\"iPhone\\\\\") or a general category of products or services (e.g. \\\\\"smartphones\\\\\").\" ;\n    schema:domainIncludes schema:ContactPoint ;\n    schema:rangeIncludes schema:Product,\n        schema:Text .\n\nschema:productionCompany a rdf:Property ;\n    rdfs:label \"productionCompany\" ;\n    rdfs:comment \"The production company or studio responsible for the item e.g. series, video game, episode etc.\" ;\n    schema:domainIncludes schema:CreativeWorkSeason,\n        schema:Episode,\n        schema:MediaObject,\n        schema:Movie,\n        schema:MovieSeries,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Organization .\n\nschema:productionDate a rdf:Property ;\n    rdfs:label \"productionDate\" ;\n    rdfs:comment \"The date of production of the item, e.g. vehicle.\" ;\n    schema:domainIncludes schema:Product,\n        schema:Vehicle ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:proficiencyLevel a rdf:Property ;\n    rdfs:label \"proficiencyLevel\" ;\n    rdfs:comment \"Proficiency needed for this content; expected values: 'Beginner', 'Expert'.\" ;\n    schema:domainIncludes schema:TechArticle ;\n    schema:rangeIncludes schema:Text .\n\nschema:programMembershipUsed a rdf:Property ;\n    rdfs:label \"programMembershipUsed\" ;\n    rdfs:comment \"Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:ProgramMembership .\n\nschema:programName a rdf:Property ;\n    rdfs:label \"programName\" ;\n    rdfs:comment \"The program providing the membership.\" ;\n    schema:domainIncludes schema:ProgramMembership ;\n    schema:rangeIncludes schema:Text .\n\nschema:programPrerequisites a rdf:Property ;\n    rdfs:label \"programPrerequisites\" ;\n    rdfs:comment \"Prerequisites for enrolling in the program.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:AlignmentObject,\n        schema:Course,\n        schema:EducationalOccupationalCredential,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:programType a rdf:Property ;\n    rdfs:label \"programType\" ;\n    rdfs:comment \"The type of educational or occupational program. For example, classroom, internship, alternance, etc..\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2460> .\n\nschema:programmingLanguage a rdf:Property ;\n    rdfs:label \"programmingLanguage\" ;\n    rdfs:comment \"The computer programming language.\" ;\n    schema:domainIncludes schema:SoftwareSourceCode ;\n    schema:rangeIncludes schema:ComputerLanguage,\n        schema:Text .\n\nschema:programmingModel a rdf:Property ;\n    rdfs:label \"programmingModel\" ;\n    rdfs:comment \"Indicates whether API is managed or unmanaged.\" ;\n    schema:domainIncludes schema:APIReference ;\n    schema:rangeIncludes schema:Text .\n\nschema:propertyID a rdf:Property ;\n    rdfs:label \"propertyID\" ;\n    rdfs:comment \"\"\"A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be\n(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)\na URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).\nStandards bodies should promote a standard prefix for the identifiers of properties from their standards.\"\"\" ;\n    schema:domainIncludes schema:PropertyValue ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:proprietaryName a rdf:Property ;\n    rdfs:label \"proprietaryName\" ;\n    rdfs:comment \"Proprietary name given to the diet plan, typically by its originator or creator.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:proteinContent a rdf:Property ;\n    rdfs:label \"proteinContent\" ;\n    rdfs:comment \"The number of grams of protein.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:providerMobility a rdf:Property ;\n    rdfs:label \"providerMobility\" ;\n    rdfs:comment \"Indicates the mobility of a provided service (e.g. 'static', 'dynamic').\" ;\n    schema:domainIncludes schema:Service ;\n    schema:rangeIncludes schema:Text .\n\nschema:providesService a rdf:Property ;\n    rdfs:label \"providesService\" ;\n    rdfs:comment \"The service provided by this channel.\" ;\n    schema:domainIncludes schema:ServiceChannel ;\n    schema:rangeIncludes schema:Service .\n\nschema:publicAccess a rdf:Property ;\n    rdfs:label \"publicAccess\" ;\n    rdfs:comment \"A flag to signal that the [[Place]] is open to public visitors.  If this property is omitted there is no assumed default boolean value\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:publicTransportClosuresInfo a rdf:Property ;\n    rdfs:label \"publicTransportClosuresInfo\" ;\n    rdfs:comment \"Information about public transport closures.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:publication a rdf:Property ;\n    rdfs:label \"publication\" ;\n    rdfs:comment \"A publication event associated with the item.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:PublicationEvent .\n\nschema:publicationType a rdf:Property ;\n    rdfs:label \"publicationType\" ;\n    rdfs:comment \"The type of the medical article, taken from the US NLM MeSH publication type catalog. See also [MeSH documentation](http://www.nlm.nih.gov/mesh/pubtypes.html).\" ;\n    schema:domainIncludes schema:MedicalScholarlyArticle ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:publishedBy a rdf:Property ;\n    rdfs:label \"publishedBy\" ;\n    rdfs:comment \"An agent associated with the publication event.\" ;\n    schema:domainIncludes schema:PublicationEvent ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:publishedOn a rdf:Property ;\n    rdfs:label \"publishedOn\" ;\n    rdfs:comment \"A broadcast service associated with the publication event.\" ;\n    schema:domainIncludes schema:PublicationEvent ;\n    schema:rangeIncludes schema:BroadcastService .\n\nschema:publisher a rdf:Property ;\n    rdfs:label \"publisher\" ;\n    rdfs:comment \"The publisher of the creative work.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:publisherImprint a rdf:Property ;\n    rdfs:label \"publisherImprint\" ;\n    rdfs:comment \"The publishing division which published the comic.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Organization .\n\nschema:purchaseDate a rdf:Property ;\n    rdfs:label \"purchaseDate\" ;\n    rdfs:comment \"The date the item e.g. vehicle was purchased by the current owner.\" ;\n    schema:domainIncludes schema:Product,\n        schema:Vehicle ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:qualifications a rdf:Property ;\n    rdfs:label \"qualifications\" ;\n    rdfs:comment \"Specific qualifications required for this role or Occupation.\" ;\n    schema:domainIncludes schema:JobPosting,\n        schema:Occupation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:EducationalOccupationalCredential,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698>,\n        <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:quarantineGuidelines a rdf:Property ;\n    rdfs:label \"quarantineGuidelines\" ;\n    rdfs:comment \"Guidelines about quarantine rules, e.g. in the context of a pandemic.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:query a rdf:Property ;\n    rdfs:label \"query\" ;\n    rdfs:comment \"A sub property of instrument. The query used on this action.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:SearchAction ;\n    schema:rangeIncludes schema:Text .\n\nschema:quest a rdf:Property ;\n    rdfs:label \"quest\" ;\n    rdfs:comment \"The task that a player-controlled character, or group of characters may complete in order to gain a reward.\" ;\n    schema:domainIncludes schema:Game,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Thing .\n\nschema:question a rdf:Property ;\n    rdfs:label \"question\" ;\n    rdfs:comment \"A sub property of object. A question.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:AskAction ;\n    schema:rangeIncludes schema:Question .\n\nschema:rangeIncludes a rdf:Property ;\n    rdfs:label \"rangeIncludes\" ;\n    rdfs:comment \"Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.\" ;\n    schema:domainIncludes schema:Property ;\n    schema:isPartOf <https://meta.schema.org> ;\n    schema:rangeIncludes schema:Class .\n\nschema:ratingCount a rdf:Property ;\n    rdfs:label \"ratingCount\" ;\n    rdfs:comment \"The count of total number of ratings.\" ;\n    schema:domainIncludes schema:AggregateRating ;\n    schema:rangeIncludes schema:Integer .\n\nschema:ratingExplanation a rdf:Property ;\n    rdfs:label \"ratingExplanation\" ;\n    rdfs:comment \"A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with \\\\\"fact check\\\\\" markup using [[ClaimReview]].\" ;\n    schema:domainIncludes schema:Rating ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2300> .\n\nschema:ratingValue a rdf:Property ;\n    rdfs:label \"ratingValue\" ;\n    rdfs:comment \"The rating for the content.\\\\n\\\\nUsage guidelines:\\\\n\\\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\\\\\\\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\" ;\n    schema:domainIncludes schema:Rating ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:readBy a rdf:Property ;\n    rdfs:label \"readBy\" ;\n    rdfs:comment \"A person who reads (performs) the audiobook.\" ;\n    rdfs:subPropertyOf schema:actor ;\n    schema:domainIncludes schema:Audiobook ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Person .\n\nschema:readonlyValue a rdf:Property ;\n    rdfs:label \"readonlyValue\" ;\n    rdfs:comment \"Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \\\\\"hidden\\\\\" input in an HTML form.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:realEstateAgent a rdf:Property ;\n    rdfs:label \"realEstateAgent\" ;\n    rdfs:comment \"A sub property of participant. The real estate agent involved in the action.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:RentAction ;\n    schema:rangeIncludes schema:RealEstateAgent .\n\nschema:recipe a rdf:Property ;\n    rdfs:label \"recipe\" ;\n    rdfs:comment \"A sub property of instrument. The recipe/instructions used to perform the action.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:CookAction ;\n    schema:rangeIncludes schema:Recipe .\n\nschema:recipeCategory a rdf:Property ;\n    rdfs:label \"recipeCategory\" ;\n    rdfs:comment \"The category of the recipeâ€”for example, appetizer, entree, etc.\" ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:Text .\n\nschema:recipeCuisine a rdf:Property ;\n    rdfs:label \"recipeCuisine\" ;\n    rdfs:comment \"The cuisine of the recipe (for example, French or Ethiopian).\" ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:Text .\n\nschema:recipeInstructions a rdf:Property ;\n    rdfs:label \"recipeInstructions\" ;\n    rdfs:comment \"A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.\" ;\n    rdfs:subPropertyOf schema:step ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:ItemList,\n        schema:Text .\n\nschema:recipeYield a rdf:Property ;\n    rdfs:label \"recipeYield\" ;\n    rdfs:comment \"The quantity produced by the recipe (for example, number of people served, number of servings, etc).\" ;\n    rdfs:subPropertyOf schema:yield ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:QuantitativeValue,\n        schema:Text .\n\nschema:recognizedBy a rdf:Property ;\n    rdfs:label \"recognizedBy\" ;\n    rdfs:comment \"An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.\" ;\n    schema:domainIncludes schema:EducationalOccupationalCredential ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Organization ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:recognizingAuthority a rdf:Property ;\n    rdfs:label \"recognizingAuthority\" ;\n    rdfs:comment \"If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.\" ;\n    schema:domainIncludes schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Organization .\n\nschema:recommendationStrength a rdf:Property ;\n    rdfs:label \"recommendationStrength\" ;\n    rdfs:comment \"Strength of the guideline's recommendation (e.g. 'class I').\" ;\n    schema:domainIncludes schema:MedicalGuidelineRecommendation ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:recommendedIntake a rdf:Property ;\n    rdfs:label \"recommendedIntake\" ;\n    rdfs:comment \"Recommended intake of this supplement for a given population as defined by a specific recommending authority.\" ;\n    schema:domainIncludes schema:DietarySupplement ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:RecommendedDoseSchedule .\n\nschema:recordLabel a rdf:Property ;\n    rdfs:label \"recordLabel\" ;\n    rdfs:comment \"The label that issued the release.\" ;\n    ns2:equivalentProperty <http://purl.org/ontology/mo/label> ;\n    schema:domainIncludes schema:MusicRelease ;\n    schema:rangeIncludes schema:Organization ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:recourseLoan a rdf:Property ;\n    rdfs:label \"recourseLoan\" ;\n    rdfs:comment \"The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.\" ;\n    schema:domainIncludes schema:LoanOrCredit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:referenceQuantity a rdf:Property ;\n    rdfs:label \"referenceQuantity\" ;\n    rdfs:comment \"The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.\" ;\n    schema:domainIncludes schema:UnitPriceSpecification ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsProperties>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:referencesOrder a rdf:Property ;\n    rdfs:label \"referencesOrder\" ;\n    rdfs:comment \"The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.\" ;\n    schema:domainIncludes schema:Invoice ;\n    schema:rangeIncludes schema:Order .\n\nschema:refundType a rdf:Property ;\n    rdfs:label \"refundType\" ;\n    rdfs:comment \"A refundType, from an enumerated list.\" ;\n    schema:domainIncludes schema:MerchantReturnPolicy ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:RefundTypeEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:regionDrained a rdf:Property ;\n    rdfs:label \"regionDrained\" ;\n    rdfs:comment \"The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.\" ;\n    schema:domainIncludes schema:LymphaticVessel,\n        schema:Vein ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure,\n        schema:AnatomicalSystem .\n\nschema:regionsAllowed a rdf:Property ;\n    rdfs:label \"regionsAllowed\" ;\n    rdfs:comment \"The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in [ISO 3166 format](http://en.wikipedia.org/wiki/ISO_3166).\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:Place .\n\nschema:relatedAnatomy a rdf:Property ;\n    rdfs:label \"relatedAnatomy\" ;\n    rdfs:comment \"Anatomical systems or structures that relate to the superficial anatomy.\" ;\n    schema:domainIncludes schema:SuperficialAnatomy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure,\n        schema:AnatomicalSystem .\n\nschema:relatedCondition a rdf:Property ;\n    rdfs:label \"relatedCondition\" ;\n    rdfs:comment \"A medical condition associated with this anatomy.\" ;\n    schema:domainIncludes schema:AnatomicalStructure,\n        schema:AnatomicalSystem,\n        schema:SuperficialAnatomy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalCondition .\n\nschema:relatedDrug a rdf:Property ;\n    rdfs:label \"relatedDrug\" ;\n    rdfs:comment \"Any other drug related to this one, for example commonly-prescribed alternatives.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Drug .\n\nschema:relatedLink a rdf:Property ;\n    rdfs:label \"relatedLink\" ;\n    rdfs:comment \"A link related to this web page, for example to other related web pages.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:URL .\n\nschema:relatedStructure a rdf:Property ;\n    rdfs:label \"relatedStructure\" ;\n    rdfs:comment \"Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.\" ;\n    schema:domainIncludes schema:AnatomicalSystem ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure .\n\nschema:relatedTherapy a rdf:Property ;\n    rdfs:label \"relatedTherapy\" ;\n    rdfs:comment \"A medical therapy related to this anatomy.\" ;\n    schema:domainIncludes schema:AnatomicalStructure,\n        schema:AnatomicalSystem,\n        schema:SuperficialAnatomy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTherapy .\n\nschema:relatedTo a rdf:Property ;\n    rdfs:label \"relatedTo\" ;\n    rdfs:comment \"The most generic familial relation.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person .\n\nschema:releaseDate a rdf:Property ;\n    rdfs:label \"releaseDate\" ;\n    rdfs:comment \"The release date of a product or product model. This can be used to distinguish the exact variant of a product.\" ;\n    schema:domainIncludes schema:Product ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:releaseNotes a rdf:Property ;\n    rdfs:label \"releaseNotes\" ;\n    rdfs:comment \"Description of what changed in this version.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:releasedEvent a rdf:Property ;\n    rdfs:label \"releasedEvent\" ;\n    rdfs:comment \"The place and time the release was issued, expressed as a PublicationEvent.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:PublicationEvent .\n\nschema:relevantOccupation a rdf:Property ;\n    rdfs:label \"relevantOccupation\" ;\n    rdfs:comment \"The Occupation for the JobPosting.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Occupation ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:relevantSpecialty a rdf:Property ;\n    rdfs:label \"relevantSpecialty\" ;\n    rdfs:comment \"If applicable, a medical specialty in which this entity is relevant.\" ;\n    schema:domainIncludes schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalSpecialty .\n\nschema:remainingAttendeeCapacity a rdf:Property ;\n    rdfs:label \"remainingAttendeeCapacity\" ;\n    rdfs:comment \"The number of attendee places for an event that remain unallocated.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Integer .\n\nschema:renegotiableLoan a rdf:Property ;\n    rdfs:label \"renegotiableLoan\" ;\n    rdfs:comment \"Whether the terms for payment of interest can be renegotiated during the life of the loan.\" ;\n    schema:domainIncludes schema:LoanOrCredit ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO>,\n        <https://github.com/schemaorg/schemaorg/issues/1253> .\n\nschema:repeatCount a rdf:Property ;\n    rdfs:label \"repeatCount\" ;\n    rdfs:comment \"Defines the number of times a recurring [[Event]] will take place\" ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:repeatFrequency a rdf:Property ;\n    rdfs:label \"repeatFrequency\" ;\n    rdfs:comment \"\"\"Defines the frequency at which [[Event]]s will occur according to a schedule [[Schedule]]. The intervals between\n      events should be defined as a [[Duration]] of time.\"\"\" ;\n    rdfs:subPropertyOf schema:frequency ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Duration,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:repetitions a rdf:Property ;\n    rdfs:label \"repetitions\" ;\n    rdfs:comment \"Number of times one should repeat the activity.\" ;\n    schema:domainIncludes schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue .\n\nschema:replacee a rdf:Property ;\n    rdfs:label \"replacee\" ;\n    rdfs:comment \"A sub property of object. The object that is being replaced.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:ReplaceAction ;\n    schema:rangeIncludes schema:Thing .\n\nschema:replacer a rdf:Property ;\n    rdfs:label \"replacer\" ;\n    rdfs:comment \"A sub property of object. The object that replaces.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:ReplaceAction ;\n    schema:rangeIncludes schema:Thing .\n\nschema:replyToUrl a rdf:Property ;\n    rdfs:label \"replyToUrl\" ;\n    rdfs:comment \"The URL at which a reply may be posted to the specified UserComment.\" ;\n    schema:domainIncludes schema:UserComments ;\n    schema:rangeIncludes schema:URL .\n\nschema:reportNumber a rdf:Property ;\n    rdfs:label \"reportNumber\" ;\n    rdfs:comment \"The number or other unique designator assigned to a Report by the publishing organization.\" ;\n    schema:domainIncludes schema:Report ;\n    schema:rangeIncludes schema:Text .\n\nschema:representativeOfPage a rdf:Property ;\n    rdfs:label \"representativeOfPage\" ;\n    rdfs:comment \"Indicates whether this image is representative of the content of the page.\" ;\n    schema:domainIncludes schema:ImageObject ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:requiredCollateral a rdf:Property ;\n    rdfs:label \"requiredCollateral\" ;\n    rdfs:comment \"Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)\" ;\n    schema:domainIncludes schema:LoanOrCredit ;\n    schema:rangeIncludes schema:Text,\n        schema:Thing ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO> .\n\nschema:requiredGender a rdf:Property ;\n    rdfs:label \"requiredGender\" ;\n    rdfs:comment \"Audiences defined by a person's gender.\" ;\n    schema:domainIncludes schema:PeopleAudience ;\n    schema:rangeIncludes schema:Text .\n\nschema:requiredMaxAge a rdf:Property ;\n    rdfs:label \"requiredMaxAge\" ;\n    rdfs:comment \"Audiences defined by a person's maximum age.\" ;\n    schema:domainIncludes schema:PeopleAudience ;\n    schema:rangeIncludes schema:Integer .\n\nschema:requiredMinAge a rdf:Property ;\n    rdfs:label \"requiredMinAge\" ;\n    rdfs:comment \"Audiences defined by a person's minimum age.\" ;\n    schema:domainIncludes schema:PeopleAudience ;\n    schema:rangeIncludes schema:Integer .\n\nschema:requiredQuantity a rdf:Property ;\n    rdfs:label \"requiredQuantity\" ;\n    rdfs:comment \"The required quantity of the item(s).\" ;\n    schema:domainIncludes schema:HowToItem ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue,\n        schema:Text .\n\nschema:requirements a rdf:Property ;\n    rdfs:label \"requirements\" ;\n    rdfs:comment \"Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:supersededBy schema:softwareRequirements .\n\nschema:requiresSubscription a rdf:Property ;\n    rdfs:label \"requiresSubscription\" ;\n    rdfs:comment \"Indicates if use of the media require a subscription  (either paid or free). Allowed values are \\`\\`\\`true\\`\\`\\` or \\`\\`\\`false\\`\\`\\` (note that an earlier version had 'yes', 'no').\" ;\n    schema:domainIncludes schema:ActionAccessSpecification,\n        schema:MediaObject ;\n    schema:rangeIncludes schema:Boolean,\n        schema:MediaSubscription ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1741> .\n\nschema:reservationFor a rdf:Property ;\n    rdfs:label \"reservationFor\" ;\n    rdfs:comment \"The thing -- flight, event, restaurant,etc. being reserved.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:Thing .\n\nschema:reservationId a rdf:Property ;\n    rdfs:label \"reservationId\" ;\n    rdfs:comment \"A unique identifier for the reservation.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:Text .\n\nschema:reservationStatus a rdf:Property ;\n    rdfs:label \"reservationStatus\" ;\n    rdfs:comment \"The current status of the reservation.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:ReservationStatusType .\n\nschema:reservedTicket a rdf:Property ;\n    rdfs:label \"reservedTicket\" ;\n    rdfs:comment \"A ticket associated with the reservation.\" ;\n    schema:domainIncludes schema:Reservation ;\n    schema:rangeIncludes schema:Ticket .\n\nschema:responsibilities a rdf:Property ;\n    rdfs:label \"responsibilities\" ;\n    rdfs:comment \"Responsibilities associated with this role or Occupation.\" ;\n    schema:domainIncludes schema:JobPosting,\n        schema:Occupation ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:restPeriods a rdf:Property ;\n    rdfs:label \"restPeriods\" ;\n    rdfs:comment \"How often one should break from the activity.\" ;\n    schema:domainIncludes schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue,\n        schema:Text .\n\nschema:resultComment a rdf:Property ;\n    rdfs:label \"resultComment\" ;\n    rdfs:comment \"A sub property of result. The Comment created or sent as a result of this action.\" ;\n    rdfs:subPropertyOf schema:result ;\n    schema:domainIncludes schema:CommentAction,\n        schema:ReplyAction ;\n    schema:rangeIncludes schema:Comment .\n\nschema:resultReview a rdf:Property ;\n    rdfs:label \"resultReview\" ;\n    rdfs:comment \"A sub property of result. The review that resulted in the performing of the action.\" ;\n    rdfs:subPropertyOf schema:result ;\n    schema:domainIncludes schema:ReviewAction ;\n    schema:rangeIncludes schema:Review .\n\nschema:returnFees a rdf:Property ;\n    rdfs:label \"returnFees\" ;\n    rdfs:comment \"Indicates (via enumerated options) the return fees policy for a MerchantReturnPolicy\" ;\n    schema:domainIncludes schema:MerchantReturnPolicy ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:ReturnFeesEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:returnPolicyCategory a rdf:Property ;\n    rdfs:label \"returnPolicyCategory\" ;\n    rdfs:comment \"A returnPolicyCategory expresses at most one of several enumerated kinds of return.\" ;\n    schema:domainIncludes schema:MerchantReturnPolicy ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MerchantReturnEnumeration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:reviewAspect a rdf:Property ;\n    rdfs:label \"reviewAspect\" ;\n    rdfs:comment \"This Review or Rating is relevant to this part or facet of the itemReviewed.\" ;\n    schema:domainIncludes schema:Guide,\n        schema:Rating,\n        schema:Review ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1689> .\n\nschema:reviewBody a rdf:Property ;\n    rdfs:label \"reviewBody\" ;\n    rdfs:comment \"The actual body of the review.\" ;\n    schema:domainIncludes schema:Review ;\n    schema:rangeIncludes schema:Text .\n\nschema:reviewCount a rdf:Property ;\n    rdfs:label \"reviewCount\" ;\n    rdfs:comment \"The count of total number of reviews.\" ;\n    schema:domainIncludes schema:AggregateRating ;\n    schema:rangeIncludes schema:Integer .\n\nschema:reviewRating a rdf:Property ;\n    rdfs:label \"reviewRating\" ;\n    rdfs:comment \"The rating given in this review. Note that reviews can themselves be rated. The \\`\\`\\`reviewRating\\`\\`\\` applies to rating given by the review. The [[aggregateRating]] property applies to the review itself, as a creative work.\" ;\n    schema:domainIncludes schema:Review ;\n    schema:rangeIncludes schema:Rating .\n\nschema:reviewedBy a rdf:Property ;\n    rdfs:label \"reviewedBy\" ;\n    rdfs:comment \"People or organizations that have reviewed the content on this web page for accuracy and/or completeness.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:reviews a rdf:Property ;\n    rdfs:label \"reviews\" ;\n    rdfs:comment \"Review of the item.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Offer,\n        schema:Organization,\n        schema:Place,\n        schema:Product ;\n    schema:rangeIncludes schema:Review ;\n    schema:supersededBy schema:review .\n\nschema:riskFactor a rdf:Property ;\n    rdfs:label \"riskFactor\" ;\n    rdfs:comment \"A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalRiskFactor .\n\nschema:risks a rdf:Property ;\n    rdfs:label \"risks\" ;\n    rdfs:comment \"Specific physiologic risks associated to the diet plan.\" ;\n    schema:domainIncludes schema:Diet ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:roofLoad a rdf:Property ;\n    rdfs:label \"roofLoad\" ;\n    rdfs:comment \"The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.\\\\n\\\\nTypical unit code(s): KGM for kilogram, LBR for pound\\\\n\\\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\\\\\\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]]\\\\\\\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:BusOrCoach,\n        schema:Car ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:rsvpResponse a rdf:Property ;\n    rdfs:label \"rsvpResponse\" ;\n    rdfs:comment \"The response (yes, no, maybe) to the RSVP.\" ;\n    schema:domainIncludes schema:RsvpAction ;\n    schema:rangeIncludes schema:RsvpResponseType .\n\nschema:runsTo a rdf:Property ;\n    rdfs:label \"runsTo\" ;\n    rdfs:comment \"The vasculature the lymphatic structure runs, or efferents, to.\" ;\n    schema:domainIncludes schema:LymphaticVessel ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Vessel .\n\nschema:runtime a rdf:Property ;\n    rdfs:label \"runtime\" ;\n    rdfs:comment \"Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).\" ;\n    schema:domainIncludes schema:SoftwareSourceCode ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:runtimePlatform .\n\nschema:rxcui a rdf:Property ;\n    rdfs:label \"rxcui\" ;\n    rdfs:comment \"The RxCUI drug identifier from RXNORM.\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:safetyConsideration a rdf:Property ;\n    rdfs:label \"safetyConsideration\" ;\n    rdfs:comment \"Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.\" ;\n    schema:domainIncludes schema:DietarySupplement ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:salaryCurrency a rdf:Property ;\n    rdfs:label \"salaryCurrency\" ;\n    rdfs:comment \"The currency (coded using [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) ) used for the main salary information in this job posting or for this employee.\" ;\n    schema:domainIncludes schema:EmployeeRole,\n        schema:JobPosting ;\n    schema:rangeIncludes schema:Text .\n\nschema:salaryUponCompletion a rdf:Property ;\n    rdfs:label \"salaryUponCompletion\" ;\n    rdfs:comment \"The expected salary upon completing the training.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmountDistribution ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:sameAs a rdf:Property ;\n    rdfs:label \"sameAs\" ;\n    rdfs:comment \"URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.\" ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:URL .\n\nschema:sampleType a rdf:Property ;\n    rdfs:label \"sampleType\" ;\n    rdfs:comment \"What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.\" ;\n    schema:domainIncludes schema:SoftwareSourceCode ;\n    schema:rangeIncludes schema:Text ;\n    schema:supersededBy schema:codeSampleType .\n\nschema:saturatedFatContent a rdf:Property ;\n    rdfs:label \"saturatedFatContent\" ;\n    rdfs:comment \"The number of grams of saturated fat.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:scheduleTimezone a rdf:Property ;\n    rdfs:label \"scheduleTimezone\" ;\n    rdfs:comment \"Indicates the timezone for which the time(s) indicated in the [[Schedule]] are given. The value provided should be among those listed in the IANA Time Zone Database.\" ;\n    schema:domainIncludes schema:Schedule ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457> .\n\nschema:scheduledPaymentDate a rdf:Property ;\n    rdfs:label \"scheduledPaymentDate\" ;\n    rdfs:comment \"The date the invoice is scheduled to be paid.\" ;\n    schema:domainIncludes schema:Invoice ;\n    schema:rangeIncludes schema:Date .\n\nschema:scheduledTime a rdf:Property ;\n    rdfs:label \"scheduledTime\" ;\n    rdfs:comment \"The time the object is scheduled to.\" ;\n    schema:domainIncludes schema:PlanAction ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:schemaVersion a rdf:Property ;\n    rdfs:label \"schemaVersion\" ;\n    rdfs:comment \"\"\"Indicates (by URL or string) a particular version of a schema used in some CreativeWork. This property was created primarily to\n    indicate the use of a specific schema.org release, e.g. \\`\\`\\`10.0\\`\\`\\` as a simple string, or more explicitly via URL, \\`\\`\\`https://schema.org/docs/releases.html#v10.0\\`\\`\\`. There may be situations in which other schemas might usefully be referenced this way, e.g. \\`\\`\\`http://dublincore.org/specifications/dublin-core/dces/1999-07-02/\\`\\`\\` but this has not been carefully explored in the community.\"\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:schoolClosuresInfo a rdf:Property ;\n    rdfs:label \"schoolClosuresInfo\" ;\n    rdfs:comment \"Information about school closures.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:screenCount a rdf:Property ;\n    rdfs:label \"screenCount\" ;\n    rdfs:comment \"The number of screens in the movie theater.\" ;\n    schema:domainIncludes schema:MovieTheater ;\n    schema:rangeIncludes schema:Number .\n\nschema:screenshot a rdf:Property ;\n    rdfs:label \"screenshot\" ;\n    rdfs:comment \"A link to a screenshot image of the app.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:ImageObject,\n        schema:URL .\n\nschema:sdDatePublished a rdf:Property ;\n    rdfs:label \"sdDatePublished\" ;\n    rdfs:comment \"Indicates the date on which the current structured data was generated / published. Typically used alongside [[sdPublisher]]\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1886> .\n\nschema:sdLicense a rdf:Property ;\n    rdfs:label \"sdLicense\" ;\n    rdfs:comment \"A license document that applies to this structured data, typically indicated by URL.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1886> .\n\nschema:sdPublisher a rdf:Property ;\n    rdfs:label \"sdPublisher\" ;\n    rdfs:comment \"\"\"Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The\n[[sdPublisher]] property helps make such practices more explicit.\"\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1886> .\n\nschema:seasonNumber a rdf:Property ;\n    rdfs:label \"seasonNumber\" ;\n    rdfs:comment \"Position of the season within an ordered group of seasons.\" ;\n    rdfs:subPropertyOf schema:position ;\n    schema:domainIncludes schema:CreativeWorkSeason ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text .\n\nschema:seasons a rdf:Property ;\n    rdfs:label \"seasons\" ;\n    rdfs:comment \"A season in a media series.\" ;\n    schema:domainIncludes schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:CreativeWorkSeason ;\n    schema:supersededBy schema:season .\n\nschema:seatNumber a rdf:Property ;\n    rdfs:label \"seatNumber\" ;\n    rdfs:comment \"The location of the reserved seat (e.g., 27).\" ;\n    schema:domainIncludes schema:Seat ;\n    schema:rangeIncludes schema:Text .\n\nschema:seatRow a rdf:Property ;\n    rdfs:label \"seatRow\" ;\n    rdfs:comment \"The row location of the reserved seat (e.g., B).\" ;\n    schema:domainIncludes schema:Seat ;\n    schema:rangeIncludes schema:Text .\n\nschema:seatSection a rdf:Property ;\n    rdfs:label \"seatSection\" ;\n    rdfs:comment \"The section location of the reserved seat (e.g. Orchestra).\" ;\n    schema:domainIncludes schema:Seat ;\n    schema:rangeIncludes schema:Text .\n\nschema:seatingCapacity a rdf:Property ;\n    rdfs:label \"seatingCapacity\" ;\n    rdfs:comment \"The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.\\\\n\\\\nTypical unit code(s): C62 for persons \" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:seatingType a rdf:Property ;\n    rdfs:label \"seatingType\" ;\n    rdfs:comment \"The type/class of the seat.\" ;\n    schema:domainIncludes schema:Seat ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text .\n\nschema:secondaryPrevention a rdf:Property ;\n    rdfs:label \"secondaryPrevention\" ;\n    rdfs:comment \"A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTherapy .\n\nschema:securityClearanceRequirement a rdf:Property ;\n    rdfs:label \"securityClearanceRequirement\" ;\n    rdfs:comment \"A description of any security clearance requirements of the job.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2384> .\n\nschema:securityScreening a rdf:Property ;\n    rdfs:label \"securityScreening\" ;\n    rdfs:comment \"The type of security screening the passenger is subject to.\" ;\n    schema:domainIncludes schema:FlightReservation ;\n    schema:rangeIncludes schema:Text .\n\nschema:seeks a rdf:Property ;\n    rdfs:label \"seeks\" ;\n    rdfs:comment \"A pointer to products or services sought by the organization or person (demand).\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Demand ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:sender a rdf:Property ;\n    rdfs:label \"sender\" ;\n    rdfs:comment \"A sub property of participant. The participant who is at the sending end of the action.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:Message,\n        schema:ReceiveAction ;\n    schema:rangeIncludes schema:Audience,\n        schema:Organization,\n        schema:Person .\n\nschema:sensoryRequirement a rdf:Property ;\n    rdfs:label \"sensoryRequirement\" ;\n    rdfs:comment \"A description of any sensory requirements and levels necessary to function on the job, including hearing and vision. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2384> .\n\nschema:sensoryUnit a rdf:Property ;\n    rdfs:label \"sensoryUnit\" ;\n    rdfs:comment \"The neurological pathway extension that inputs and sends information to the brain or spinal cord.\" ;\n    schema:domainIncludes schema:Nerve ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure,\n        schema:SuperficialAnatomy .\n\nschema:seriousAdverseOutcome a rdf:Property ;\n    rdfs:label \"seriousAdverseOutcome\" ;\n    rdfs:comment \"A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.\" ;\n    schema:domainIncludes schema:MedicalDevice,\n        schema:MedicalTherapy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity .\n\nschema:serverStatus a rdf:Property ;\n    rdfs:label \"serverStatus\" ;\n    rdfs:comment \"Status of a game server.\" ;\n    schema:domainIncludes schema:GameServer ;\n    schema:rangeIncludes schema:GameServerStatus .\n\nschema:servesCuisine a rdf:Property ;\n    rdfs:label \"servesCuisine\" ;\n    rdfs:comment \"The cuisine of the restaurant.\" ;\n    schema:domainIncludes schema:FoodEstablishment ;\n    schema:rangeIncludes schema:Text .\n\nschema:serviceAudience a rdf:Property ;\n    rdfs:label \"serviceAudience\" ;\n    rdfs:comment \"The audience eligible for this service.\" ;\n    schema:domainIncludes schema:Service ;\n    schema:rangeIncludes schema:Audience ;\n    schema:supersededBy schema:audience .\n\nschema:serviceLocation a rdf:Property ;\n    rdfs:label \"serviceLocation\" ;\n    rdfs:comment \"The location (e.g. civic structure, local business, etc.) where a person can go to access the service.\" ;\n    schema:domainIncludes schema:ServiceChannel ;\n    schema:rangeIncludes schema:Place .\n\nschema:serviceOperator a rdf:Property ;\n    rdfs:label \"serviceOperator\" ;\n    rdfs:comment \"The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.\" ;\n    schema:domainIncludes schema:GovernmentService ;\n    schema:rangeIncludes schema:Organization .\n\nschema:servicePhone a rdf:Property ;\n    rdfs:label \"servicePhone\" ;\n    rdfs:comment \"The phone number to use to access the service.\" ;\n    schema:domainIncludes schema:ServiceChannel ;\n    schema:rangeIncludes schema:ContactPoint .\n\nschema:servicePostalAddress a rdf:Property ;\n    rdfs:label \"servicePostalAddress\" ;\n    rdfs:comment \"The address for accessing the service by mail.\" ;\n    schema:domainIncludes schema:ServiceChannel ;\n    schema:rangeIncludes schema:PostalAddress .\n\nschema:serviceSmsNumber a rdf:Property ;\n    rdfs:label \"serviceSmsNumber\" ;\n    rdfs:comment \"The number to access the service by text message.\" ;\n    schema:domainIncludes schema:ServiceChannel ;\n    schema:rangeIncludes schema:ContactPoint .\n\nschema:serviceType a rdf:Property ;\n    rdfs:label \"serviceType\" ;\n    rdfs:comment \"The type of service being offered, e.g. veterans' benefits, emergency relief, etc.\" ;\n    schema:domainIncludes schema:Service ;\n    schema:rangeIncludes schema:GovernmentBenefitsType,\n        schema:Text .\n\nschema:serviceUrl a rdf:Property ;\n    rdfs:label \"serviceUrl\" ;\n    rdfs:comment \"The website to access the service.\" ;\n    schema:domainIncludes schema:ServiceChannel ;\n    schema:rangeIncludes schema:URL .\n\nschema:servingSize a rdf:Property ;\n    rdfs:label \"servingSize\" ;\n    rdfs:comment \"The serving size, in terms of the number of volume or mass.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Text .\n\nschema:sharedContent a rdf:Property ;\n    rdfs:label \"sharedContent\" ;\n    rdfs:comment \"A CreativeWork such as an image, video, or audio clip shared as part of this posting.\" ;\n    schema:domainIncludes schema:SocialMediaPosting ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:shippingDestination a rdf:Property ;\n    rdfs:label \"shippingDestination\" ;\n    rdfs:comment \"indicates (possibly multiple) shipping destinations. These can be defined in several ways e.g. postalCode ranges.\" ;\n    schema:domainIncludes schema:DeliveryTimeSettings,\n        schema:OfferShippingDetails,\n        schema:ShippingRateSettings ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedRegion ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:shippingDetails a rdf:Property ;\n    rdfs:label \"shippingDetails\" ;\n    rdfs:comment \"Indicates information about the shipping policies and options associated with an [[Offer]].\" ;\n    schema:domainIncludes schema:Offer ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:OfferShippingDetails ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:shippingLabel a rdf:Property ;\n    rdfs:label \"shippingLabel\" ;\n    rdfs:comment \"Label to match an [[OfferShippingDetails]] with a [[ShippingRateSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).\" ;\n    schema:domainIncludes schema:OfferShippingDetails,\n        schema:ShippingRateSettings ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:shippingRate a rdf:Property ;\n    rdfs:label \"shippingRate\" ;\n    rdfs:comment \"The shipping rate is the cost of shipping to the specified destination. Typically, the maxValue and currency values (of the [[MonetaryAmount]]) are most appropriate.\" ;\n    schema:domainIncludes schema:OfferShippingDetails,\n        schema:ShippingRateSettings ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmount ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:shippingSettingsLink a rdf:Property ;\n    rdfs:label \"shippingSettingsLink\" ;\n    rdfs:comment \"Link to a page containing [[ShippingRateSettings]] and [[DeliveryTimeSettings]] details.\" ;\n    schema:domainIncludes schema:OfferShippingDetails ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:siblings a rdf:Property ;\n    rdfs:label \"siblings\" ;\n    rdfs:comment \"A sibling of the person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person ;\n    schema:supersededBy schema:sibling .\n\nschema:signDetected a rdf:Property ;\n    rdfs:label \"signDetected\" ;\n    rdfs:comment \"A sign detected by the test.\" ;\n    schema:domainIncludes schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalSign .\n\nschema:signOrSymptom a rdf:Property ;\n    rdfs:label \"signOrSymptom\" ;\n    rdfs:comment \"A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalSignOrSymptom .\n\nschema:significance a rdf:Property ;\n    rdfs:label \"significance\" ;\n    rdfs:comment \"The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.\" ;\n    schema:domainIncludes schema:SuperficialAnatomy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:significantLinks a rdf:Property ;\n    rdfs:label \"significantLinks\" ;\n    rdfs:comment \"The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:URL ;\n    schema:supersededBy schema:significantLink .\n\nschema:size a rdf:Property ;\n    rdfs:label \"size\" ;\n    rdfs:comment \"A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. \" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:QuantitativeValue,\n        schema:SizeSpecification,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1797> .\n\nschema:sizeGroup a rdf:Property ;\n    rdfs:label \"sizeGroup\" ;\n    rdfs:comment \"The size group (also known as \\\\\"size type\\\\\") for a product's size. Size groups are common in the fashion industry to define size segments and suggested audiences for wearable products. Multiple values can be combined, for example \\\\\"men's big and tall\\\\\", \\\\\"petite maternity\\\\\" or \\\\\"regular\\\\\"\" ;\n    schema:domainIncludes schema:SizeSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:SizeGroupEnumeration,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:sizeSystem a rdf:Property ;\n    rdfs:label \"sizeSystem\" ;\n    rdfs:comment \"The size system used to identify a product's size. Typically either a standard (for example, \\\\\"GS1\\\\\" or \\\\\"ISO-EN13402\\\\\"), country code (for example \\\\\"US\\\\\" or \\\\\"JP\\\\\"), or a measuring system (for example \\\\\"Metric\\\\\" or \\\\\"Imperial\\\\\").\" ;\n    schema:domainIncludes schema:SizeSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:SizeSystemEnumeration,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:skills a rdf:Property ;\n    rdfs:label \"skills\" ;\n    rdfs:comment \"A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is desired or required to fulfill this role or to work in this occupation.\" ;\n    schema:domainIncludes schema:JobPosting,\n        schema:Occupation ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1698>,\n        <https://github.com/schemaorg/schemaorg/issues/2322> .\n\nschema:sku a rdf:Property ;\n    rdfs:label \"sku\" ;\n    rdfs:comment \"The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:slogan a rdf:Property ;\n    rdfs:label \"slogan\" ;\n    rdfs:comment \"A slogan or motto associated with the item.\" ;\n    schema:domainIncludes schema:Brand,\n        schema:Organization,\n        schema:Place,\n        schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:Text .\n\nschema:smokingAllowed a rdf:Property ;\n    rdfs:label \"smokingAllowed\" ;\n    rdfs:comment \"Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:sodiumContent a rdf:Property ;\n    rdfs:label \"sodiumContent\" ;\n    rdfs:comment \"The number of milligrams of sodium.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:softwareAddOn a rdf:Property ;\n    rdfs:label \"softwareAddOn\" ;\n    rdfs:comment \"Additional content for a software application.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:SoftwareApplication .\n\nschema:softwareHelp a rdf:Property ;\n    rdfs:label \"softwareHelp\" ;\n    rdfs:comment \"Software application help.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:softwareVersion a rdf:Property ;\n    rdfs:label \"softwareVersion\" ;\n    rdfs:comment \"Version of the software instance.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:sourceOrganization a rdf:Property ;\n    rdfs:label \"sourceOrganization\" ;\n    rdfs:comment \"The Organization on whose behalf the creator was working.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Organization .\n\nschema:sourcedFrom a rdf:Property ;\n    rdfs:label \"sourcedFrom\" ;\n    rdfs:comment \"The neurological pathway that originates the neurons.\" ;\n    schema:domainIncludes schema:Nerve ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:BrainStructure .\n\nschema:spatial a rdf:Property ;\n    rdfs:label \"spatial\" ;\n    rdfs:comment \"\"\"The \"spatial\" property can be used in cases when more specific properties\n(e.g. [[locationCreated]], [[spatialCoverage]], [[contentLocation]]) are not known to be appropriate.\"\"\" ;\n    ns2:equivalentProperty <http://purl.org/dc/terms/spatial> ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Place .\n\nschema:speakable a rdf:Property ;\n    rdfs:label \"speakable\" ;\n    rdfs:comment \"\"\"Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.\n\nThe *speakable* property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:\n\n1.) *id-value* URL references - uses *id-value* of an element in the page being annotated. The simplest use of *speakable* has (potentially relative) URL values, referencing identified sections of the document concerned.\n\n2.) CSS Selectors - addresses content in the annotated page, eg. via class attribute. Use the [[cssSelector]] property.\n\n3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the [[xpath]] property.\n\n\nFor more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this\nwe define a supporting type, [[SpeakableSpecification]]  which is defined to be a possible value of the *speakable* property.\n         \"\"\" ;\n    schema:domainIncludes schema:Article,\n        schema:WebPage ;\n    schema:rangeIncludes schema:SpeakableSpecification,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1389> .\n\nschema:specialCommitments a rdf:Property ;\n    rdfs:label \"specialCommitments\" ;\n    rdfs:comment \"Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text .\n\nschema:specialOpeningHoursSpecification a rdf:Property ;\n    rdfs:label \"specialOpeningHoursSpecification\" ;\n    rdfs:comment \"\"\"The special opening hours of a certain place.\\\\n\\\\nUse this to explicitly override general opening hours brought in scope by [[openingHoursSpecification]] or [[openingHours]].\n      \"\"\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:OpeningHoursSpecification .\n\nschema:specialty a rdf:Property ;\n    rdfs:label \"specialty\" ;\n    rdfs:comment \"One of the domain specialities to which this web page's content applies.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:Specialty .\n\nschema:speechToTextMarkup a rdf:Property ;\n    rdfs:label \"speechToTextMarkup\" ;\n    rdfs:comment \"Form of markup used. eg. [SSML](https://www.w3.org/TR/speech-synthesis11) or [IPA](https://www.wikidata.org/wiki/Property:P898).\" ;\n    schema:domainIncludes schema:PronounceableText ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2108> .\n\nschema:speed a rdf:Property ;\n    rdfs:label \"speed\" ;\n    rdfs:comment \"The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by [[maxValue]] should be the maximum speed achievable under regular conditions.\\\\n\\\\nTypical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot\\\\n\\\\n*Note 1: Use [[minValue]] and [[maxValue]] to indicate the range. Typically, the minimal value is zero.\\\\\\\\n* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the [[valueReference]] property.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:spokenByCharacter a rdf:Property ;\n    rdfs:label \"spokenByCharacter\" ;\n    rdfs:comment \"The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.\" ;\n    schema:domainIncludes schema:Quotation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/271> .\n\nschema:sport a rdf:Property ;\n    rdfs:label \"sport\" ;\n    rdfs:comment \"A type of sport (e.g. Baseball).\" ;\n    schema:domainIncludes schema:SportsEvent,\n        schema:SportsOrganization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1951> .\n\nschema:sportsActivityLocation a rdf:Property ;\n    rdfs:label \"sportsActivityLocation\" ;\n    rdfs:comment \"A sub property of location. The sports activity location where this action occurred.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:rangeIncludes schema:SportsActivityLocation .\n\nschema:sportsEvent a rdf:Property ;\n    rdfs:label \"sportsEvent\" ;\n    rdfs:comment \"A sub property of location. The sports event where this action occurred.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:rangeIncludes schema:SportsEvent .\n\nschema:sportsTeam a rdf:Property ;\n    rdfs:label \"sportsTeam\" ;\n    rdfs:comment \"A sub property of participant. The sports team that participated on this action.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:rangeIncludes schema:SportsTeam .\n\nschema:spouse a rdf:Property ;\n    rdfs:label \"spouse\" ;\n    rdfs:comment \"The person's spouse.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person .\n\nschema:stage a rdf:Property ;\n    rdfs:label \"stage\" ;\n    rdfs:comment \"The stage of the condition, if applicable.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalConditionStage .\n\nschema:stageAsNumber a rdf:Property ;\n    rdfs:label \"stageAsNumber\" ;\n    rdfs:comment \"The stage represented as a number, e.g. 3.\" ;\n    schema:domainIncludes schema:MedicalConditionStage ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Number .\n\nschema:starRating a rdf:Property ;\n    rdfs:label \"starRating\" ;\n    rdfs:comment \"An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).\" ;\n    schema:domainIncludes schema:FoodEstablishment,\n        schema:LodgingBusiness ;\n    schema:rangeIncludes schema:Rating ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:startDate a rdf:Property ;\n    rdfs:label \"startDate\" ;\n    rdfs:comment \"The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).\" ;\n    schema:domainIncludes schema:CreativeWorkSeason,\n        schema:CreativeWorkSeries,\n        schema:DatedMoneySpecification,\n        schema:EducationalOccupationalProgram,\n        schema:Event,\n        schema:Role,\n        schema:Schedule ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2486> .\n\nschema:startOffset a rdf:Property ;\n    rdfs:label \"startOffset\" ;\n    rdfs:comment \"The start time of the clip expressed as the number of seconds from the beginning of the work.\" ;\n    schema:domainIncludes schema:Clip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HyperTocEntry,\n        schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2021> .\n\nschema:startTime a rdf:Property ;\n    rdfs:label \"startTime\" ;\n    rdfs:comment \"The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from *January* to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\\\\n\\\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.\" ;\n    schema:domainIncludes schema:Action,\n        schema:FoodEstablishmentReservation,\n        schema:MediaObject,\n        schema:Schedule ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Time ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2493> .\n\nschema:status a rdf:Property ;\n    rdfs:label \"status\" ;\n    rdfs:comment \"The status of the study (enumerated).\" ;\n    schema:domainIncludes schema:MedicalCondition,\n        schema:MedicalProcedure,\n        schema:MedicalStudy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:EventStatusType,\n        schema:MedicalStudyStatus,\n        schema:Text .\n\nschema:steeringPosition a rdf:Property ;\n    rdfs:label \"steeringPosition\" ;\n    rdfs:comment \"The position of the steering wheel or similar device (mostly for cars).\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:SteeringPositionValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:stepValue a rdf:Property ;\n    rdfs:label \"stepValue\" ;\n    rdfs:comment \"The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Number .\n\nschema:steps a rdf:Property ;\n    rdfs:label \"steps\" ;\n    rdfs:comment \"A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).\" ;\n    schema:domainIncludes schema:HowTo,\n        schema:HowToSection ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:ItemList,\n        schema:Text ;\n    schema:supersededBy schema:step .\n\nschema:storageRequirements a rdf:Property ;\n    rdfs:label \"storageRequirements\" ;\n    rdfs:comment \"Storage requirements (free space required).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:streetAddress a rdf:Property ;\n    rdfs:label \"streetAddress\" ;\n    rdfs:comment \"The street address. For example, 1600 Amphitheatre Pkwy.\" ;\n    schema:domainIncludes schema:PostalAddress ;\n    schema:rangeIncludes schema:Text .\n\nschema:strengthUnit a rdf:Property ;\n    rdfs:label \"strengthUnit\" ;\n    rdfs:comment \"The units of an active ingredient's strength, e.g. mg.\" ;\n    schema:domainIncludes schema:DrugStrength ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:strengthValue a rdf:Property ;\n    rdfs:label \"strengthValue\" ;\n    rdfs:comment \"The value of an active ingredient's strength, e.g. 325.\" ;\n    schema:domainIncludes schema:DrugStrength ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Number .\n\nschema:structuralClass a rdf:Property ;\n    rdfs:label \"structuralClass\" ;\n    rdfs:comment \"The name given to how bone physically connects to each other.\" ;\n    schema:domainIncludes schema:Joint ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:study a rdf:Property ;\n    rdfs:label \"study\" ;\n    rdfs:comment \"A medical study or trial related to this entity.\" ;\n    schema:domainIncludes schema:MedicalEntity ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalStudy .\n\nschema:studyDesign a rdf:Property ;\n    rdfs:label \"studyDesign\" ;\n    rdfs:comment \"Specifics about the observational study design (enumerated).\" ;\n    schema:domainIncludes schema:MedicalObservationalStudy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalObservationalStudyDesign .\n\nschema:studyLocation a rdf:Property ;\n    rdfs:label \"studyLocation\" ;\n    rdfs:comment \"The location in which the study is taking/took place.\" ;\n    schema:domainIncludes schema:MedicalStudy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AdministrativeArea .\n\nschema:studySubject a rdf:Property ;\n    rdfs:label \"studySubject\" ;\n    rdfs:comment \"A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.\" ;\n    schema:domainIncludes schema:MedicalStudy ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalEntity .\n\nschema:subEvents a rdf:Property ;\n    rdfs:label \"subEvents\" ;\n    rdfs:comment \"Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Event ;\n    schema:supersededBy schema:subEvent .\n\nschema:subReservation a rdf:Property ;\n    rdfs:label \"subReservation\" ;\n    rdfs:comment \"The individual reservations included in the package. Typically a repeated property.\" ;\n    schema:domainIncludes schema:ReservationPackage ;\n    schema:rangeIncludes schema:Reservation .\n\nschema:subStageSuffix a rdf:Property ;\n    rdfs:label \"subStageSuffix\" ;\n    rdfs:comment \"The substage, e.g. 'a' for Stage IIIa.\" ;\n    schema:domainIncludes schema:MedicalConditionStage ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:subStructure a rdf:Property ;\n    rdfs:label \"subStructure\" ;\n    rdfs:comment \"Component (sub-)structure(s) that comprise this anatomical structure.\" ;\n    schema:domainIncludes schema:AnatomicalStructure ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure .\n\nschema:subTest a rdf:Property ;\n    rdfs:label \"subTest\" ;\n    rdfs:comment \"A component test of the panel.\" ;\n    schema:domainIncludes schema:MedicalTestPanel ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTest .\n\nschema:subtitleLanguage a rdf:Property ;\n    rdfs:label \"subtitleLanguage\" ;\n    rdfs:comment \"Languages in which subtitles/captions are available, in [IETF BCP 47 standard format](http://tools.ietf.org/html/bcp47).\" ;\n    schema:domainIncludes schema:BroadcastEvent,\n        schema:Movie,\n        schema:ScreeningEvent,\n        schema:TVEpisode ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Language,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2110> .\n\nschema:successorOf a rdf:Property ;\n    rdfs:label \"successorOf\" ;\n    rdfs:comment \"A pointer from a newer variant of a product  to its previous, often discontinued predecessor.\" ;\n    schema:domainIncludes schema:ProductModel ;\n    schema:rangeIncludes schema:ProductModel ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:sugarContent a rdf:Property ;\n    rdfs:label \"sugarContent\" ;\n    rdfs:comment \"The number of grams of sugar.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:suggestedAge a rdf:Property ;\n    rdfs:label \"suggestedAge\" ;\n    rdfs:comment \"The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.\" ;\n    schema:domainIncludes schema:PeopleAudience,\n        schema:SizeSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:suggestedGender a rdf:Property ;\n    rdfs:label \"suggestedGender\" ;\n    rdfs:comment \"The suggested gender of the intended person or audience, for example \\\\\"male\\\\\", \\\\\"female\\\\\", or \\\\\"unisex\\\\\".\" ;\n    schema:domainIncludes schema:PeopleAudience,\n        schema:SizeSpecification ;\n    schema:rangeIncludes schema:GenderType,\n        schema:Text .\n\nschema:suggestedMaxAge a rdf:Property ;\n    rdfs:label \"suggestedMaxAge\" ;\n    rdfs:comment \"Maximum recommended age in years for the audience or user.\" ;\n    schema:domainIncludes schema:PeopleAudience ;\n    schema:rangeIncludes schema:Number .\n\nschema:suggestedMeasurement a rdf:Property ;\n    rdfs:label \"suggestedMeasurement\" ;\n    rdfs:comment \"A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.\" ;\n    schema:domainIncludes schema:PeopleAudience,\n        schema:SizeSpecification ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2811> .\n\nschema:suggestedMinAge a rdf:Property ;\n    rdfs:label \"suggestedMinAge\" ;\n    rdfs:comment \"Minimum recommended age in years for the audience or user.\" ;\n    schema:domainIncludes schema:PeopleAudience ;\n    schema:rangeIncludes schema:Number .\n\nschema:suitableForDiet a rdf:Property ;\n    rdfs:label \"suitableForDiet\" ;\n    rdfs:comment \"Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.\" ;\n    schema:domainIncludes schema:MenuItem,\n        schema:Recipe ;\n    schema:rangeIncludes schema:RestrictedDiet .\n\nschema:supersededBy a rdf:Property ;\n    rdfs:label \"supersededBy\" ;\n    rdfs:comment \"Relates a term (i.e. a property, class or enumeration) to one that supersedes it.\" ;\n    schema:domainIncludes schema:Class,\n        schema:Enumeration,\n        schema:Property ;\n    schema:isPartOf <https://meta.schema.org> ;\n    schema:rangeIncludes schema:Class,\n        schema:Enumeration,\n        schema:Property .\n\nschema:supplyTo a rdf:Property ;\n    rdfs:label \"supplyTo\" ;\n    rdfs:comment \"The area to which the artery supplies blood.\" ;\n    schema:domainIncludes schema:Artery ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure .\n\nschema:supportingData a rdf:Property ;\n    rdfs:label \"supportingData\" ;\n    rdfs:comment \"Supporting data for a SoftwareApplication.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:DataFeed .\n\nschema:surface a rdf:Property ;\n    rdfs:label \"surface\" ;\n    rdfs:comment \"A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.\" ;\n    rdfs:subPropertyOf schema:material ;\n    schema:domainIncludes schema:VisualArtwork ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:supersededBy schema:artworkSurface .\n\nschema:target a rdf:Property ;\n    rdfs:label \"target\" ;\n    rdfs:comment \"Indicates a target EntryPoint for an Action.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:EntryPoint .\n\nschema:targetDescription a rdf:Property ;\n    rdfs:label \"targetDescription\" ;\n    rdfs:comment \"The description of a node in an established educational framework.\" ;\n    schema:domainIncludes schema:AlignmentObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:targetName a rdf:Property ;\n    rdfs:label \"targetName\" ;\n    rdfs:comment \"The name of a node in an established educational framework.\" ;\n    schema:domainIncludes schema:AlignmentObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:targetPlatform a rdf:Property ;\n    rdfs:label \"targetPlatform\" ;\n    rdfs:comment \"Type of app development: phone, Metro style, desktop, XBox, etc.\" ;\n    schema:domainIncludes schema:APIReference ;\n    schema:rangeIncludes schema:Text .\n\nschema:targetPopulation a rdf:Property ;\n    rdfs:label \"targetPopulation\" ;\n    rdfs:comment \"Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.\" ;\n    schema:domainIncludes schema:DietarySupplement,\n        schema:DoseSchedule ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:targetProduct a rdf:Property ;\n    rdfs:label \"targetProduct\" ;\n    rdfs:comment \"Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.\" ;\n    schema:domainIncludes schema:SoftwareSourceCode ;\n    schema:rangeIncludes schema:SoftwareApplication .\n\nschema:targetUrl a rdf:Property ;\n    rdfs:label \"targetUrl\" ;\n    rdfs:comment \"The URL of a node in an established educational framework.\" ;\n    schema:domainIncludes schema:AlignmentObject ;\n    schema:rangeIncludes schema:URL .\n\nschema:taxID a rdf:Property ;\n    rdfs:label \"taxID\" ;\n    rdfs:comment \"The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:teaches a rdf:Property ;\n    rdfs:label \"teaches\" ;\n    rdfs:comment \"The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:EducationEvent,\n        schema:LearningResource ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2427> .\n\nschema:telephone a rdf:Property ;\n    rdfs:label \"telephone\" ;\n    rdfs:comment \"The telephone number.\" ;\n    schema:domainIncludes schema:ContactPoint,\n        schema:Organization,\n        schema:Person,\n        schema:Place ;\n    schema:rangeIncludes schema:Text .\n\nschema:temporal a rdf:Property ;\n    rdfs:label \"temporal\" ;\n    rdfs:comment \"\"\"The \"temporal\" property can be used in cases where more specific properties\n(e.g. [[temporalCoverage]], [[dateCreated]], [[dateModified]], [[datePublished]]) are not known to be appropriate.\"\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Text .\n\nschema:termDuration a rdf:Property ;\n    rdfs:label \"termDuration\" ;\n    rdfs:comment \"The amount of time in a term as defined by the institution. A term is a length of time where students take one or more classes. Semesters and quarters are common units for term.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Duration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:termsOfService a rdf:Property ;\n    rdfs:label \"termsOfService\" ;\n    rdfs:comment \"Human-readable terms of service documentation.\" ;\n    schema:domainIncludes schema:Service ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1423> .\n\nschema:termsPerYear a rdf:Property ;\n    rdfs:label \"termsPerYear\" ;\n    rdfs:comment \"The number of times terms of study are offered per year. Semesters and quarters are common units for term. For example, if the student can only take 2 semesters for the program in one year, then termsPerYear should be 2.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:text a rdf:Property ;\n    rdfs:label \"text\" ;\n    rdfs:comment \"The textual content of this CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Text .\n\nschema:textValue a rdf:Property ;\n    rdfs:label \"textValue\" ;\n    rdfs:comment \"Text value being annotated.\" ;\n    schema:domainIncludes schema:PronounceableText ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2108> .\n\nschema:thumbnail a rdf:Property ;\n    rdfs:label \"thumbnail\" ;\n    rdfs:comment \"Thumbnail image for an image or video.\" ;\n    schema:domainIncludes schema:ImageObject,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:ImageObject .\n\nschema:thumbnailUrl a rdf:Property ;\n    rdfs:label \"thumbnailUrl\" ;\n    rdfs:comment \"A thumbnail image relevant to the Thing.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:URL .\n\nschema:tickerSymbol a rdf:Property ;\n    rdfs:label \"tickerSymbol\" ;\n    rdfs:comment \"The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO15022.\" ;\n    schema:domainIncludes schema:Corporation ;\n    schema:rangeIncludes schema:Text .\n\nschema:ticketNumber a rdf:Property ;\n    rdfs:label \"ticketNumber\" ;\n    rdfs:comment \"The unique identifier for the ticket.\" ;\n    schema:domainIncludes schema:Ticket ;\n    schema:rangeIncludes schema:Text .\n\nschema:ticketToken a rdf:Property ;\n    rdfs:label \"ticketToken\" ;\n    rdfs:comment \"Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.\" ;\n    schema:domainIncludes schema:Ticket ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:ticketedSeat a rdf:Property ;\n    rdfs:label \"ticketedSeat\" ;\n    rdfs:comment \"The seat associated with the ticket.\" ;\n    schema:domainIncludes schema:Ticket ;\n    schema:rangeIncludes schema:Seat .\n\nschema:timeOfDay a rdf:Property ;\n    rdfs:label \"timeOfDay\" ;\n    rdfs:comment \"The time of day the program normally runs. For example, \\\\\"evenings\\\\\".\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:timeRequired a rdf:Property ;\n    rdfs:label \"timeRequired\" ;\n    rdfs:comment \"Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'PT30M', 'PT1H25M'.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Duration .\n\nschema:timeToComplete a rdf:Property ;\n    rdfs:label \"timeToComplete\" ;\n    rdfs:comment \"The expected length of time to complete the program if attending full-time.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Duration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:tissueSample a rdf:Property ;\n    rdfs:label \"tissueSample\" ;\n    rdfs:comment \"The type of tissue sample required for the test.\" ;\n    schema:domainIncludes schema:PathologyTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:title a rdf:Property ;\n    rdfs:label \"title\" ;\n    rdfs:comment \"The title of the job.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text .\n\nschema:titleEIDR a rdf:Property ;\n    rdfs:label \"titleEIDR\" ;\n    rdfs:comment \"\"\"An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing at the most general/abstract level, a work of film or television.\n\nFor example, the motion picture known as \"Ghostbusters\" has a titleEIDR of  \"10.5240/7EC7-228A-510A-053E-CBB8-J\". This title (or work) may have several variants, which EIDR calls \"edits\". See [[editEIDR]].\n\nSince schema.org types like [[Movie]] and [[TVEpisode]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.\n\"\"\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Movie,\n        schema:TVEpisode ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2469> .\n\nschema:toLocation a rdf:Property ;\n    rdfs:label \"toLocation\" ;\n    rdfs:comment \"A sub property of location. The final location of the object or the agent after the action.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:ExerciseAction,\n        schema:InsertAction,\n        schema:MoveAction,\n        schema:TransferAction ;\n    schema:rangeIncludes schema:Place .\n\nschema:toRecipient a rdf:Property ;\n    rdfs:label \"toRecipient\" ;\n    rdfs:comment \"A sub property of recipient. The recipient who was directly sent the message.\" ;\n    rdfs:subPropertyOf schema:recipient ;\n    schema:domainIncludes schema:Message ;\n    schema:rangeIncludes schema:Audience,\n        schema:ContactPoint,\n        schema:Organization,\n        schema:Person .\n\nschema:tocContinuation a rdf:Property ;\n    rdfs:label \"tocContinuation\" ;\n    rdfs:comment \"A [[HyperTocEntry]] can have a [[tocContinuation]] indicated, which is another [[HyperTocEntry]] that would be the default next item to play or render.\" ;\n    schema:domainIncludes schema:HyperTocEntry ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HyperTocEntry ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2766> .\n\nschema:tocEntry a rdf:Property ;\n    rdfs:label \"tocEntry\" ;\n    rdfs:comment \"Indicates a [[HyperTocEntry]] in a [[HyperToc]].\" ;\n    rdfs:subPropertyOf schema:hasPart ;\n    schema:domainIncludes schema:HyperToc ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:HyperTocEntry ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2766> .\n\nschema:tongueWeight a rdf:Property ;\n    rdfs:label \"tongueWeight\" ;\n    rdfs:comment \"The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR)\\\\n\\\\nTypical unit code(s): KGM for kilogram, LBR for pound\\\\n\\\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\\\\\\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\\\\\\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:tool a rdf:Property ;\n    rdfs:label \"tool\" ;\n    rdfs:comment \"A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:HowTo,\n        schema:HowToDirection ;\n    schema:rangeIncludes schema:HowToTool,\n        schema:Text .\n\nschema:torque a rdf:Property ;\n    rdfs:label \"torque\" ;\n    rdfs:comment \"The torque (turning force) of the vehicle's engine.\\\\n\\\\nTypical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch\\\\n\\\\n* Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the [[valueReference]] property.\\\\\\\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:EngineSpecification ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:totalJobOpenings a rdf:Property ;\n    rdfs:label \"totalJobOpenings\" ;\n    rdfs:comment \"The number of positions open for this job posting. Use a positive integer. Do not use if the number of positions is unclear or not known.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2329> .\n\nschema:totalPaymentDue a rdf:Property ;\n    rdfs:label \"totalPaymentDue\" ;\n    rdfs:comment \"The total amount due.\" ;\n    schema:domainIncludes schema:Invoice ;\n    schema:rangeIncludes schema:MonetaryAmount,\n        schema:PriceSpecification .\n\nschema:totalPrice a rdf:Property ;\n    rdfs:label \"totalPrice\" ;\n    rdfs:comment \"The total price for the reservation or ticket, including applicable taxes, shipping, etc.\\\\n\\\\nUsage guidelines:\\\\n\\\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\\\\\\\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\" ;\n    schema:domainIncludes schema:Reservation,\n        schema:Ticket ;\n    schema:rangeIncludes schema:Number,\n        schema:PriceSpecification,\n        schema:Text .\n\nschema:totalTime a rdf:Property ;\n    rdfs:label \"totalTime\" ;\n    rdfs:comment \"The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).\" ;\n    schema:domainIncludes schema:HowTo,\n        schema:HowToDirection ;\n    schema:rangeIncludes schema:Duration .\n\nschema:tourBookingPage a rdf:Property ;\n    rdfs:label \"tourBookingPage\" ;\n    rdfs:comment \"A page providing information on how to book a tour of some [[Place]], such as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, as well as other kinds of tours as appropriate.\" ;\n    schema:domainIncludes schema:Accommodation,\n        schema:ApartmentComplex,\n        schema:Place ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:touristType a rdf:Property ;\n    rdfs:label \"touristType\" ;\n    rdfs:comment \"Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc. \" ;\n    schema:domainIncludes schema:TouristAttraction,\n        schema:TouristDestination,\n        schema:TouristTrip ;\n    schema:rangeIncludes schema:Audience,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it>,\n        <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism> .\n\nschema:trackingNumber a rdf:Property ;\n    rdfs:label \"trackingNumber\" ;\n    rdfs:comment \"Shipper tracking number.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:Text .\n\nschema:trackingUrl a rdf:Property ;\n    rdfs:label \"trackingUrl\" ;\n    rdfs:comment \"Tracking url for the parcel delivery.\" ;\n    schema:domainIncludes schema:ParcelDelivery ;\n    schema:rangeIncludes schema:URL .\n\nschema:tracks a rdf:Property ;\n    rdfs:label \"tracks\" ;\n    rdfs:comment \"A music recording (track)&#x2014;usually a single song.\" ;\n    schema:domainIncludes schema:MusicGroup,\n        schema:MusicPlaylist ;\n    schema:rangeIncludes schema:MusicRecording ;\n    schema:supersededBy schema:track .\n\nschema:trailer a rdf:Property ;\n    rdfs:label \"trailer\" ;\n    rdfs:comment \"The trailer of a movie or tv/radio series, season, episode, etc.\" ;\n    schema:domainIncludes schema:CreativeWorkSeason,\n        schema:Episode,\n        schema:Movie,\n        schema:MovieSeries,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGame,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:VideoObject .\n\nschema:trailerWeight a rdf:Property ;\n    rdfs:label \"trailerWeight\" ;\n    rdfs:comment \"The permitted weight of a trailer attached to the vehicle.\\\\n\\\\nTypical unit code(s): KGM for kilogram, LBR for pound\\\\\\\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\\\\\\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\\\\\\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:trainName a rdf:Property ;\n    rdfs:label \"trainName\" ;\n    rdfs:comment \"The name of the train (e.g. The Orient Express).\" ;\n    schema:domainIncludes schema:TrainTrip ;\n    schema:rangeIncludes schema:Text .\n\nschema:trainNumber a rdf:Property ;\n    rdfs:label \"trainNumber\" ;\n    rdfs:comment \"The unique identifier for the train.\" ;\n    schema:domainIncludes schema:TrainTrip ;\n    schema:rangeIncludes schema:Text .\n\nschema:trainingSalary a rdf:Property ;\n    rdfs:label \"trainingSalary\" ;\n    rdfs:comment \"The estimated salary earned while in the program.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram,\n        schema:WorkBasedProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:MonetaryAmountDistribution ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289>,\n        <https://github.com/schemaorg/schemaorg/issues/2460> .\n\nschema:transFatContent a rdf:Property ;\n    rdfs:label \"transFatContent\" ;\n    rdfs:comment \"The number of grams of trans fat.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:transcript a rdf:Property ;\n    rdfs:label \"transcript\" ;\n    rdfs:comment \"If this MediaObject is an AudioObject or VideoObject, the transcript of that object.\" ;\n    schema:domainIncludes schema:AudioObject,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:transitTime a rdf:Property ;\n    rdfs:label \"transitTime\" ;\n    rdfs:comment \"The typical delay the order has been sent for delivery and the goods reach the final customer. Typical properties: minValue, maxValue, unitCode (d for DAY).\" ;\n    schema:domainIncludes schema:ShippingDeliveryTime ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:transitTimeLabel a rdf:Property ;\n    rdfs:label \"transitTimeLabel\" ;\n    rdfs:comment \"Label to match an [[OfferShippingDetails]] with a [[DeliveryTimeSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).\" ;\n    schema:domainIncludes schema:DeliveryTimeSettings,\n        schema:OfferShippingDetails ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2506> .\n\nschema:translator a rdf:Property ;\n    rdfs:label \"translator\" ;\n    rdfs:comment \"Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Event ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:transmissionMethod a rdf:Property ;\n    rdfs:label \"transmissionMethod\" ;\n    rdfs:comment \"How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.\" ;\n    schema:domainIncludes schema:InfectiousDisease ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:travelBans a rdf:Property ;\n    rdfs:label \"travelBans\" ;\n    rdfs:comment \"Information about travel bans, e.g. in the context of a pandemic.\" ;\n    schema:domainIncludes schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:URL,\n        schema:WebContent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:trialDesign a rdf:Property ;\n    rdfs:label \"trialDesign\" ;\n    rdfs:comment \"Specifics about the trial design (enumerated).\" ;\n    schema:domainIncludes schema:MedicalTrial ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTrialDesign .\n\nschema:tributary a rdf:Property ;\n    rdfs:label \"tributary\" ;\n    rdfs:comment \"The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.\" ;\n    schema:domainIncludes schema:Vein ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure .\n\nschema:typeOfBed a rdf:Property ;\n    rdfs:label \"typeOfBed\" ;\n    rdfs:comment \"The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.\" ;\n    schema:domainIncludes schema:BedDetails ;\n    schema:rangeIncludes schema:BedType,\n        schema:Text ;\n    schema:source <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology> .\n\nschema:typeOfGood a rdf:Property ;\n    rdfs:label \"typeOfGood\" ;\n    rdfs:comment \"The product that this structured value is referring to.\" ;\n    schema:domainIncludes schema:OwnershipInfo,\n        schema:TypeAndQuantityNode ;\n    schema:rangeIncludes schema:Product,\n        schema:Service ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:typicalAgeRange a rdf:Property ;\n    rdfs:label \"typicalAgeRange\" ;\n    rdfs:comment \"The typical expected age range, e.g. '7-9', '11-'.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Event ;\n    schema:rangeIncludes schema:Text .\n\nschema:typicalCreditsPerTerm a rdf:Property ;\n    rdfs:label \"typicalCreditsPerTerm\" ;\n    rdfs:comment \"The number of credits or units a full-time student would be expected to take in 1 term however 'term' is defined by the institution.\" ;\n    schema:domainIncludes schema:EducationalOccupationalProgram ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Integer,\n        schema:StructuredValue ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2419> .\n\nschema:typicalTest a rdf:Property ;\n    rdfs:label \"typicalTest\" ;\n    rdfs:comment \"A medical test typically performed given this condition.\" ;\n    schema:domainIncludes schema:MedicalCondition ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalTest .\n\nschema:underName a rdf:Property ;\n    rdfs:label \"underName\" ;\n    rdfs:comment \"The person or organization the reservation or ticket is for.\" ;\n    schema:domainIncludes schema:Reservation,\n        schema:Ticket ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:unitCode a rdf:Property ;\n    rdfs:label \"unitCode\" ;\n    rdfs:comment \"The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.\" ;\n    schema:domainIncludes schema:PropertyValue,\n        schema:QuantitativeValue,\n        schema:TypeAndQuantityNode,\n        schema:UnitPriceSpecification ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:unitText a rdf:Property ;\n    rdfs:label \"unitText\" ;\n    rdfs:comment \"\"\"A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.\"\"\" ;\n    schema:domainIncludes schema:PropertyValue,\n        schema:QuantitativeValue,\n        schema:TypeAndQuantityNode,\n        schema:UnitPriceSpecification ;\n    schema:rangeIncludes schema:Text .\n\nschema:unnamedSourcesPolicy a rdf:Property ;\n    rdfs:label \"unnamedSourcesPolicy\" ;\n    rdfs:comment \"For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization,\n        schema:Organization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:unsaturatedFatContent a rdf:Property ;\n    rdfs:label \"unsaturatedFatContent\" ;\n    rdfs:comment \"The number of grams of unsaturated fat.\" ;\n    schema:domainIncludes schema:NutritionInformation ;\n    schema:rangeIncludes schema:Mass .\n\nschema:uploadDate a rdf:Property ;\n    rdfs:label \"uploadDate\" ;\n    rdfs:comment \"Date when this media object was uploaded to this site.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:rangeIncludes schema:Date .\n\nschema:upvoteCount a rdf:Property ;\n    rdfs:label \"upvoteCount\" ;\n    rdfs:comment \"The number of upvotes this question, answer or comment has received from the community.\" ;\n    schema:domainIncludes schema:Comment ;\n    schema:rangeIncludes schema:Integer .\n\nschema:url a rdf:Property ;\n    rdfs:label \"url\" ;\n    rdfs:comment \"URL of the item.\" ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:URL .\n\nschema:urlTemplate a rdf:Property ;\n    rdfs:label \"urlTemplate\" ;\n    rdfs:comment \"An url template (RFC6570) that will be used to construct the target of the execution of the action.\" ;\n    schema:domainIncludes schema:EntryPoint ;\n    schema:rangeIncludes schema:Text .\n\nschema:usedToDiagnose a rdf:Property ;\n    rdfs:label \"usedToDiagnose\" ;\n    rdfs:comment \"A condition the test is used to diagnose.\" ;\n    schema:domainIncludes schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalCondition .\n\nschema:userInteractionCount a rdf:Property ;\n    rdfs:label \"userInteractionCount\" ;\n    rdfs:comment \"The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.\" ;\n    schema:domainIncludes schema:InteractionCounter ;\n    schema:rangeIncludes schema:Integer .\n\nschema:usesDevice a rdf:Property ;\n    rdfs:label \"usesDevice\" ;\n    rdfs:comment \"Device used to perform the test.\" ;\n    schema:domainIncludes schema:MedicalTest ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:MedicalDevice .\n\nschema:usesHealthPlanIdStandard a rdf:Property ;\n    rdfs:label \"usesHealthPlanIdStandard\" ;\n    rdfs:comment \"The standard for interpreting thePlan ID. The preferred is \\\\\"HIOS\\\\\". See the Centers for Medicare & Medicaid Services for more details.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1062> .\n\nschema:utterances a rdf:Property ;\n    rdfs:label \"utterances\" ;\n    rdfs:comment \"Text of an utterances (spoken words, lyrics etc.) that occurs at a certain section of a media object, represented as a [[HyperTocEntry]].\" ;\n    schema:domainIncludes schema:HyperTocEntry ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2766> .\n\nschema:validFor a rdf:Property ;\n    rdfs:label \"validFor\" ;\n    rdfs:comment \"The duration of validity of a permit or similar thing.\" ;\n    schema:domainIncludes schema:EducationalOccupationalCredential,\n        schema:Permit ;\n    schema:rangeIncludes schema:Duration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:validFrom a rdf:Property ;\n    rdfs:label \"validFrom\" ;\n    rdfs:comment \"The date when the item becomes valid.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:LocationFeatureSpecification,\n        schema:MonetaryAmount,\n        schema:Offer,\n        schema:OpeningHoursSpecification,\n        schema:Permit,\n        schema:PriceSpecification ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:validIn a rdf:Property ;\n    rdfs:label \"validIn\" ;\n    rdfs:comment \"The geographic area where a permit or similar thing is valid.\" ;\n    schema:domainIncludes schema:EducationalOccupationalCredential,\n        schema:Permit ;\n    schema:rangeIncludes schema:AdministrativeArea ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1779> .\n\nschema:validThrough a rdf:Property ;\n    rdfs:label \"validThrough\" ;\n    rdfs:comment \"The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:JobPosting,\n        schema:LocationFeatureSpecification,\n        schema:MonetaryAmount,\n        schema:Offer,\n        schema:OpeningHoursSpecification,\n        schema:PriceSpecification ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:validUntil a rdf:Property ;\n    rdfs:label \"validUntil\" ;\n    rdfs:comment \"The date when the item is no longer valid.\" ;\n    schema:domainIncludes schema:Permit ;\n    schema:rangeIncludes schema:Date .\n\nschema:value a rdf:Property ;\n    rdfs:label \"value\" ;\n    rdfs:comment \"The value of the quantitative value or property value node.\\\\n\\\\n* For [[QuantitativeValue]] and [[MonetaryAmount]], the recommended type for values is 'Number'.\\\\\\\\n* For [[PropertyValue]], it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.\\\\\\\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\\\\\\\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\" ;\n    schema:domainIncludes schema:MonetaryAmount,\n        schema:PropertyValue,\n        schema:QuantitativeValue ;\n    schema:rangeIncludes schema:Boolean,\n        schema:Number,\n        schema:StructuredValue,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:valueAddedTaxIncluded a rdf:Property ;\n    rdfs:label \"valueAddedTaxIncluded\" ;\n    rdfs:comment \"Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.\" ;\n    schema:domainIncludes schema:PriceSpecification ;\n    schema:rangeIncludes schema:Boolean ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:valueMaxLength a rdf:Property ;\n    rdfs:label \"valueMaxLength\" ;\n    rdfs:comment \"Specifies the allowed range for number of characters in a literal value.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Number .\n\nschema:valueMinLength a rdf:Property ;\n    rdfs:label \"valueMinLength\" ;\n    rdfs:comment \"Specifies the minimum allowed range for number of characters in a literal value.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Number .\n\nschema:valueName a rdf:Property ;\n    rdfs:label \"valueName\" ;\n    rdfs:comment \"Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Text .\n\nschema:valuePattern a rdf:Property ;\n    rdfs:label \"valuePattern\" ;\n    rdfs:comment \"Specifies a regular expression for testing literal values according to the HTML spec.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Text .\n\nschema:valueReference a rdf:Property ;\n    rdfs:label \"valueReference\" ;\n    rdfs:comment \"A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.\" ;\n    schema:domainIncludes schema:PropertyValue,\n        schema:QualitativeValue,\n        schema:QuantitativeValue ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Enumeration,\n        schema:MeasurementTypeEnumeration,\n        schema:PropertyValue,\n        schema:QualitativeValue,\n        schema:QuantitativeValue,\n        schema:StructuredValue,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:valueRequired a rdf:Property ;\n    rdfs:label \"valueRequired\" ;\n    rdfs:comment \"Whether the property must be filled in to complete the action.  Default is false.\" ;\n    schema:domainIncludes schema:PropertyValueSpecification ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:variableMeasured a rdf:Property ;\n    rdfs:label \"variableMeasured\" ;\n    rdfs:comment \"The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue.\" ;\n    schema:domainIncludes schema:Dataset ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:PropertyValue,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1083> .\n\nschema:variantCover a rdf:Property ;\n    rdfs:label \"variantCover\" ;\n    rdfs:comment \"\"\"A description of the variant cover\n    \tfor the issue, if the issue is a variant printing. For example, \"Bryan Hitch\n    \tVariant Cover\" or \"2nd Printing Variant\".\"\"\" ;\n    schema:domainIncludes schema:ComicIssue ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:variesBy a rdf:Property ;\n    rdfs:label \"variesBy\" ;\n    rdfs:comment \"Indicates the property or properties by which the variants in a [[ProductGroup]] vary, e.g. their size, color etc. Schema.org properties can be referenced by their short name e.g. \\\\\"color\\\\\"; terms defined elsewhere can be referenced with their URIs.\" ;\n    schema:domainIncludes schema:ProductGroup ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1797> .\n\nschema:vatID a rdf:Property ;\n    rdfs:label \"vatID\" ;\n    rdfs:comment \"The Value-added Tax ID of the organization or person.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:vehicleConfiguration a rdf:Property ;\n    rdfs:label \"vehicleConfiguration\" ;\n    rdfs:comment \"A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleEngine a rdf:Property ;\n    rdfs:label \"vehicleEngine\" ;\n    rdfs:comment \"Information about the engine or engines of the vehicle.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:EngineSpecification ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleIdentificationNumber a rdf:Property ;\n    rdfs:label \"vehicleIdentificationNumber\" ;\n    rdfs:comment \"The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.\" ;\n    rdfs:subPropertyOf schema:serialNumber ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleInteriorColor a rdf:Property ;\n    rdfs:label \"vehicleInteriorColor\" ;\n    rdfs:comment \"The color or color combination of the interior of the vehicle.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleInteriorType a rdf:Property ;\n    rdfs:label \"vehicleInteriorType\" ;\n    rdfs:comment \"The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleModelDate a rdf:Property ;\n    rdfs:label \"vehicleModelDate\" ;\n    rdfs:comment \"The release date of a vehicle model (often used to differentiate versions of the same make and model).\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Date ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleSeatingCapacity a rdf:Property ;\n    rdfs:label \"vehicleSeatingCapacity\" ;\n    rdfs:comment \"The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.\\\\n\\\\nTypical unit code(s): C62 for persons.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:Number,\n        schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleSpecialUsage a rdf:Property ;\n    rdfs:label \"vehicleSpecialUsage\" ;\n    rdfs:comment \"Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:CarUsageType,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vehicleTransmission a rdf:Property ;\n    rdfs:label \"vehicleTransmission\" ;\n    rdfs:comment \"The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) (\\\\\"gearbox\\\\\" for cars).\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:rangeIncludes schema:QualitativeValue,\n        schema:Text,\n        schema:URL ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:vendor a rdf:Property ;\n    rdfs:label \"vendor\" ;\n    rdfs:comment \"'vendor' is an earlier term for 'seller'.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:BuyAction ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:supersededBy schema:seller .\n\nschema:verificationFactCheckingPolicy a rdf:Property ;\n    rdfs:label \"verificationFactCheckingPolicy\" ;\n    rdfs:comment \"Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].\" ;\n    rdfs:subPropertyOf schema:publishingPrinciples ;\n    schema:domainIncludes schema:NewsMediaOrganization ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1525>,\n        <https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP> .\n\nschema:version a rdf:Property ;\n    rdfs:label \"version\" ;\n    rdfs:comment \"The version of the CreativeWork embodied by a specified resource.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:video a rdf:Property ;\n    rdfs:label \"video\" ;\n    rdfs:comment \"An embedded video object.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Clip,\n        schema:VideoObject .\n\nschema:videoFormat a rdf:Property ;\n    rdfs:label \"videoFormat\" ;\n    rdfs:comment \"The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).\" ;\n    schema:domainIncludes schema:BroadcastEvent,\n        schema:BroadcastService,\n        schema:ScreeningEvent ;\n    schema:rangeIncludes schema:Text .\n\nschema:videoFrameSize a rdf:Property ;\n    rdfs:label \"videoFrameSize\" ;\n    rdfs:comment \"The frame size of the video.\" ;\n    schema:domainIncludes schema:VideoObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:videoQuality a rdf:Property ;\n    rdfs:label \"videoQuality\" ;\n    rdfs:comment \"The quality of the video.\" ;\n    schema:domainIncludes schema:VideoObject ;\n    schema:rangeIncludes schema:Text .\n\nschema:volumeNumber a rdf:Property ;\n    rdfs:label \"volumeNumber\" ;\n    rdfs:comment \"Identifies the volume of publication or multi-part work; for example, \\\\\"iii\\\\\" or \\\\\"2\\\\\".\" ;\n    rdfs:subPropertyOf schema:position ;\n    ns2:equivalentProperty <http://purl.org/ontology/bibo/volume> ;\n    schema:domainIncludes schema:PublicationVolume ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:warning a rdf:Property ;\n    rdfs:label \"warning\" ;\n    rdfs:comment \"Any FDA or other warnings about the drug (text or URL).\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:warrantyPromise a rdf:Property ;\n    rdfs:label \"warrantyPromise\" ;\n    rdfs:comment \"The warranty promise(s) included in the offer.\" ;\n    schema:domainIncludes schema:BuyAction,\n        schema:SellAction ;\n    schema:rangeIncludes schema:WarrantyPromise ;\n    schema:supersededBy schema:warranty .\n\nschema:warrantyScope a rdf:Property ;\n    rdfs:label \"warrantyScope\" ;\n    rdfs:comment \"The scope of the warranty promise.\" ;\n    schema:domainIncludes schema:WarrantyPromise ;\n    schema:rangeIncludes schema:WarrantyScope ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:webCheckinTime a rdf:Property ;\n    rdfs:label \"webCheckinTime\" ;\n    rdfs:comment \"The time when a passenger can check into the flight online.\" ;\n    schema:domainIncludes schema:Flight ;\n    schema:rangeIncludes schema:DateTime .\n\nschema:webFeed a rdf:Property ;\n    rdfs:label \"webFeed\" ;\n    rdfs:comment \"The URL for a feed, e.g. associated with a podcast series, blog, or series of date-stamped updates. This is usually RSS or Atom.\" ;\n    schema:domainIncludes schema:PodcastSeries,\n        schema:SpecialAnnouncement ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DataFeed,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/373> .\n\nschema:weight a rdf:Property ;\n    rdfs:label \"weight\" ;\n    rdfs:comment \"The weight of the product or person.\" ;\n    schema:domainIncludes schema:Person,\n        schema:Product ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:weightTotal a rdf:Property ;\n    rdfs:label \"weightTotal\" ;\n    rdfs:comment \"The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.\\\\n\\\\nTypical unit code(s): KGM for kilogram, LBR for pound\\\\n\\\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\\\\\\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\\\\\\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:wheelbase a rdf:Property ;\n    rdfs:label \"wheelbase\" ;\n    rdfs:comment \"The distance between the centers of the front and rear wheels.\\\\n\\\\nTypical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet\" ;\n    schema:domainIncludes schema:Vehicle ;\n    schema:isPartOf <https://auto.schema.org> ;\n    schema:rangeIncludes schema:QuantitativeValue ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group> .\n\nschema:width a rdf:Property ;\n    rdfs:label \"width\" ;\n    rdfs:comment \"The width of the item.\" ;\n    schema:domainIncludes schema:MediaObject,\n        schema:Product,\n        schema:VisualArtwork ;\n    schema:rangeIncludes schema:Distance,\n        schema:QuantitativeValue .\n\nschema:winner a rdf:Property ;\n    rdfs:label \"winner\" ;\n    rdfs:comment \"A sub property of participant. The winner of the action.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:LoseAction ;\n    schema:rangeIncludes schema:Person .\n\nschema:wordCount a rdf:Property ;\n    rdfs:label \"wordCount\" ;\n    rdfs:comment \"The number of words in the text of the Article.\" ;\n    schema:domainIncludes schema:Article ;\n    schema:rangeIncludes schema:Integer .\n\nschema:workHours a rdf:Property ;\n    rdfs:label \"workHours\" ;\n    rdfs:comment \"The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text .\n\nschema:workLocation a rdf:Property ;\n    rdfs:label \"workLocation\" ;\n    rdfs:comment \"A contact location for a person's place of work.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:ContactPoint,\n        schema:Place .\n\nschema:workPerformed a rdf:Property ;\n    rdfs:label \"workPerformed\" ;\n    rdfs:comment \"A work performed in some event, for example a play performed in a TheaterEvent.\" ;\n    rdfs:subPropertyOf schema:workFeatured ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:workPresented a rdf:Property ;\n    rdfs:label \"workPresented\" ;\n    rdfs:comment \"The movie presented during this event.\" ;\n    rdfs:subPropertyOf schema:workFeatured ;\n    schema:domainIncludes schema:ScreeningEvent ;\n    schema:rangeIncludes schema:Movie .\n\nschema:workload a rdf:Property ;\n    rdfs:label \"workload\" ;\n    rdfs:comment \"Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.\" ;\n    schema:domainIncludes schema:ExercisePlan ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Energy,\n        schema:QuantitativeValue .\n\nschema:worksFor a rdf:Property ;\n    rdfs:label \"worksFor\" ;\n    rdfs:comment \"Organizations that the person works for.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Organization .\n\nschema:worstRating a rdf:Property ;\n    rdfs:label \"worstRating\" ;\n    rdfs:comment \"The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.\" ;\n    schema:domainIncludes schema:Rating ;\n    schema:rangeIncludes schema:Number,\n        schema:Text .\n\nschema:xpath a rdf:Property ;\n    rdfs:label \"xpath\" ;\n    rdfs:comment \"An XPath, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \\\\\"Web page element\\\\\".\" ;\n    schema:domainIncludes schema:SpeakableSpecification,\n        schema:WebPageElement ;\n    schema:rangeIncludes schema:XPathType ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1389> .\n\nschema:yearBuilt a rdf:Property ;\n    rdfs:label \"yearBuilt\" ;\n    rdfs:comment \"The year an [[Accommodation]] was constructed. This corresponds to the [YearBuilt field in RESO](https://ddwiki.reso.org/display/DDW17/YearBuilt+Field). \" ;\n    schema:domainIncludes schema:Accommodation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Number ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2373> .\n\nschema:yearlyRevenue a rdf:Property ;\n    rdfs:label \"yearlyRevenue\" ;\n    rdfs:comment \"The size of the business in annual revenue.\" ;\n    schema:domainIncludes schema:BusinessAudience ;\n    schema:rangeIncludes schema:QuantitativeValue .\n\nschema:yearsInOperation a rdf:Property ;\n    rdfs:label \"yearsInOperation\" ;\n    rdfs:comment \"The age of the business.\" ;\n    schema:domainIncludes schema:BusinessAudience ;\n    schema:rangeIncludes schema:QuantitativeValue .\n\nschema:Dermatology a schema:MedicalSpecialty ;\n    rdfs:label \"Dermatology\" ;\n    rdfs:comment \"A specific branch of medical science that pertains to diagnosis and treatment of disorders of skin.\" ;\n    rdfs:subClassOf schema:MedicalBusiness ;\n    schema:isPartOf <https://health-lifesci.schema.org> .\n\nschema:actionApplication a rdf:Property ;\n    rdfs:label \"actionApplication\" ;\n    rdfs:comment \"An application that can complete the request.\" ;\n    schema:domainIncludes schema:EntryPoint ;\n    schema:rangeIncludes schema:SoftwareApplication .\n\nschema:actionOption a rdf:Property ;\n    rdfs:label \"actionOption\" ;\n    rdfs:comment \"A sub property of object. The options subject to this action.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:ChooseAction ;\n    schema:rangeIncludes schema:Text,\n        schema:Thing .\n\nschema:album a rdf:Property ;\n    rdfs:label \"album\" ;\n    rdfs:comment \"A music album.\" ;\n    schema:domainIncludes schema:MusicGroup ;\n    schema:rangeIncludes schema:MusicAlbum .\n\nschema:albumRelease a rdf:Property ;\n    rdfs:label \"albumRelease\" ;\n    rdfs:comment \"A release of this album.\" ;\n    schema:domainIncludes schema:MusicAlbum ;\n    schema:inverseOf schema:releaseOf ;\n    schema:rangeIncludes schema:MusicRelease .\n\nschema:alumni a rdf:Property ;\n    rdfs:label \"alumni\" ;\n    rdfs:comment \"Alumni of an organization.\" ;\n    schema:domainIncludes schema:EducationalOrganization,\n        schema:Organization ;\n    schema:inverseOf schema:alumniOf ;\n    schema:rangeIncludes schema:Person .\n\nschema:alumniOf a rdf:Property ;\n    rdfs:label \"alumniOf\" ;\n    rdfs:comment \"An organization that the person is an alumni of.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:inverseOf schema:alumni ;\n    schema:rangeIncludes schema:EducationalOrganization,\n        schema:Organization .\n\nschema:archiveHeld a rdf:Property ;\n    rdfs:label \"archiveHeld\"@en ;\n    rdfs:comment \"Collection, [fonds](https://en.wikipedia.org/wiki/Fonds), or item held, kept or maintained by an [[ArchiveOrganization]].\"@en ;\n    schema:domainIncludes schema:ArchiveOrganization ;\n    schema:inverseOf schema:holdingArchive ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:ArchiveComponent ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1758> .\n\nschema:arterialBranch a rdf:Property ;\n    rdfs:label \"arterialBranch\" ;\n    rdfs:comment \"The branches that comprise the arterial structure.\" ;\n    schema:domainIncludes schema:Artery ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:AnatomicalStructure .\n\nschema:artworkSurface a rdf:Property ;\n    rdfs:label \"artworkSurface\" ;\n    rdfs:comment \"The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.\" ;\n    schema:domainIncludes schema:VisualArtwork ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:attendee a rdf:Property ;\n    rdfs:label \"attendee\" ;\n    rdfs:comment \"A person or organization attending the event.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:audience a rdf:Property ;\n    rdfs:label \"audience\" ;\n    rdfs:comment \"An intended audience, i.e. a group for whom something was created.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Event,\n        schema:LodgingBusiness,\n        schema:PlayAction,\n        schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:Audience .\n\nschema:availableOnDevice a rdf:Property ;\n    rdfs:label \"availableOnDevice\" ;\n    rdfs:comment \"Device required to run the application. Used in cases where a specific make/model is required to run the application.\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text .\n\nschema:award a rdf:Property ;\n    rdfs:label \"award\" ;\n    rdfs:comment \"An award won by or for this item.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Organization,\n        schema:Person,\n        schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:Text .\n\nschema:blogPost a rdf:Property ;\n    rdfs:label \"blogPost\" ;\n    rdfs:comment \"A posting that is part of this blog.\" ;\n    schema:domainIncludes schema:Blog ;\n    schema:rangeIncludes schema:BlogPosting .\n\nschema:broker a rdf:Property ;\n    rdfs:label \"broker\" ;\n    rdfs:comment \"An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.\" ;\n    schema:domainIncludes schema:Invoice,\n        schema:Order,\n        schema:Reservation,\n        schema:Service ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:category a rdf:Property ;\n    rdfs:label \"category\" ;\n    rdfs:comment \"A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.\" ;\n    schema:domainIncludes schema:ActionAccessSpecification,\n        schema:Invoice,\n        schema:Offer,\n        schema:PhysicalActivity,\n        schema:Product,\n        schema:Recommendation,\n        schema:Service,\n        schema:SpecialAnnouncement ;\n    schema:rangeIncludes schema:PhysicalActivityCategory,\n        schema:Text,\n        schema:Thing,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1741>,\n        <https://github.com/schemaorg/schemaorg/issues/2490> .\n\nschema:clinicalPharmacology a rdf:Property ;\n    rdfs:label \"clinicalPharmacology\" ;\n    rdfs:comment \"Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).\" ;\n    schema:domainIncludes schema:Drug ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:codeSampleType a rdf:Property ;\n    rdfs:label \"codeSampleType\" ;\n    rdfs:comment \"What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.\" ;\n    schema:domainIncludes schema:SoftwareSourceCode ;\n    schema:rangeIncludes schema:Text .\n\nschema:colleague a rdf:Property ;\n    rdfs:label \"colleague\" ;\n    rdfs:comment \"A colleague of the person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person,\n        schema:URL .\n\nschema:contactPoint a rdf:Property ;\n    rdfs:label \"contactPoint\" ;\n    rdfs:comment \"A contact point for a person or organization.\" ;\n    schema:domainIncludes schema:HealthInsurancePlan,\n        schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:ContactPoint .\n\nschema:containsPlace a rdf:Property ;\n    rdfs:label \"containsPlace\" ;\n    rdfs:comment \"The basic containment relation between a place and another that it contains.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:inverseOf schema:containedInPlace ;\n    schema:rangeIncludes schema:Place .\n\nschema:containsSeason a rdf:Property ;\n    rdfs:label \"containsSeason\" ;\n    rdfs:comment \"A season that is part of the media series.\" ;\n    rdfs:subPropertyOf schema:hasPart ;\n    schema:domainIncludes schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:CreativeWorkSeason .\n\nschema:contentLocation a rdf:Property ;\n    rdfs:label \"contentLocation\" ;\n    rdfs:comment \"The location depicted or described in the content. For example, the location in a photograph or painting.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Place .\n\nschema:creator a rdf:Property ;\n    rdfs:label \"creator\" ;\n    rdfs:comment \"The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:UserComments ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:dataset a rdf:Property ;\n    rdfs:label \"dataset\" ;\n    rdfs:comment \"A dataset contained in this catalog.\" ;\n    schema:domainIncludes schema:DataCatalog ;\n    schema:inverseOf schema:includedInDataCatalog ;\n    schema:rangeIncludes schema:Dataset .\n\nschema:dateCreated a rdf:Property ;\n    rdfs:label \"dateCreated\" ;\n    rdfs:comment \"The date on which the CreativeWork was created or the item was added to a DataFeed.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:DataFeedItem ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:description a rdf:Property ;\n    rdfs:label \"description\" ;\n    rdfs:comment \"A description of the item.\" ;\n    ns2:equivalentProperty <http://purl.org/dc/terms/description> ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:Text .\n\nschema:director a rdf:Property ;\n    rdfs:label \"director\" ;\n    rdfs:comment \"A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.\" ;\n    schema:domainIncludes schema:Clip,\n        schema:CreativeWorkSeason,\n        schema:Episode,\n        schema:Event,\n        schema:Movie,\n        schema:MovieSeries,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGame,\n        schema:VideoGameSeries,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:Person .\n\nschema:duration a rdf:Property ;\n    rdfs:label \"duration\" ;\n    rdfs:comment \"The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).\" ;\n    schema:domainIncludes schema:Audiobook,\n        schema:Episode,\n        schema:Event,\n        schema:MediaObject,\n        schema:Movie,\n        schema:MusicRecording,\n        schema:MusicRelease,\n        schema:QuantitativeValueDistribution,\n        schema:Schedule ;\n    schema:rangeIncludes schema:Duration ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1457>,\n        <https://github.com/schemaorg/schemaorg/issues/1698> .\n\nschema:employee a rdf:Property ;\n    rdfs:label \"employee\" ;\n    rdfs:comment \"Someone working for this organization.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Person .\n\nschema:encodesCreativeWork a rdf:Property ;\n    rdfs:label \"encodesCreativeWork\" ;\n    rdfs:comment \"The CreativeWork encoded by this media object.\" ;\n    schema:domainIncludes schema:MediaObject ;\n    schema:inverseOf schema:encoding ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:encodingFormat a rdf:Property ;\n    rdfs:label \"encodingFormat\" ;\n    rdfs:comment \"\"\"Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).\n\nIn cases where a [[CreativeWork]] has several media type representations, [[encoding]] can be used to indicate each [[MediaObject]] alongside particular [[encodingFormat]] information.\n\nUnregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.\"\"\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:MediaObject ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:episode a rdf:Property ;\n    rdfs:label \"episode\" ;\n    rdfs:comment \"An episode of a tv, radio or game media within a series or season.\" ;\n    rdfs:subPropertyOf schema:hasPart ;\n    schema:domainIncludes schema:CreativeWorkSeason,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:Episode .\n\nschema:event a rdf:Property ;\n    rdfs:label \"event\" ;\n    rdfs:comment \"Upcoming or past event associated with this place, organization, or action.\" ;\n    schema:domainIncludes schema:InformAction,\n        schema:InviteAction,\n        schema:JoinAction,\n        schema:LeaveAction,\n        schema:Organization,\n        schema:Place,\n        schema:PlayAction ;\n    schema:rangeIncludes schema:Event .\n\nschema:exampleOfWork a rdf:Property ;\n    rdfs:label \"exampleOfWork\" ;\n    rdfs:comment \"A creative work that this work is an example/instance/realization/derivation of.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:workExample ;\n    schema:rangeIncludes schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:executableLibraryName a rdf:Property ;\n    rdfs:label \"executableLibraryName\" ;\n    rdfs:comment \"Library file name e.g., mscorlib.dll, system.web.dll.\" ;\n    schema:domainIncludes schema:APIReference ;\n    schema:rangeIncludes schema:Text .\n\nschema:exerciseCourse a rdf:Property ;\n    rdfs:label \"exerciseCourse\" ;\n    rdfs:comment \"A sub property of location. The course where this action was taken.\" ;\n    rdfs:subPropertyOf schema:location ;\n    schema:domainIncludes schema:ExerciseAction ;\n    schema:rangeIncludes schema:Place .\n\nschema:founder a rdf:Property ;\n    rdfs:label \"founder\" ;\n    rdfs:comment \"A person who founded this organization.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:rangeIncludes schema:Person .\n\nschema:frequency a rdf:Property ;\n    rdfs:label \"frequency\" ;\n    rdfs:comment \"How often the dose is taken, e.g. 'daily'.\" ;\n    schema:domainIncludes schema:DoseSchedule ;\n    schema:isPartOf <https://health-lifesci.schema.org> ;\n    schema:rangeIncludes schema:Text .\n\nschema:game a rdf:Property ;\n    rdfs:label \"game\" ;\n    rdfs:comment \"Video game which is played on this server.\" ;\n    schema:domainIncludes schema:GameServer ;\n    schema:inverseOf schema:gameServer ;\n    schema:rangeIncludes schema:VideoGame .\n\nschema:gameServer a rdf:Property ;\n    rdfs:label \"gameServer\" ;\n    rdfs:comment \"The server on which  it is possible to play the game.\" ;\n    schema:domainIncludes schema:VideoGame ;\n    schema:inverseOf schema:game ;\n    schema:rangeIncludes schema:GameServer .\n\nschema:genre a rdf:Property ;\n    rdfs:label \"genre\" ;\n    rdfs:comment \"Genre of the creative work, broadcast channel or group.\" ;\n    schema:domainIncludes schema:BroadcastChannel,\n        schema:CreativeWork,\n        schema:MusicGroup ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:hasBroadcastChannel a rdf:Property ;\n    rdfs:label \"hasBroadcastChannel\" ;\n    rdfs:comment \"A broadcast channel of a broadcast service.\" ;\n    schema:domainIncludes schema:BroadcastService ;\n    schema:inverseOf schema:providesBroadcastService ;\n    schema:rangeIncludes schema:BroadcastChannel ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1004> .\n\nschema:hasDefinedTerm a rdf:Property ;\n    rdfs:label \"hasDefinedTerm\" ;\n    rdfs:comment \"A Defined Term contained in this term set.\" ;\n    schema:domainIncludes schema:DefinedTermSet ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTerm ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:hasMenu a rdf:Property ;\n    rdfs:label \"hasMenu\" ;\n    rdfs:comment \"Either the actual menu as a structured representation, as text, or a URL of the menu.\" ;\n    schema:domainIncludes schema:FoodEstablishment ;\n    schema:rangeIncludes schema:Menu,\n        schema:Text,\n        schema:URL .\n\nschema:hasVariant a rdf:Property ;\n    rdfs:label \"hasVariant\" ;\n    rdfs:comment \"Indicates a [[Product]] that is a member of this [[ProductGroup]] (or [[ProductModel]]).\" ;\n    schema:domainIncludes schema:ProductGroup ;\n    schema:inverseOf schema:isVariantOf ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Product ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1797> .\n\nschema:holdingArchive a rdf:Property ;\n    rdfs:label \"holdingArchive\"@en ;\n    rdfs:comment \"[[ArchiveOrganization]] that holds, keeps or maintains the [[ArchiveComponent]].\"@en ;\n    schema:domainIncludes schema:ArchiveComponent ;\n    schema:inverseOf schema:archiveHeld ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:ArchiveOrganization ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1758> .\n\nschema:inDefinedTermSet a rdf:Property ;\n    rdfs:label \"inDefinedTermSet\" ;\n    rdfs:comment \"A [[DefinedTermSet]] that contains this term.\" ;\n    rdfs:subPropertyOf schema:isPartOf ;\n    schema:domainIncludes schema:DefinedTerm ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:DefinedTermSet,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:inLanguage a rdf:Property ;\n    rdfs:label \"inLanguage\" ;\n    rdfs:comment \"The language of the content or performance or used in an action. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[availableLanguage]].\" ;\n    schema:domainIncludes schema:BroadcastService,\n        schema:CommunicateAction,\n        schema:CreativeWork,\n        schema:Event,\n        schema:LinkRole,\n        schema:PronounceableText,\n        schema:WriteAction ;\n    schema:rangeIncludes schema:Language,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2382> .\n\nschema:incentiveCompensation a rdf:Property ;\n    rdfs:label \"incentiveCompensation\" ;\n    rdfs:comment \"Description of bonus and commission compensation aspects of the job.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text .\n\nschema:interactionStatistic a rdf:Property ;\n    rdfs:label \"interactionStatistic\" ;\n    rdfs:comment \"The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:InteractionCounter ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2421> .\n\nschema:isAccessibleForFree a rdf:Property ;\n    rdfs:label \"isAccessibleForFree\" ;\n    rdfs:comment \"A flag to signal that the item, event, or place is accessible for free.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Event,\n        schema:Place ;\n    schema:rangeIncludes schema:Boolean .\n\nschema:isBasedOn a rdf:Property ;\n    rdfs:label \"isBasedOn\" ;\n    rdfs:comment \"A resource from which this work is derived or from which it is a modification or adaption.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:Product,\n        schema:URL .\n\nschema:isVariantOf a rdf:Property ;\n    rdfs:label \"isVariantOf\" ;\n    rdfs:comment \"Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.\" ;\n    schema:domainIncludes schema:Product,\n        schema:ProductModel ;\n    schema:inverseOf schema:hasVariant ;\n    schema:rangeIncludes schema:ProductGroup,\n        schema:ProductModel ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:itemOffered a rdf:Property ;\n    rdfs:label \"itemOffered\" ;\n    rdfs:comment \"An item being offered (or demanded). The transactional nature of the offer or demand is documented using [[businessFunction]], e.g. sell, lease etc. While several common expected types are listed explicitly in this definition, others can be used. Using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:inverseOf schema:offers ;\n    schema:rangeIncludes schema:AggregateOffer,\n        schema:CreativeWork,\n        schema:Event,\n        schema:MenuItem,\n        schema:Product,\n        schema:Service,\n        schema:Trip .\n\nschema:jobBenefits a rdf:Property ;\n    rdfs:label \"jobBenefits\" ;\n    rdfs:comment \"Description of benefits associated with the job.\" ;\n    schema:domainIncludes schema:JobPosting ;\n    schema:rangeIncludes schema:Text .\n\nschema:jurisdiction a rdf:Property ;\n    rdfs:label \"jurisdiction\" ;\n    rdfs:comment \"Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.\" ;\n    schema:domainIncludes schema:GovernmentService,\n        schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:AdministrativeArea,\n        schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2534> .\n\nschema:legislationApplies a rdf:Property ;\n    rdfs:label \"legislationApplies\" ;\n    rdfs:comment \"Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href=\\\\\"/legislationTransposes\\\\\">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state \\\\\"applies\\\\\" the consolidated version of the European Directive implemented in it.\" ;\n    ns2:equivalentProperty <http://data.europa.eu/eli/ontology#implements> ;\n    ns1:exactMatch <http://data.europa.eu/eli/ontology#implements> ;\n    schema:domainIncludes schema:Legislation ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Legislation ;\n    schema:source <http://publications.europa.eu/mdr/eli/index.html>,\n        <https://github.com/schemaorg/schemaorg/issues/1156> .\n\nschema:mainContentOfPage a rdf:Property ;\n    rdfs:label \"mainContentOfPage\" ;\n    rdfs:comment \"Indicates if this web page element is the main subject of the page.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:WebPageElement .\n\nschema:mainEntity a rdf:Property ;\n    rdfs:label \"mainEntity\" ;\n    rdfs:comment \"Indicates the primary entity described in some page or other CreativeWork.\" ;\n    rdfs:subPropertyOf schema:about ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:mainEntityOfPage ;\n    schema:rangeIncludes schema:Thing .\n\nschema:mainEntityOfPage a rdf:Property ;\n    rdfs:label \"mainEntityOfPage\" ;\n    rdfs:comment \"Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.\" ;\n    schema:domainIncludes schema:Thing ;\n    schema:inverseOf schema:mainEntity ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL .\n\nschema:makesOffer a rdf:Property ;\n    rdfs:label \"makesOffer\" ;\n    rdfs:comment \"A pointer to products or services offered by the organization or person.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:inverseOf schema:offeredBy ;\n    schema:rangeIncludes schema:Offer ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:offeredBy a rdf:Property ;\n    rdfs:label \"offeredBy\" ;\n    rdfs:comment \"A pointer to the organization or person making the offer.\" ;\n    schema:domainIncludes schema:Offer ;\n    schema:inverseOf schema:makesOffer ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:offers a rdf:Property ;\n    rdfs:label \"offers\" ;\n    rdfs:comment \"\"\"An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.\n      \"\"\" ;\n    schema:domainIncludes schema:AggregateOffer,\n        schema:CreativeWork,\n        schema:EducationalOccupationalProgram,\n        schema:Event,\n        schema:MenuItem,\n        schema:Product,\n        schema:Service,\n        schema:Trip ;\n    schema:inverseOf schema:itemOffered ;\n    schema:rangeIncludes schema:Demand,\n        schema:Offer ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:parent a rdf:Property ;\n    rdfs:label \"parent\" ;\n    rdfs:comment \"A parent of this person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person .\n\nschema:partOfSeries a rdf:Property ;\n    rdfs:label \"partOfSeries\" ;\n    rdfs:comment \"The series to which this episode or season belongs.\" ;\n    rdfs:subPropertyOf schema:isPartOf ;\n    schema:domainIncludes schema:Clip,\n        schema:CreativeWorkSeason,\n        schema:Episode ;\n    schema:rangeIncludes schema:CreativeWorkSeries .\n\nschema:partOfTrip a rdf:Property ;\n    rdfs:label \"partOfTrip\" ;\n    rdfs:comment \"Identifies that this [[Trip]] is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.\" ;\n    schema:domainIncludes schema:Trip ;\n    schema:inverseOf schema:subTrip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Trip ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism>,\n        <https://github.com/schemaorg/schemaorg/issues/1810> .\n\nschema:paymentDueDate a rdf:Property ;\n    rdfs:label \"paymentDueDate\" ;\n    rdfs:comment \"The date that payment is due.\" ;\n    schema:domainIncludes schema:Invoice,\n        schema:Order ;\n    schema:rangeIncludes schema:Date,\n        schema:DateTime .\n\nschema:performTime a rdf:Property ;\n    rdfs:label \"performTime\" ;\n    rdfs:comment \"The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).\" ;\n    schema:domainIncludes schema:HowTo,\n        schema:HowToDirection ;\n    schema:rangeIncludes schema:Duration .\n\nschema:performer a rdf:Property ;\n    rdfs:label \"performer\" ;\n    rdfs:comment \"A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:photo a rdf:Property ;\n    rdfs:label \"photo\" ;\n    rdfs:comment \"A photograph of this place.\" ;\n    rdfs:subPropertyOf schema:image ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:ImageObject,\n        schema:Photograph .\n\nschema:provider a rdf:Property ;\n    rdfs:label \"provider\" ;\n    rdfs:comment \"The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:EducationalOccupationalProgram,\n        schema:Invoice,\n        schema:ParcelDelivery,\n        schema:Reservation,\n        schema:Service,\n        schema:Trip ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2289> .\n\nschema:providesBroadcastService a rdf:Property ;\n    rdfs:label \"providesBroadcastService\" ;\n    rdfs:comment \"The BroadcastService offered on this channel.\" ;\n    schema:domainIncludes schema:BroadcastChannel ;\n    schema:inverseOf schema:hasBroadcastChannel ;\n    schema:rangeIncludes schema:BroadcastService .\n\nschema:recipeIngredient a rdf:Property ;\n    rdfs:label \"recipeIngredient\" ;\n    rdfs:comment \"A single ingredient used in the recipe, e.g. sugar, flour or garlic.\" ;\n    rdfs:subPropertyOf schema:supply ;\n    schema:domainIncludes schema:Recipe ;\n    schema:rangeIncludes schema:Text .\n\nschema:recordedAs a rdf:Property ;\n    rdfs:label \"recordedAs\" ;\n    rdfs:comment \"An audio recording of the work.\" ;\n    schema:domainIncludes schema:MusicComposition ;\n    schema:inverseOf schema:recordingOf ;\n    schema:rangeIncludes schema:MusicRecording ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:recordedAt a rdf:Property ;\n    rdfs:label \"recordedAt\" ;\n    rdfs:comment \"The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:recordedIn ;\n    schema:rangeIncludes schema:Event .\n\nschema:recordedIn a rdf:Property ;\n    rdfs:label \"recordedIn\" ;\n    rdfs:comment \"The CreativeWork that captured all or part of this Event.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:inverseOf schema:recordedAt ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:recordingOf a rdf:Property ;\n    rdfs:label \"recordingOf\" ;\n    rdfs:comment \"The composition this track is a recording of.\" ;\n    schema:domainIncludes schema:MusicRecording ;\n    schema:inverseOf schema:recordedAs ;\n    schema:rangeIncludes schema:MusicComposition ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:releaseOf a rdf:Property ;\n    rdfs:label \"releaseOf\" ;\n    rdfs:comment \"The album this is a release of.\" ;\n    schema:domainIncludes schema:MusicRelease ;\n    schema:inverseOf schema:albumRelease ;\n    schema:rangeIncludes schema:MusicAlbum ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:review a rdf:Property ;\n    rdfs:label \"review\" ;\n    rdfs:comment \"A review of the item.\" ;\n    schema:domainIncludes schema:Brand,\n        schema:CreativeWork,\n        schema:Event,\n        schema:Offer,\n        schema:Organization,\n        schema:Place,\n        schema:Product,\n        schema:Service ;\n    schema:rangeIncludes schema:Review .\n\nschema:roleName a rdf:Property ;\n    rdfs:label \"roleName\" ;\n    rdfs:comment \"A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.\" ;\n    schema:domainIncludes schema:Role ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:runtimePlatform a rdf:Property ;\n    rdfs:label \"runtimePlatform\" ;\n    rdfs:comment \"Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).\" ;\n    schema:domainIncludes schema:SoftwareSourceCode ;\n    schema:rangeIncludes schema:Text .\n\nschema:season a rdf:Property ;\n    rdfs:label \"season\" ;\n    rdfs:comment \"A season in a media series.\" ;\n    rdfs:subPropertyOf schema:hasPart ;\n    schema:domainIncludes schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGameSeries ;\n    schema:rangeIncludes schema:CreativeWorkSeason,\n        schema:URL ;\n    schema:supersededBy schema:containsSeason .\n\nschema:serialNumber a rdf:Property ;\n    rdfs:label \"serialNumber\" ;\n    rdfs:comment \"The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Demand,\n        schema:IndividualProduct,\n        schema:Offer ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:serviceArea a rdf:Property ;\n    rdfs:label \"serviceArea\" ;\n    rdfs:comment \"The geographic area where the service is provided.\" ;\n    schema:domainIncludes schema:ContactPoint,\n        schema:Organization,\n        schema:Service ;\n    schema:rangeIncludes schema:AdministrativeArea,\n        schema:GeoShape,\n        schema:Place ;\n    schema:supersededBy schema:areaServed .\n\nschema:serviceOutput a rdf:Property ;\n    rdfs:label \"serviceOutput\" ;\n    rdfs:comment \"The tangible thing generated by the service, e.g. a passport, permit, etc.\" ;\n    schema:domainIncludes schema:Service ;\n    schema:rangeIncludes schema:Thing .\n\nschema:sibling a rdf:Property ;\n    rdfs:label \"sibling\" ;\n    rdfs:comment \"A sibling of the person.\" ;\n    schema:domainIncludes schema:Person ;\n    schema:rangeIncludes schema:Person .\n\nschema:significantLink a rdf:Property ;\n    rdfs:label \"significantLink\" ;\n    rdfs:comment \"One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.\" ;\n    schema:domainIncludes schema:WebPage ;\n    schema:rangeIncludes schema:URL .\n\nschema:softwareRequirements a rdf:Property ;\n    rdfs:label \"softwareRequirements\" ;\n    rdfs:comment \"Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).\" ;\n    schema:domainIncludes schema:SoftwareApplication ;\n    schema:rangeIncludes schema:Text,\n        schema:URL .\n\nschema:sponsor a rdf:Property ;\n    rdfs:label \"sponsor\" ;\n    rdfs:comment \"A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Event,\n        schema:Grant,\n        schema:MedicalStudy,\n        schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:subOrganization a rdf:Property ;\n    rdfs:label \"subOrganization\" ;\n    rdfs:comment \"A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:inverseOf schema:parentOrganization ;\n    schema:rangeIncludes schema:Organization .\n\nschema:subTrip a rdf:Property ;\n    rdfs:label \"subTrip\" ;\n    rdfs:comment \"Identifies a [[Trip]] that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.\" ;\n    schema:domainIncludes schema:Trip ;\n    schema:inverseOf schema:partOfTrip ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Trip ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism>,\n        <https://github.com/schemaorg/schemaorg/issues/1810> .\n\nschema:subjectOf a rdf:Property ;\n    rdfs:label \"subjectOf\" ;\n    rdfs:comment \"A CreativeWork or Event about this Thing.\" ;\n    schema:domainIncludes schema:Thing ;\n    schema:inverseOf schema:about ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:Event ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1670> .\n\nschema:suggestedAnswer a rdf:Property ;\n    rdfs:label \"suggestedAnswer\" ;\n    rdfs:comment \"An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.\" ;\n    schema:domainIncludes schema:Question ;\n    schema:rangeIncludes schema:Answer,\n        schema:ItemList .\n\nschema:superEvent a rdf:Property ;\n    rdfs:label \"superEvent\" ;\n    rdfs:comment \"An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:inverseOf schema:subEvent ;\n    schema:rangeIncludes schema:Event .\n\nschema:targetCollection a rdf:Property ;\n    rdfs:label \"targetCollection\" ;\n    rdfs:comment \"A sub property of object. The collection target of the action.\" ;\n    rdfs:subPropertyOf schema:object ;\n    schema:domainIncludes schema:UpdateAction ;\n    schema:rangeIncludes schema:Thing .\n\nschema:temporalCoverage a rdf:Property ;\n    rdfs:label \"temporalCoverage\" ;\n    rdfs:comment \"\"\"The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals). In\n      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.\n      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\".\n\nOpen-ended date ranges can be written with \"..\" in place of the end date. For example, \"2015-11/..\" indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.\"\"\" ;\n    ns2:equivalentProperty <http://purl.org/dc/terms/temporal> ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:DateTime,\n        schema:Text,\n        schema:URL .\n\nschema:termCode a rdf:Property ;\n    rdfs:label \"termCode\" ;\n    rdfs:comment \"A code that identifies this [[DefinedTerm]] within a [[DefinedTermSet]]\" ;\n    schema:domainIncludes schema:DefinedTerm ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/894> .\n\nschema:track a rdf:Property ;\n    rdfs:label \"track\" ;\n    rdfs:comment \"A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.\" ;\n    schema:domainIncludes schema:MusicGroup,\n        schema:MusicPlaylist ;\n    schema:rangeIncludes schema:ItemList,\n        schema:MusicRecording ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ> .\n\nschema:translationOfWork a rdf:Property ;\n    rdfs:label \"translationOfWork\" ;\n    rdfs:comment \"The work that this work has been translated from. e.g. ç‰©ç§èµ·æº is a translationOf â€œOn the Origin of Speciesâ€\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:workTranslation ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:usageInfo a rdf:Property ;\n    rdfs:label \"usageInfo\" ;\n    rdfs:comment \"\"\"The schema.org [[usageInfo]] property indicates further information about a [[CreativeWork]]. This property is applicable both to works that are freely available and to those that require payment or other transactions. It can reference additional information e.g. community expectations on preferred linking and citation conventions, as well as purchasing details. For something that can be commercially licensed, usageInfo can provide detailed, resource-specific information about licensing options.\n\nThis property can be used alongside the license property which indicates license(s) applicable to some piece of content. The usageInfo property can provide information about other licensing options, e.g. acquiring commercial usage rights for an image that is also available under non-commercial creative commons licenses.\"\"\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2454> .\n\nschema:warranty a rdf:Property ;\n    rdfs:label \"warranty\" ;\n    rdfs:comment \"The warranty promise(s) included in the offer.\" ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer ;\n    schema:rangeIncludes schema:WarrantyPromise ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms> .\n\nschema:workTranslation a rdf:Property ;\n    rdfs:label \"workTranslation\" ;\n    rdfs:comment \"A work that is a translation of the content of this work. e.g. è¥¿éŠè¨˜ has an English workTranslation â€œJourney to the Westâ€,a German workTranslation â€œMonkeys Pilgerfahrtâ€ and a Vietnamese  translation TÃ¢y du kÃ½ bÃ¬nh kháº£o.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:translationOfWork ;\n    schema:isPartOf <https://bib.schema.org> ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:yield a rdf:Property ;\n    rdfs:label \"yield\" ;\n    rdfs:comment \"The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.\" ;\n    schema:domainIncludes schema:HowTo ;\n    schema:rangeIncludes schema:QuantitativeValue,\n        schema:Text .\n\nschema:about a rdf:Property ;\n    rdfs:label \"about\" ;\n    rdfs:comment \"The subject matter of the content.\" ;\n    schema:domainIncludes schema:CommunicateAction,\n        schema:CreativeWork,\n        schema:Event ;\n    schema:inverseOf schema:subjectOf ;\n    schema:rangeIncludes schema:Thing ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/1670> .\n\nschema:actor a rdf:Property ;\n    rdfs:label \"actor\" ;\n    rdfs:comment \"An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.\" ;\n    schema:domainIncludes schema:Clip,\n        schema:CreativeWorkSeason,\n        schema:Episode,\n        schema:Event,\n        schema:Movie,\n        schema:MovieSeries,\n        schema:RadioSeries,\n        schema:TVSeries,\n        schema:VideoGame,\n        schema:VideoGameSeries,\n        schema:VideoObject ;\n    schema:rangeIncludes schema:Person .\n\nschema:competitor a rdf:Property ;\n    rdfs:label \"competitor\" ;\n    rdfs:comment \"A competitor in a sports event.\" ;\n    schema:domainIncludes schema:SportsEvent ;\n    schema:rangeIncludes schema:Person,\n        schema:SportsTeam .\n\nschema:containedInPlace a rdf:Property ;\n    rdfs:label \"containedInPlace\" ;\n    rdfs:comment \"The basic containment relation between a place and one that contains it.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:inverseOf schema:containsPlace ;\n    schema:rangeIncludes schema:Place .\n\nschema:encoding a rdf:Property ;\n    rdfs:label \"encoding\" ;\n    rdfs:comment \"A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:encodesCreativeWork ;\n    schema:rangeIncludes schema:MediaObject .\n\nschema:hasMap a rdf:Property ;\n    rdfs:label \"hasMap\" ;\n    rdfs:comment \"A URL to a map of the place.\" ;\n    schema:domainIncludes schema:Place ;\n    schema:rangeIncludes schema:Map,\n        schema:URL .\n\nschema:material a rdf:Property ;\n    rdfs:label \"material\" ;\n    rdfs:comment \"A material that something is made from, e.g. leather, wool, cotton, paper.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Product ;\n    schema:rangeIncludes schema:Product,\n        schema:Text,\n        schema:URL .\n\nschema:memberOf a rdf:Property ;\n    rdfs:label \"memberOf\" ;\n    rdfs:comment \"An Organization (or ProgramMembership) to which this Person or Organization belongs.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:Person ;\n    schema:inverseOf schema:member ;\n    schema:rangeIncludes schema:Organization,\n        schema:ProgramMembership .\n\nschema:parentOrganization a rdf:Property ;\n    rdfs:label \"parentOrganization\" ;\n    rdfs:comment \"The larger organization that this organization is a [[subOrganization]] of, if any.\" ;\n    schema:domainIncludes schema:Organization ;\n    schema:inverseOf schema:subOrganization ;\n    schema:rangeIncludes schema:Organization .\n\nschema:result a rdf:Property ;\n    rdfs:label \"result\" ;\n    rdfs:comment \"The result produced in the action. e.g. John wrote *a book*.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:Thing .\n\nschema:seller a rdf:Property ;\n    rdfs:label \"seller\" ;\n    rdfs:comment \"An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:BuyAction,\n        schema:Demand,\n        schema:Flight,\n        schema:Offer,\n        schema:Order ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:spatialCoverage a rdf:Property ;\n    rdfs:label \"spatialCoverage\" ;\n    rdfs:comment \"\"\"The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of\n      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates\n      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.\"\"\" ;\n    rdfs:subPropertyOf schema:contentLocation ;\n    ns2:equivalentProperty <http://purl.org/dc/terms/spatial> ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:rangeIncludes schema:Place .\n\nschema:step a rdf:Property ;\n    rdfs:label \"step\" ;\n    rdfs:comment \"A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.\" ;\n    schema:domainIncludes schema:HowTo ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:HowToSection,\n        schema:HowToStep,\n        schema:Text .\n\nschema:subEvent a rdf:Property ;\n    rdfs:label \"subEvent\" ;\n    rdfs:comment \"An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.\" ;\n    schema:domainIncludes schema:Event ;\n    schema:inverseOf schema:superEvent ;\n    schema:rangeIncludes schema:Event .\n\nschema:supply a rdf:Property ;\n    rdfs:label \"supply\" ;\n    rdfs:comment \"A sub-property of instrument. A supply consumed when performing instructions or a direction.\" ;\n    rdfs:subPropertyOf schema:instrument ;\n    schema:domainIncludes schema:HowTo,\n        schema:HowToDirection ;\n    schema:rangeIncludes schema:HowToSupply,\n        schema:Text .\n\nschema:workFeatured a rdf:Property ;\n    rdfs:label \"workFeatured\" ;\n    rdfs:comment \"\"\"A work featured in some event, e.g. exhibited in an ExhibitionEvent.\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).\"\"\" ;\n    schema:domainIncludes schema:Event ;\n    schema:rangeIncludes schema:CreativeWork .\n\nschema:areaServed a rdf:Property ;\n    rdfs:label \"areaServed\" ;\n    rdfs:comment \"The geographic area where a service or offered item is provided.\" ;\n    schema:domainIncludes schema:ContactPoint,\n        schema:DeliveryChargeSpecification,\n        schema:Demand,\n        schema:Offer,\n        schema:Organization,\n        schema:Service ;\n    schema:rangeIncludes schema:AdministrativeArea,\n        schema:GeoShape,\n        schema:Place,\n        schema:Text .\n\nschema:image a rdf:Property ;\n    rdfs:label \"image\" ;\n    rdfs:comment \"An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].\" ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:ImageObject,\n        schema:URL .\n\nschema:includedInDataCatalog a rdf:Property ;\n    rdfs:label \"includedInDataCatalog\" ;\n    rdfs:comment \"A data catalog which contains this dataset.\" ;\n    schema:domainIncludes schema:Dataset ;\n    schema:inverseOf schema:dataset ;\n    schema:rangeIncludes schema:DataCatalog .\n\nschema:member a rdf:Property ;\n    rdfs:label \"member\" ;\n    rdfs:comment \"A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.\" ;\n    schema:domainIncludes schema:Organization,\n        schema:ProgramMembership ;\n    schema:inverseOf schema:memberOf ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:recipient a rdf:Property ;\n    rdfs:label \"recipient\" ;\n    rdfs:comment \"A sub property of participant. The participant who is at the receiving end of the action.\" ;\n    rdfs:subPropertyOf schema:participant ;\n    schema:domainIncludes schema:AuthorizeAction,\n        schema:CommunicateAction,\n        schema:DonateAction,\n        schema:GiveAction,\n        schema:Message,\n        schema:PayAction,\n        schema:ReturnAction,\n        schema:SendAction,\n        schema:TipAction ;\n    schema:rangeIncludes schema:Audience,\n        schema:ContactPoint,\n        schema:Organization,\n        schema:Person .\n\nschema:workExample a rdf:Property ;\n    rdfs:label \"workExample\" ;\n    rdfs:comment \"Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:exampleOfWork ;\n    schema:rangeIncludes schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:gtin a rdf:Property ;\n    rdfs:label \"gtin\" ;\n    rdfs:comment \"\"\"A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties. The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) express GTINs as URLs. A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a \"GS1 Digital Link\" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged.\n   \"\"\" ;\n    rdfs:subPropertyOf schema:identifier ;\n    schema:domainIncludes schema:Demand,\n        schema:Offer,\n        schema:Product ;\n    schema:isPartOf <https://pending.schema.org> ;\n    schema:rangeIncludes schema:Text ;\n    schema:source <https://github.com/schemaorg/schemaorg/issues/2288> .\n\nschema:hasPart a rdf:Property ;\n    rdfs:label \"hasPart\" ;\n    rdfs:comment \"Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:isPartOf ;\n    schema:rangeIncludes schema:CreativeWork ;\n    schema:source <http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex> .\n\nschema:position a rdf:Property ;\n    rdfs:label \"position\" ;\n    rdfs:comment \"The position of an item in a series or sequence of items.\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:ListItem ;\n    schema:rangeIncludes schema:Integer,\n        schema:Text .\n\nschema:isPartOf a rdf:Property ;\n    rdfs:label \"isPartOf\" ;\n    rdfs:comment \"Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.\" ;\n    schema:domainIncludes schema:CreativeWork ;\n    schema:inverseOf schema:hasPart ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL .\n\nschema:instrument a rdf:Property ;\n    rdfs:label \"instrument\" ;\n    rdfs:comment \"The object that helped the agent perform the action. e.g. John wrote a book with *a pen*.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:Thing .\n\nschema:object a rdf:Property ;\n    rdfs:label \"object\" ;\n    rdfs:comment \"The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read *a book*.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:Thing .\n\nschema:publishingPrinciples a rdf:Property ;\n    rdfs:label \"publishingPrinciples\" ;\n    rdfs:comment \"\"\"The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].\n\nWhile such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.\n\"\"\" ;\n    schema:domainIncludes schema:CreativeWork,\n        schema:Organization,\n        schema:Person ;\n    schema:rangeIncludes schema:CreativeWork,\n        schema:URL .\n\nschema:location a rdf:Property ;\n    rdfs:label \"location\" ;\n    rdfs:comment \"The location of, for example, where an event is happening, where an organization is located, or where an action takes place.\" ;\n    schema:domainIncludes schema:Action,\n        schema:Event,\n        schema:Organization ;\n    schema:rangeIncludes schema:Place,\n        schema:PostalAddress,\n        schema:Text,\n        schema:VirtualLocation .\n\nschema:participant a rdf:Property ;\n    rdfs:label \"participant\" ;\n    rdfs:comment \"Other co-agents that participated in the action indirectly. e.g. John wrote a book with *Steve*.\" ;\n    schema:domainIncludes schema:Action ;\n    schema:rangeIncludes schema:Organization,\n        schema:Person .\n\nschema:identifier a rdf:Property ;\n    rdfs:label \"identifier\" ;\n    rdfs:comment \"\"\"The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.\n        \"\"\" ;\n    ns2:equivalentProperty <http://purl.org/dc/terms/identifier> ;\n    schema:domainIncludes schema:Thing ;\n    schema:rangeIncludes schema:PropertyValue,\n        schema:Text,\n        schema:URL .\n`;\n\nexport default schemaOrgTurtleFileString;\n","import SimpleSchema from \"simpl-schema\";\nimport { XLSForm } from \"../../types/XLSForm\";\nimport ODKFormulaEvaluationContext from \"../odk-formulas/evaluation/ODKFormulaEvaluationContext\";\nimport createRecursiveNodeSchemaDefinition from \"./createRecursiveNodeSchemaDefinition\";\n\n/**\n * @returns a `SimpleSchema` definition for a whole XLSFormthat you can use to validate\n * survey results at runtime.\n */\nexport function createSurveySchemaFromXLSForm(\n  xlsForm: XLSForm,\n  context: ODKFormulaEvaluationContext,\n  language: string\n): SimpleSchema {\n  const schemaDefinition = createRecursiveNodeSchemaDefinition({\n    node: xlsForm.rootSurveyGroup,\n    xlsForm,\n    context,\n    language,\n    key: xlsForm.rootSurveyGroup.row.name,\n  });\n\n  const schema = new SimpleSchema(\n    new SimpleSchema(schemaDefinition).mergedSchema()\n  );\n\n  return schema;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { enableAllPlugins, enablePatches } from \"immer\";\n\nenableAllPlugins();\nenablePatches();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}